!This program cannot be run in DOS mode.
`.rdata
@.idata
@.rodata
@_RDATA
@.reloc
(t$0A\][^_
ffffff.
UVWATAUAVAWH
s D+s$A
t%HcS$H
0A_A^A]A\_^]
VWATAVAWH
A_A^A\_^
|$ AUAVAWH
 A_A^A]
D$ D1L$ 
SUVWAVAWH
HA_A^_^][
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
@WATAUAVH
8A^A]A\_
t$@H;\$H
@SAUAWH
@UATAWH
D9bpu6H
D$HMc9A
\$hA;Xd
@VATAUAVAWH
0A_A^A]A\^
UVWATAUAVAWH
@A_A^A]A\_^]
SUVWAUAVH
L$0H;D$X
A^A]_^][
l$ VWAVH
@SUWAWH
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
D$`1T$`
A_A^A]A\_^][
|$4A9yd
HcL$4Ic
|$ ATAVAW
t$0A_A^A\
@SUVWATAUAVAWH
8A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
L$ UVWATAUAVAWH
0A_A^A]A\_^]
@USATAUAVH
A^A]A\[]
t$ WATAUAVAWH
0A_A^A]A\_
|$ ATAVAWH
 A_A^A\H
@SUVWATAUAVAW
A_A^A]A\_^][
UVWATAUAVAW
A_A^A]A\_^]
USVAUAVH
C8HcC,A
"HcC,Hk
A^A]^[]
|$ ATAVAW
t$0A_A^A\
@UVWAVH
L$ VWATAUAWH
0A_A]A\_^
p ATAVAWH
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
t$ WATAVAW
HcD$HIcx
A_A^A\_
@USVAUAVAWH
D$0D;S,
A_A^A]^[]
L$ SUVATAVAWH
hA_A^A\^][
|$ ATAVAW
t$0A_A^A\
WATAUAVAWH
 A_A^A]A\_
|$ ATAVAWH
 A_A^A\
l$ VWATAVAWH
(T$0D9ft
A_A^A\_^
SUVWATAUAVAWH
xA_A^A]A\_^][
A+_DA+wDLc
@SUVWATAUAVAWH
|$PLcl$D
Hcl$0E3
A_A^A]A\_^][
UVWATAUAVAWH
@A_A^A]A\_^]
@UWAUAWH
T$BfD)dt@L
UVWATAUAVAWH
0A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
UAUAVAWH
t$0E9wD
8A_A^A]]
l$ VAVAWH
t$ WATAVH
WLc\$0H
@SUVWATAUAVH
u4LcClH
tGLc[lE3
tMLc[lL
D9kl~LE3
D9Kl~-3
A^A]A\_^][
SUVWATAVH
8A^A\_^][
{ HcC H
A$9r8~DE3
\$ UVWH
@SUVWAUAVAWH
`A_A^A]_^][
SATAVAWH
(A_A^A\[
SVATAVH
|$ ATAVAWH
@A_A^A\
SUVWATAUAVAWH
A_A^A]A\_^][
UVWAVAWH
0A_A^_^]
D$hLcL$hH
0A_A^_^]
;t$hwAH
\$ UVWATAUAVAWH
A_A^A]A\_^]
SUWATAUH
`A]A\_][
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
hA_A^A]A\_^][
@SVWATAUH
C8B ,(H
 A]A\_^[
KpHcK(J
D$XD;k 
l$hHcK$H
LcXDHcxHD
l$ VWATAVA
l$@A^A\_^
\$ UVWATAVH
q@LcY$H
;D$h}JC
tKHcD$dLcK$Hc
D;|$p}RK
tGHcL$dHc
9t$\~F@8p
t@McN@H
t=McN@H
tAIcV@H
tRMcV@A
~fHcL$dL
T$PD;S 
A^A\_^]
VWATAUAVAWHcD$XL
Hc|$`E3
HcL$XIcG$H
l$@A_A^A]A\_^
K SVWAUH
@SAVAWH
@SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
hA_A^A]A\_^][
9fLaCtD
t$ WAVAWH
@SUVWATAVAWH
A_A^A\_^][
SUVWAUAVAWH
W0IcG$I
`A_A^A]_^][
WATAUAVAWH
 A_A^A]A\_
t$ WAVAWH
l$ VATAVH
|$ AUAVAWH
D9sTu0D
CLLcSPD
0A_A^A]
@SUVWATAVH
8A^A\_^][
UVWAVAWH
0A_A^_^]
D9sH~{A
0A_A^_^]
@SVWAUAVH
 A^A]_^[
@SUVWAUAVAWH
A_A^A]_^][
|$ ATAVAW
|$8A_A^A\
L$ SUVWAVH
d$@;L$`
@UWAUAV
\$(A^A]_]
@SUWAUL
t$(A]_][
HcW\LcF Ic
IcS\LcC Ic
UVATAUAVH
0A^A]A\^]
yHIcA M
l$@Hcl$hH
LcA@HcIlI
KpA+KhC
GPLcF@D
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
;D$H}(Hc
tQD;|$DtJE
xA_A^A]A\_^][
uGD9wxu2C
u$D9Qxu
E9Qxu	D9
|$ ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
t$ WATAWH
\$ UVWAVAWH
`A_A^_^]
t$ WATAWH
@SUVWATAUAVAWH
8A_A^A]A\_^][
t:Lc\$(A
;D$0}+A
UVWATAUAVAWH
D8,8u D8l8
0A_A^A]A\_^]
@SUVWATAUAVAWH
t#HcL$ J
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
t#HcL$ J
uuLc|$ B
t#HcL$ J
A_A^A]A\_^][
@SUVWATAUAVAWH
t*Lcl$ 
t#HcL$ J
A_A^A]A\_^][
@USWATAWH
D$`D9d$@
A_A\_[]
SUVWATAUAVAWH
xA_A^A]A\_^][
|$ AVAWLc
|$0A_A^
D9L$(t>
L$ WAVAWH
|$ UATAUAVAWH
 A_A^A]A\]
@USWATH
@SUVWATAUAVAWH
A_A^A]A\_^][
@USVWAVH
u5HcD$HA
SUVWATAUAVAWH
tbHcD$<
xA_A^A]A\_^][
|$ AVAWLc
|$0A_A^
|$ ATAVAW
t$0A_A^A\
L$ WAVAWH
|$ UATAUAVAWH
 A_A^A]A\]
@SAUAVH
WATAUAVAWH
0A_A^A]A\_
UVWATAUAVAWH
0A_A^A]A\_^]
USVWATAUAVAWH
y@@82u;A
A_A^A]A\_^[]
@SUVWAUAVAWH
A_A^A]_^][
|$ AVHc
@USVWATAUAVAWH
7Lct$TH
D$8HcT$LL
D$8HcT$@N
D$8HcT$LL
D$8HcT$@N
D$8HcT$LL
D$8HcT$@N
T$8Lcd$TD
D$8HcT$PL
D$8HcT$L
D$8HcT$@L
D$8HcT$PL
D$8HcT$L
D$8HcT$@L
l$4HcD$0
A_A^A]A\_^[]
@UWAUAWH
UVWATAUAVAWH
A_A^A]A\_^]
T$pLc\$hHcD$xE
yHcL$`H
UVWATAUAVAWH
A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
tZLc\$TM
T$pLc\$T
A_A^A]A\]
s WATAUAVAWH
t$TLcL$PH
D$pLcL$PI
A_A^A]A\_
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
<xHcL$XH
L$hHcD$XL
A_A^A]A\_^][
SUVWATAUAVAWH
<xHcL$XH
L$hHcD$XI
A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
XHcL$\H
L$hHcD$\H
A_A^A]A\_^]
UVWATAUAVAWH
XHcD$XH
XHcL$TH
L$hHcD$TH
A_A^A]A\_^]
UVWATAUAVAWH
$HcD$dL
D9|$`tzL
D9|$dt|L
A_A^A]A\_^]
UVWATAUAVAWH
4pHcD$XH
A_A^A]A\_^]
SUVWAUAVH
T$hHcD$XH
A^A]_^][
SUVWATAUAWH
A_A]A\_^][
@SUVAUH
@SVWAVAWH
A_A^_^[
|$ AUAVAWH
 A_A^A]
@SUVWATAUAVAWH
8A_A^A]A\_^][
l$ ATAVAWH
 A_A^A\
WATAUAVAWH
D$pD9h@
0A_A^A]A\_
K0D9K,t
@UVWATAUAVAWH
A_A^A]A\_^]
|$ AVAWD
t$(A_A^
WATAUAVAWH
 A_A^A]A\_
@SUVWATAUAVAWH
(A_A^A]A\_^][
@UVWAUAVAWH
A_A^A]_^]
u0H9(u)H9h
t$ WATAUAVAWH
A_A^A]A\_
l$ VWATAUAVAWH
l$PA_A^A]A\_^
|$ AVAW
|$0A_A^
|$ ATAVAWH
 A_A^A\
@SAVAWH
@SUVWATAVAWH
A_A^A\_^][
@VWAVAWH
8A_A^_^
@SUWAVH
L$ WATAUAVAWLcd$hLc
t$@A_A^A]A\_
t$ WATAWH
SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
|$ ATAUAVAWE3
|$@A_A^A]A\
t$ WATAVAW
t$@A_A^A\_
UVWATAUAVAWH
A_A^A]A\_^]
l$ VWAVAW
l$@A_A^_^
UVWATAUAVAWH
A_A^A]A\_^]
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
|$ ATAUAVAWL
|$@A_A^A]A\
t$ AVAWH
t$0A_A^
t$ AVAWH
t$0A_A^
t$ AVAWH
t$0A_A^
l$ VWATAUAVAWL
l$PA_A^A]A\_^
VWATAUAVAWE
l$PA_A^A]A\_^
l$ VWATAUAVAWL
l$PA_A^A]A\_^
|$ ATAVAWHc
|$8A_A^A\
|$ ATAVAWA
|$8A_A^A\
|$ ATAVAWHc
|$8A_A^A\
l$ VWATAUAVAWL
l$PA_A^A]A\_^
VWATAUAVAWE
l$PA_A^A]A\_^
l$ VWATAUAVAWL
l$PA_A^A]A\_^
|$ ATAVAWHc
|$8A_A^A\
|$ ATAVAWA
|$8A_A^A\
|$ ATAVAWHc
|$8A_A^A\
L$ UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWD
;D$`}gA
\$@A_A^A]A\_^]
L$ UVWATAUAVAWH
 A_A^A]A\_^]
L$ UVWATAUAVAWH
0A_A^A]A\_^]
SUVWATAUAVAWH
A_A^A]A\_^][
L$ UVWATAUAVAWH
0A_A^A]A\_^]
|$ ATAUAVAWHc
|$@A_A^A]A\
|$ ATAUAVAWH
|$@A_A^A]A\
|$ ATAUAVAWHc
|$@A_A^A]A\
|$ AVAWHc
|$0A_A^
|$ AVHc
|$ AVAWHc
|$0A_A^
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
t$ WATAUAVAWLc
t$HA_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
SUVWATAUAVAWH
HA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
HA_A^A]A\_^][
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
|$ ATAVAWIc
C8A_A^A\
|$ ATAVAWf
\$ A_A^A\
|$ ATAVAWIc
C8A_A^A\
t$ WATAUAVAWH
A_A^A]A\_
t$ WAVAWH
t$ WATAUAVAWH
A_A^A]A\_
|$ ATAUAVAWE3
|$@A_A^A]A\
|$ AUAVAWL
|$8A_A^A]
|$ ATAUAVAWE3
|$@A_A^A]A\
|$ ATAVAWH
|$8A_A^A\
t$ WATAUAVAWLc
t$HA_A^A]A\_
|$ ATAVAWH
|$8A_A^A\
d$ AVAWI
d$0A_A^
d$ AVAWI
d$0A_A^
|$ AVAW
@SUVWATAUAVAWH
(A_A^A]A\_^][
\$ UVWATAUAVAW
\$XA_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
|$ AVAWD
WATAUAVAWH
A_A^A]A\_
|$ ATAVAWL
l$(A_A^A\
|$ ATAVAWL
l$(A_A^A\
@SUVWATAUAVAWH
A_A^A]A\_^][
l$ VWATAUAVAWB
l$PA_A^A]A\_^
|$ AVAWD
|$ AVAW
|$ ATAVAWL
DA_A^A\
|$ ATAVAWD
|$ ATAVAWL
DA_A^A\
VWATAUAVAWE3
A_A^A]A\_^
|$ ATAVAW3
\$ A_A^A\
VWATAUAVAWE3
A_A^A]A\_^
|$ ATAVAWH
|$8A_A^A\
|$ ATAUAVAWHc
|$@A_A^A]A\
|$ ATAVAWH
|$8A_A^A\
L$ WATAUAVAWH
0A_A^A]A\_
L$ WATAUAVAWH
0A_A^A]A\_
|$ ATAUAVAWL
t$8A_A^A]A\
|$ ATAUAVAWL
t$8A_A^A]A\
|$ ATAVAWH
|$8A_A^A\
|$ ATAUAVAWHc
|$@A_A^A]A\
|$ ATAVAWH
|$8A_A^A\
d$ AVAWI
d$0A_A^
d$ AVAWI
d$0A_A^
SUVWATAUAVAWH
(A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
VWATAUAVAWI
A_A^A]A\_^
VWATAUAVAWL
A_A^A]A\_^
VWATAUAVAWI
A_A^A]A\_^
|$ ATAVAWI
|$8A_A^A\
|$ ATAVAWH
|$8A_A^A\
|$ ATAVAWI
|$8A_A^A\
t$ WATAUAVAWI
A_A^A]A\_
|$ ATAUAVAWMc
A_A^A]A\
t$ WATAUAVAWI
A_A^A]A\_
t$ WATAUAVAWI
A_A^A]A\_
|$ ATAUAVAWMc
A_A^A]A\
t$ WATAUAVAWI
A_A^A]A\_
|$ AUAVAWH
 A_A^A]
|$ AUAVAWH
 A_A^A]
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
l$ VWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@USVWAUAVAWH
A_A^A]_^[]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@USVWAUAVAWH
A_A^A]_^[]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
@A_A^A]A\_^]
T$0H3L$0I
T$8H3L$8H
T$@H3L$@H
_H3L$HH
T$(3L$(
T$,3L$,
T$03L$0
T$0H3L$0I
T$8H3L$8H
T$@H3L$@H
_H3L$HH
T$8H3L$8I
T$@H3L$@H
T$HH3L$HH
_H3L$PH
T$,3L$,
T$03L$0
T$43L$4
T$8H3L$8I
T$@H3L$@H
T$HH3L$HH
_H3L$PH
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
T$ 3L$ 
T$$3L$$
T$(3L$(
D$,3L$,
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
[ VWAVH
T$8H3L$8H
T$@H3L$@H
D$HH3L$HH
\$ VWAVH
T$03L$0
T$43L$4
T$83L$8
D$<3L$<
[ VWAVH
T$8H3L$8H
T$@H3L$@H
D$HH3L$HH
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
T$ 3L$ 
T$$3L$$
T$(3L$(
D$,3L$,
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
T$0H3L$0I
T$8H3L$8H
T$@H3L$@H
D$HH3L$HH
T$03L$0Lc
T$43L$4
T$83L$8
D$<3L$<
T$0H3L$0I
T$8H3L$8H
T$@H3L$@H
D$HH3L$HH
T$0H3L$0I
T$8H3L$8H
T$@H3L$@H
D$HH3L$HH
T$03L$0Lc
T$43L$4
T$83L$8
D$<3L$<
T$0H3L$0I
T$8H3L$8H
T$@H3L$@H
D$HH3L$HH
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
T$ 3L$ 
T$$3L$$
T$(3L$(
D$,3L$,
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
[ VWAVH
T$0H3L$0H
T$8H3L$8H
D$HH3L$HH
\$ VWAVH
T$03L$0
T$43L$4
T$83L$8
D$<3L$<
[ VWAVH
T$0H3L$0H
T$8H3L$8H
D$HH3L$HH
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
T$ 3L$ 
T$$3L$$
T$(3L$(
D$,3L$,
T$(H3L$(H
T$0H3L$0H
D$8H3L$8H
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
L$ SUVWATAUAVAWH
A_A^A]A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
\$ VWAVH
\$ UVWH
@SUVWAVH
\$ UVWH
\$ VWAVH
\$ UVWH
\$ VWAVH
\$ UVWH
@SUVWAVH
\$ UVWH
\$ VWAVH
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
@SLc\$@H
|$ Hc|$8Mc
@SLc\$@H
Hc|$8Mc
@SLc\$@H
|$ Hc|$8Mc
l$(Hcl$HH
Lct$@Ic
l$(Hcl$HH
Lct$@Ic
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
l$ VWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@USVWAUAVAWH
A_A^A]_^[]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@USVWAUAVAWH
A_A^A]_^[]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWATAUAVAWH
Hc|$pLcT$xIc
A_A^A]A\_^]
L$ SUVWATAUAVAWHc\$hLc\$pL
A_A^A]A\_^][
\$ UVWATAUAVAWH
Hc|$pLcT$xIc
A_A^A]A\_^]
\$ VWAVH
UVWATAUAVAWH
A_A^A]A\_^]
t$ WATAUAVAWMc
t$HA_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
@A_A^A]A\_^]
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$,3L$,
T$03L$0
T$43L$4
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$03L$0
T$43L$4
T$83L$8
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$$3L$$
T$(3L$(
T$,3L$,
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
[ VWAVH
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
\$ VWAVH
T$43L$4
T$83L$8
T$<3L$<
[ VWAVH
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$$3L$$
T$(3L$(
T$,3L$,
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$43L$4
T$83L$8
T$<3L$<
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$43L$4
T$83L$8
T$<3L$<
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$$3L$$
T$(3L$(
T$,3L$,
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
[ VWAVH
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
\$ VWAVH
T$03L$0
T$43L$4
T$83L$8
T$<3L$<
[ VWAVH
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$$3L$$
T$(3L$(
T$,3L$,
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
L$ SUVWATAUAVAWH
A_A^A]A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$ 3L$ 
T$$3L$$
T$(3L$(
T$,3L$,
T$03L$0
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$\3L$\
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$T3L$T
T$X3L$X
T$\3L$\
T$`3L$`
T$l3L$l
@USVWAVH
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$ 3L$ 
T$$3L$$
T$(3L$(
T$,3L$,
T$03L$0
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$\3L$\
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
\$ UVWH
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$pH3L$pH
T$xH3L$xH
\$ UVWH
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$T3L$T
T$X3L$X
T$\3L$\
T$`3L$`
T$l3L$l
\$ UVWH
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$pH3L$pH
T$xH3L$xH
\$ UVWH
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$pH3L$pH
T$xH3L$xH
\$ UVWH
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$P3L$P
T$T3L$T
T$X3L$X
T$\3L$\
T$`3L$`
T$l3L$l
\$ UVWH
H3L$0Lc
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$pH3L$pH
T$xH3L$xH
\$ UVWH
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$ 3L$ 
T$$3L$$
T$(3L$(
T$,3L$,
T$03L$0
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$\3L$\
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$T3L$T
T$X3L$X
T$\3L$\
T$`3L$`
T$l3L$l
@USVWAVH
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$`H3L$`H
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
@USVWAVH
T$ 3L$ 
T$$3L$$
T$(3L$(
T$,3L$,
T$03L$0
T$43L$4
T$83L$8
T$<3L$<
T$@3L$@
T$D3L$D
T$H3L$H
T$L3L$L
T$P3L$P
T$\3L$\
@USVWAVH
6H3L$ H
T$(H3L$(H
T$0H3L$0H
T$8H3L$8H
T$@H3L$@H
T$HH3L$HH
T$PH3L$PH
T$XH3L$XH
T$hH3L$hH
T$pH3L$pH
T$xH3L$xH
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
WHc|$@M
Hct$8Mc
\$ WHc|$@M
WHc|$@M
Hct$8Mc
@SHc\$@L
|$ Hc|$8Mc
@SHc\$@L
Hc|$8Mc
@SHc\$@L
|$ Hc|$8Mc
l$(Hcl$HH
Lct$@Ic
l$(Hcl$HH
Lct$@Ic
@SHc\$@L
Hc|$8Mc
|$ ATAUAVAWIc
|$@A_A^A]A\
\$ WLc\$@I
@SLc\$@H
Hc|$8Mc
l$(Hcl$HH
|$ ATAUAVAWIc
|$@A_A^A]A\
@SHc\$@L
Hc|$8Mc
|$ ATAUAVAWIc
|$@A_A^A]A\
\$ WHc|$@M
@SHc\$@L
Hc|$8Mc
l$(Hcl$HH
|$ ATAUAVAWIc
|$@A_A^A]A\
LcL$PHc
UVWATAUAVAWH
K	A8K	w
 A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
C	A8C	w
SUVWATAVAWH
@A_A^A\_^][
|$ ATAVAWH
0A_A^A\
|$ ATAVAWA
|$8A_A^A\
|$ ATAVAW
|$8A_A^A\
|$ ATAUAVAW
|$@A_A^A]A\
|$ ATAUAVAW
|$@A_A^A]A\
|$ ATAUAVAWA
|$@A_A^A]A\
|$ ATAUAVAWA
|$@A_A^A]A\
|$ AVAW
|$0A_A^
|$ AVAW
|$0A_A^
SUVWATAUAVAWH
A_A^A]A\_^][
A;C0u2A
A;K8|$f
A+C@A9CD
@SUVWATAVAWH
 A_A^A\_^][
SUVWATAUAVAWH
hA_A^A]A\_^][
SUVWATAUAVAWH
xA_A^A]A\_^][
x ATAVAWH
\$ UVWH
SWATAVH
xA^A\_[
SUVWAVH
|$ ATAVAWH
@UVWAVH
@SUVWAVH
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
|$ ATAVAWH
 A_A^A\
UVWATAUAVAWH
@A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
\$ UVWATAUAVAWH
@A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
t$ WAVAWH
E9SH~TI+
}`McSHI
|$ ATAVAW
t$0A_A^A\
SUVWATAUAVAWH
xA_A^A]A\_^][
SUVAUAVH
A^A]^][
t$ WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
|$ UATAUAVAWH
A_A^A]A\]
p WAVAWH
@SVWAVAWH
PA_A^_^[
SUATAVAWH
 A_A^A\][
VWATAUAVAW
A_A^A]A\_^
\$ UVWATAUAVAWH
A_A^A]A\_^]
SUATAVAWH
 A_A^A\][
X UVWAVAWH
A_A^_^]
@SUVWAVAWH
hA_A^_^][
SUVWAVH
uuLcD$DH
`A^_^][
AH9ADt6H
\$ VWATAVAWH
 A_A^A\_^
\$ UVWH
UVWATAUAVAWH
uuLcD$@H
PA_A^A]A\_^]
\$ UVWAVAWH
 A_A^_^]
x<VCR2u
t$ WATAUAVAWH
 A_A^A]A\_
@SUVWATAUAVAWH
HA_A^A]A\_^][
x<VCR2u
SUVWATAUAVH
A^A]A\_^][
SUVWATAUAVAWH
hA_A^A]A\_^][
@USVWATAUAVAWH
A_A^A]A\_^[]
WATAUAVAWH
A_A^A]A\_H
t$ WATAUAVAWH
A_A^A]A\_
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
HcH@LcxD
HcH@LchDD
xA_A^A]A\_^][
SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
xA_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
|$ ATAUAVAWH
A_A^A]A\
UVWATAUAVAWH
D+D$TE+
pA_A^A]A\_^]H
H9PPt	H
\$ UVWH
tNH9OHu/H
@SUVWAVAWH
u>L9{ u8L9yPt2H
HA_A^_^][
uMI9I uGH
VWATAVAWH
0A_A^A\_^
D$p+\$h
0A_A^A\_^
SUVWAVAWH
(A_A^_^][
VWAUAVAWH
 A_A^A]_^
\$ UWATAUAVH
@A^A]A\_]
@SUWAUAWH
@A_A]_][
SUVWATAUAVH
IcF8Icv<M
|$pA9F8|
 A^A]A\_^][
\$ UWATAVAWH
 A_A^A\_]
\$ WAUAWH
@SVATAVAWH
0A_A^A\^[
9Ktt!ff
0A_A^A\^[
UVWATAUAVAWH
|$hD;spu
spurD;k,
 A_A^A]A\_^]
|$ ATAVAWH
0A_A^A\
|$ ATAVAWA
l$(A_A^A\
|$ ATAVAWA
"A_A^A\
WATAUAVAWH
r`Mc|$\A
 A_A^A]A\_
\$ VWAVH
D$$9T$ D
t$ WATAWH
|$ ATAVAWH
l$HHcl$hH
 A_A^A\
t$ ATAVAWH
 A_A^A\
@SUVWAVAWH
A_A^_^][
H9I`t	H
@SWATAUAWH
l$pL9iPt
@A_A]A\_[
~dL9oHu>H
@A_A]A\_[
@SVWATAVAWH
A_A^A\_^[
tBLcD$0H
@SUVWAUAVAWH
0A_A^A]_^][
JlD9jt}	
0A_A^A]_^][
l$ VWATAVAWH
L$09C u
9K$u	9S(
A_A^A\_^
UVWATAUAVAWH
pA_A^A]A\_^]
l$@Hcl$`H
\$ Hc\$PH
d$8Lcd$HL
t$ WATAUAVAWH
HcT$pHc
 A_A^A]A\_
WATAUAVAWH
LcD$pIc
 A_A^A]A\_
SUVWATAUAVAWH
hA_A^A]A\_^][
UWAUAVAWH
@A_A^A]_]
UVWAVAWH
0A_A^_^]
t$ WAVAWH
@SUVWATAVAWH
A_A^A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
|$ ATAVAW
t$0A_A^A\
VATAUAWH
(Hct$pL
(A_A]A\^
WATAUAVH
A^A]A\_
)l$pA8u
A^A]A\_
@UVWAUAVH
A^A]_^]
@849u:H
@SUWATAVH
A^A\_][
SUVWATAUAVAWH
A_A^A]A\_^][
D8\81v]
D8W2vsf
USVWATAUAVAWH
A_A^A]A\_^[]
UVAUAVAWH
A_A^A]^]
UVWATAUAVAWH
t!H;{ t
H9k(uCL
0A_A^A]A\_^]
C`f9G`u
Cbf9Gbt
H9(t+Hc
HcD$(Lk
HcD$0Hk
WATAUAVAWH
 A_A^A]A\_
@HcD$pL
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
pA_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
SUVWAUAVAWH
@A_A^A]_^][
l$ VAWH
t$(Lct$8L
t$ WAVAWH
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
u<LcEhA
v%LcEhA
0A_A^A]A\_^]
USVWATAUAVAWH
HcD$TLcM
}wHcUx;
HcD$TLcL$PM
ExIcEhL
LcD$PA;
\$hHcT$`I
HcD$PHcL$`LcM
L$xLcT$pL
LcD$xHc\$TI
LcL$pLc\$`L
T$pLcD$PHc\$XH
LcL$`Lc
\$XHcFh
QLc|$pE3
Hc\$PE3
HcD$`HcL$pLcM
]xHcVhA
T$pLcD$xHc\$PH
Lc\$`Lc
Hc\$XE3
HcD$`HcL$pLcM
]xHcVhA
T$pLcD$xHc\$PH
@HcD$pL
A_A^A]A\_^[]
@USWATAUAVH
D$ HcGd
t*LcGdH
A^A]A\_[]
\$ UATAWLc	
\$8A_A\]
L$ WATAUAVAWH
CbD9t$hu&A
 A_A^A]A\_
SUVAUAVH
t!H;{ t
L9s(uIL
@A^A]^][
UVWATAVAWH
HA_A^A\_^]
@USATAWH
T$TfE;L$b
|$ ATAVAWH
 A_A^A\
|$ ATAUAVAWH
|$@A_A^A]A\
UVWATAUAVAWH
 A_A^A]A\_^]
SUATAUAVAWH
8A_A^A]A\][
UVWATAUAVAWH
0A_A^A]A\_^]
GvfA;wb
UVWATAUAVAWH
A_A^A]A\_^]
|$ ATAVAWH
H9G uiH
@A_A^A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
VWATAUAWH
 A_A]A\_^
UVWATAUAVAWH
],IcMdA
EpA9E|~
HcD$PLcL$\H
LcL$THc
EPIcEhH
LcD$PA;
L$xHcT$XD
HcD$PLcL$\H
HcT$XD;
D$TMcuhLc}
\$`IcEh
LcT$\HcU
\$TIcEhH
Hc\$`E3
HcD$PLcM
HcD$`LcM
\$TIcEhD
Hc|$XD;
v#McEdHc
u>McEhB
v/McEhB
$McEhHc
IcEdt)L
A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
@UAUAWH
UVWATAUAVAWH
`A_A^A]A\_^]
SUVWATAUAWH
tsL;3tn
HcCdt&H
tzHc|$8H
A_A]A\_^][
SUVWATAUAVAWH
xA_A^A]A\_^][
LcL$hHc
SUVWATAUAVAWH
D$PIcAhL
A_A^A]A\_^][
|$ ATAVAWH
 A_A^A\
HcD$0L+
|$ ATAVAWD
|$8A_A^A\
WATAUAVAW
A_A^A]A\_
\$ WATAW
\$8A_A\_
SWATAVH
@UAUAWH
\$ AVAW
\$0A_A^
\$ ATAVAW
\$8A_A^A\
@SUVWATH
@SVWATAVH
A^A\_^[
l$ AVAW
l$0A_A^
@SUVWAUH
@SUVWAVH
\$ ATAVAW
\$8A_A^A\
@SUVWAUH
PA]_^][
@SUVWAVH
`A^_^][
l$ AVAW
l$0A_A^
@SUVWAUH
`A]_^][
@SUVWAVH
`A^_^][
\$ ATAVAW
\$8A_A^A\
SUVWAVH
l$ AVAW
l$0A_A^
@SUVWAUH
@SUVWAVH
|$ AVAWD
|$0A_A^
WATAUAVAWD
t$HA_A^A]A\_
|$ ATAUAVAWD
|$@A_A^A]A\
WATAUAVAWD
t$HA_A^A]A\_
|$ ATAUAVAWD
|$@A_A^A]A\
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
|$ AVAWA
|$0A_A^
UVWATAUAVAWH
0A_A^A]A\_^]
|$ ATAVAWD
|$8A_A^A\
UVWATAUAVAWH
0A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
0A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
|$ ATAUAVAWH
|$@A_A^A]A\
UVWAUAWH
@A_A]_^]
l$0HcA@H
SUVWATAUAVAWH
HcQDHcq@H
A_A^A]A\_^][
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
D$(+D$ H
@A_A^A]A\_^]
UVWATAUAVAWH
\$8H;l$@
A_A^A]A\_^]
\$8H;l$@
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
R<HcF0Hc~DD
F4HcF4J
F4HcF4K
Hc|$,Lc
8A_A^A]A\_^][
SUVWATAUAVAWH
t$0McA@H
xA_A^A]A\_^][
@SUVAUAVAWH
l$HMcM@3
McWDMcGHH
T$`LcD$x3
L$pHcL$xH
McyHMcYD
A_A^A]^][
\$ UVWATAUAVAWH
0HcD$\3
XhLcH@L
t0HcD$hH
u:H9t$PuQ
L$ HcD$,
.H9t$Pu
u0H9|$Pu0HcD$,
t4HcD$@LcU
|$hD;l$L
A_A^A]A\_^]
|$ ATAUAVAWD
|$@A_A^A]A\
SUVWATAUAVAWH
hA_A^A]A\_^][
UVWATAUAVAWH
`A_A^A]A\_^]J
|$ ATAVAW
l$HLct$@L
|$8A_A^A\
WATAUAVAWD
t$XLc|$PL
t$HA_A^A]A\_
t$ WATAUAVAW
A_A^A]A\_
|$ ATAVAW
t$HHcl$@D
|$8A_A^A\
|$ AVAW
t$@Hcl$8D
|$0A_A^
t$ WATAUAVAW
A_A^A]A\_
|$ AVHct$0
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
|$ ATAVAWA
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
|$ ATAVAWA
UVWATAUAVAWH
 A_A^A]A\_^]
VWATAUAVAW
D$`HcL$XH
l$@A_A^A]A\_^
t$ WATAUAVAW
A_A^A]A\_
|$ ATAUAVAWLc|$H
|$@A_A^A]A\
t$ WATAUAVAW
A_A^A]A\_
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
pA_A^A]A\_^]
|$ ATAVAWA
UVWATAUAVAWH
 A_A^A]A\_^]
@SUVWAUAVAWH
PA_A^A]_^][
@SUVWAUAVAWH
pA_A^A]_^][
@SUVWATAVAWH
@A_A^A\_^][
UVWATAUAVAWH
,$Dil$x
0A_A^A]A\_^]
|$ ATAUAVAWD
A_A^A]A\
\$ UVWATAUAVAWH
T$8D)D$ A+
DiL$$75
T$<D)d$<D
\$0)l$0
Did$4!;
T$0D)D$ A+
T$HDil$ 
DiL$$75
T$4D)d$4D
\$8)l$8
Did$<!;
t$,iL$8!;
A_A^A]A\_^]
@SUVWATAVAWH
0A_A^A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
T$DD)D$ A+
T$(Dil$ 
DiL$875
T$0D)d$0D
\$H)l$H
Did$$!;
D$ D)t$ A
A_A^A]A\_^]
@SUVWATAVAWH
0A_A^A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
D$pD)t$pA
 A_A^A]A\_^]
UVWATAUAVAWH
L$4D+L$(
\$<+\$D
l$TD+L$L
\$XD+\$ 
D$\D+D$DB
D$0f+D$Xf
A_A^A]A\_^]
|$ ATAVAWF
\$ UVWATAUAVAWH
D$$D)t$$A
T$4D)D$ A+
T$0Dil$ 
DiL$H75
T$,D)d$,D
\$()l$(
Did$$!;
t$0iL$(!;
A_A^A]A\_^]
@SUVWATAVAWH
0A_A^A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
D$ D)t$ A
A_A^A]A\_^]
\$ UVWATAUAVAWH
d$|Did$X~
D$xiD$@!;
DiL$l75
D$,)T$,
D$()t$(D
L$ )D$ D
\$DD+\$L
D$@D)L$@A
D$ )\$ D
D$$D)t$$A
D$(D)D$(A
t$h)D$4
D$pf+D$DfA
L$ )D$ 
L$l+L$0
D$|D+D$\
\$dit$8~
D$()L$(
D$,D)|$,A
D$$D)l$$A
D$4D)L$4A
D$ )|$ 
D$$D)t$$A
D$,D)D$,A
D$`f+D$0f
A_A^A]A\_^]
@SUVWATAVAWH
0A_A^A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWAVAWH
0A_A^_^]
SVWATAUAVAWH
A_A^A]A\_^[
SWATAUAVAWH
8A_A^A]A\_[
VATAUAVAWD
l$HA_A^A]A\^
SUATAUAVAWH
A_A^A]A\][
SVWATAUAVAWH
A_A^A]A\_^[
UVWATAUAVAWH
0A_A^A]A\_^]
SUVATAUAVAWH
@A_A^A]A\^][
|$ ATAVAW
l$HLct$@L
|$8A_A^A\
WATAUAVAWD
t$XLc|$PL
t$HA_A^A]A\_
t$ WATAUAVAW
A_A^A]A\_
|$ AVAW
|$@Hct$8
|$0A_A^
|$8Hct$0
t$ WATAUAVAW
A_A^A]A\_
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
UVWAVAWH
@A_A^_^]
UVWAVAWH
pA_A^_^]
t$ UWATAVAWH
0A_A^A\_]
SUVWAUAVH
(A^A]_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
A_A^A]A\_^][
\$ UVWH
\$ VWAVH
\$ UVWH
@SUVWAVH
\$ VWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWH
@SUVWAVH
\$ VWAVH
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWH
\$ VWAVH
\$ UVWH
@SUVWAVH
\$ VWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWH
@SUVWAVH
\$ VWAVH
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
\$ UVWH
\$ VWAVH
\$ UVWH
@SUVWAVH
\$ VWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWH
@SUVWAVH
\$ VWAVH
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWH
\$ VWAVH
\$ UVWH
@SUVWAVH
\$ VWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWH
@SUVWAVH
\$ VWAVH
\$ UVWATAUAVAW
A_A^A]A\_^]
\$ UVWATAUAVAW
A_A^A]A\_^]
\$ UVWATAUAVAW
A_A^A]A\_^]
\$ UVWATAUAVAW
A_A^A]A\_^]
\$ UVWATAUAVAW
A_A^A]A\_^]
AUAVAWH
PA_A^A]
UWATAVAWH
@A_A^A\_]
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
@SUVWAVH
pA^_^][
@SUVWAVH
pA^_^][
@SUVWAVH
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
@SUVWAVH
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
WATAUAVAWH
0A_A^A]A\_
@SUVWAV
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
WATAUAVAWH
0A_A^A]A\_
@SUVWAV
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
WATAUAVAWH
0A_A^A]A\_
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
WATAUAVAWH
0A_A^A]A\_
@SUVWAV
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
WATAUAVAWH
0A_A^A]A\_
@SUVWAV
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWATAUAVAW
A_A^A]A\_^][
@SUVWAV
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAW
A_A^A]A\_^][
WATAUAVAWH
0A_A^A]A\_
@SUVWAV
fffffff
UVWATAUAVAWH
pA_A^A]A\_^]
fffffff
.ffffff
@UATAVH
l$ VAVAWH
fffffff
t#HcL$@H
UVWATAUAVAWH
A_A^A]A\_^]
D$H9D$ s"
\$ UVWATAUAVAWH
A_A^A]A\_^]
0ffffff
t$ WAVAWH
^ffffff
fffffff
x ATAVAWH
 A_A^A\
USVWAVH
WATAUAVAWH
gfffffffH
A_A^A]A\_
x AUAVAWH
@SUVWAVH
@ffffff
SVWATAUAVAWUH
]A_A^A]A\_^[
WATAUAVAWH
@A_A^A]A\_
t$ WATAUAVAWH
0A_A^A]A\_
fffffff
` AUAVAWH
0A_A^A]
WATAUAVAWH
A_A^A]A\_
` AUAVAWH
t$8Hc0I
VWATAVAWH
 A_A^A\_^
\$ UVWATAUAVAWH
D9l$dtXH
HcD$PH;
A_A^A]A\_^]
x AUAVAWH
 A_A^A]
WATAUAVAWH
 A_A^A]A\_
USVWATAUAVAWH
XA_A^A]A\_^[]
VWATAVAWH
 A_A^A\_^
UVWATAUAVAWH
D)\$4A;
d$4t	fD
t$\9D$`t
t$PD8|$8t
A_A^A]A\_^]
UVWATAUAVAWH
|$hD9L$H@
D$<D9L$Ht
d$4t	fD
d$4D9L$t
t$dD9L$Ht
t$dD8L$@t
t$XD8L$8t
A_A^A]A\_^]
AUAVAWH
0A_A^A]
@SUVWATAVAWH
PA_A^A\_^][
t$ WAVAWH
UVWATAUAVAWH
0A_A^A]A\_^]
l$ VWATAVAWH
T$&@8t$&t9@8r
A81t@@8r
A_A^A\_^
@UATAUAVAWH
!t$(H!t$ I
A_A^A]A\]
@USVWATAUAVAWH
A_A^A]A\_^[]
;Cu1f9K
f93t$M;
L$ SUVWH
|$ ATAVAWH
0A_A^A\
WATAUAVAWH
0A_A^A]A\_
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
fD9|$bu
H9L$Ht8H
sYHcL$HH
x ATAVAWH
< tD<	t@
 A_A^A\
H3E H3E
ATAVAWH
 A_A^A\
@SUVWATAVAWH
zu|D!t$ E3
A_A^A\_^][
UVWATAUAVAWH
9D$LupE
A_A^A]A\_^]
UVWATAUAVAWH
9D$XumE
A_A^A]A\_^]
UVWATAUAVAWH
8$u$L9E
D$@fA9	u
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
A_A^A]A\_
@UATAUAVAWH
A_A^A]A\]
s WATAUAVAWH
9t$P~.8\$vt(H
9t$P~98\$vt3H
A_A^A]A\_
tVf91tQH
x ATAVAWH
 A_A^A\
@SUVWATAVAWH
A_A^A\_^][
tSf91tNH
D;|$0t9
x ATAVAWH
 A_A^A\
@USVWATAVAWH
tyfD9 tsH
tHfD9 tB
@A_A^A\_^[]
UVWATAUAVAWH
pA_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
0A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
@UATAUAVAWH
A_A^A]A\]
l$ VWAVH
9\$ ~>L
UVWATAUAVAWH
D$DD9T$X
|$h+t$D+
A_A^A]A\_^]
UVWATAUAVAWH
D$DD9T$X
|$h+t$D+
A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
8$u&L9T$pu
t$dD+t$XD+
A_A^A]A\_^]
|$ ATAVAWH
\$@@8=.
 A_A^A\
|$ ATAVAWH
 A_A^A\
VWATAVAWH
A_A^A\_^
UVWATAUAVAWH
8$u&L9T$pu
D+t$TD+
A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
!\$0!\$(!\$ L
UVWATAUAVAWH
A_A^A]A\_^]
t"HcM@H
u"HcMHH
8svx_fib
8SVX fibonacci
8svx_exp
8SVX exponential
pcm_s8_planar
PCM signed 8-bit planar
packet size is too small
unexpected data after first packet
libavcodec/8svx.c
unexpected empty packet
get_buffer() failed
8SVX does not support more than 2 channels
!P?8Ki?h"|?
~?4:v?l)e?
JL?Qw,?B
Input buffer exhausted before END element found
AAC (Advanced Audio Coding)
aac_latm
AAC LATM (Advanced Audio Coding LATM syntax)
libavcodec/aacdec.c
invalid default channel configuration (%d)
Sample rate index in program config element does not match the sample rate index configured by the container.
960/120 MDCT window
AAC data resilience (flags %x)
epConfig %d
Low Delay SBR
invalid sampling rate index %d
invalid low delay sampling rate index %d
Audio object type %s%d
Invalid Predictor Reset Group.
Reserved bit set.
AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.
Prediction is not allowed in AAC-LC.
LTP in ER AAC LD not yet implemented.
Number of scalefactor bands in group (%d) exceeds limit (%d).
invalid band type
Number of bands (%d) exceeds limit (%d).
If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)
If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)
Scalefactor (%d) out of range.
TNS filter order %d is greater than maximum %d.
error in spectral data, ESC overflow
Pulse tool not allowed in eight short sequence.
Pulse data corrupt or invalid.
ms_present = 3 is reserved.
SBR was found before the first channel element.
SBR signaled to be not-present but was found in the bitstream.
Implicit SBR was found with a first occurrence after the first frame.
Dependent coupling is not supported together with LTP
More than one AAC RDB per ADTS frame
Unknown ER channel configuration %d
channel element %d.%d is not allocated
Error decoding AAC frame header.
Not evaluating a further program_config_element as this construct is dubious at best.
Non-byte-aligned audio-specific config
audio config changed
Multiple programs
Multiple layers
no decoder config found
incomplete frame
frame length mismatch %d << %d
ADTS header detected, probably as result of configuration misparsing
!'-6BN*fBNZfr~Z
'd'e'm'
'fOgOaOGO
    !!!!!!!!!!!!!!!!!!!!!!!
illegal iid
illegal icc
iid_mode %d is reserved.
icc_mode %d is reserved.
ps extension overflow %d
Expected to read %d PS bits actually read %d.
@?fff?H
qNt?GA0?
k+c?sjP
U?KGV?^3
v?Jfw?M
xk?SB*?
=.4O?	=^
'He?7".>
Qt?qSx?
=?GpC?$
Invalid n_master: %d
Invalid bitstream, crossover band index beyond array bounds: %d
Unsupported sample rate for SBR: %d
Invalid bs_stop_freq: %d
Invalid bitstream, too many QMF subbands: %d
Invalid num_bands_0: %d
Invalid vDk0[%d]: %d
Invalid vDk1[%d]: %d
Too many patches: %d
Stop frequency border too high: %d
Start frequency border too high: %d
Too many noise floor scale factors: %d
Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d
Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d
Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d
Non monotone time borders
Parametric Stereo signaled to be not-present but was found in the bitstream.
Reserved SBR extensions
Invalid bitstream - cannot apply SBR to element type %d
SBR Extension over read.
SBR reset failed. Switching SBR to pure upsampling mode.
Expected to read %d SBR bytes actually read %d.
ERROR : no subband found for frequency %d
kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.
))/113//+++((
!!&((())%%%""
"(*3..***''
							
 ! 1 A Q a q 
 " 2 B R b r 
 # 3 C S c s 
 $ 4 D T d t 
 % 5 E U e u 
 & 6 F V f v 
 ' 7 G W g w 
 ( 8 H X h x 
 ) 9 I Y i y 
 * : J Z j z 
 + ; K [ k { 
 , < L \ l | 
 - = M ] m } 
 . > N ^ n ~ 
 / ? O _ o 
! !0!@!P!`!p!
"=Ze3=`
aZ>bN_>
7x>*A}>
y+?Xs,?
b.?6X/?sL0?T?1?
E?AYF?W'G?
}T?a)U?
]?qW^?^
^?Xo_?c
p?k^p?<qp?
Kr?3er?y
;s?`Vs?
Rt?pot?W
v?Z0v?tOv?
Mw?omw?
Sx?Ytx?
y?N>y?X`y?y
E{?4i{?
}?%9}?2]}?M
~?H`~?B
z?%[z?$
x?CVx?s
q?\"q?@
%[?L{Z?
#Y?=wX?
S?SWR?u
N?7-N?|vM?p
:?a*:?Mw9?O
5?L?4?kv3?
1?5 1?\\0?
s->7E+>
{S;-%K;
ZI:i/K:
vL:w1M:wdM:
G:v|E:n
(:L`%:b
b`9A!i9*
%2&U'{(
[/\H]]^n_{`
d{emf[gCh'i
~6~Y~z~
@?>=<;:98765443210//.-,,+*))('&&%$$##"!!  
ALAC (Apple Lossless Audio Codec)
invalid zero block size of %d %d %d
bps is unsupported: %d
invalid samples per frame: %lu
sample count mismatch: %lu != %d
unknown prediction type: %i
syntax element unsupported: %d
invalid element channel count
no end tag found. incomplete packet.
Error : %d bits left
libavcodec/alac.c
Cannot allocate memory.
max samples per frame invalid: %lu
alac: extradata is too small
alac: set_info failed
Sample depth %d
Invalid channel count
Unsupported channel count: %d
Error allocating buffers
libavcodec/avfft.c
libavcodec/avpacket.c
Assertion %s failed at %s:%d
(unsigned)pkt->size <= 2147483647 - 8
incorrect codes
libavcodec/bitstream.c
needed %d had %d
libavcodec/bitstream_filter.c
IYizEUdtBP_n>LZh;HVc8EQ^5AMY3>IU0;EP.8BL+5?H)2;E'08A%-6>#+3;!)08 '.5
 !"#$%&'()*+,-./0123456789:;<=>>?
  !!!""###$$$%%%&&?
Brute Force & Ignorance
Electronic Arts CMV video
motionpixels
Motion Pixels video
Electronic Arts TGV video
Electronic Arts TGQ video
Electronic Arts TQI video
Auravision AURA
Auravision Aura 2
Uncompressed 4:2:2 10-bit
8088flex TMV
Electronic Arts Madcow Video
Forward Uncompressed
flashsv2
Flash Screen Video v2
cdgraphics
CD Graphics video
Uncompressed RGB 10-bit
Deluxe Paint Animation
binkvideo
Bink video
iff_ilbm
IFF ILBM
iff_byterun1
IFF ByteRun1
Kega Game Video
Psygnosis YOP Video
On2 VP8
Google VP9
Pictor/PC Paint
a64_multi
Multicolor charset for Commodore 64
a64_multi5
Multicolor charset for Commodore 64, extended with 5th color (colram)
AJA Kona 10-bit RGB Codec
Silicon Graphics Motion Video Compressor 1
Silicon Graphics Motion Video Compressor 2
Mobotix MxPEG video
lagarith
Lagarith lossless
Apple ProRes (iCodec Pro)
Bitmap Brothers JV video
Chronomaster DFA
utvideo
Ut Video
bmv_video
Discworld II BMV video
VBLE Lossless Codec
Uncompressed 4:4:4 10-bit
Commodore CDXL video
zerocodec
ZeroCodec Lossless Video
MS Screen 1
MS ATC Screen
TechSmith Screen Codec 2
MS Expression Encoder Screen
Canopus Lossless Codec
MS Windows Media Video V9 Screen
Apple Intermediate Codec
escape130
Escape 130
Go2Meeting
hnm4video
HNM 4 video
HEVC (High Efficiency Video Coding)
Mirillis FIC
paf_video
Amazing Studio Packed Animation File Video
On2 VP7
LucasArts SANM video
SGI RLE 8-bit
alias_pix
Alias/Wavefront PIX image
ASCII/ANSI art
brender_pix
BRender PIX image
DPX image
OpenEXR image
GIF (Graphics Interchange Format)
JPEG-LS
Lossless JPEG
PAM (Portable AnyMap) image
PBM (Portable BitMap) image
PC Paintbrush PCX image
PGM (Portable GrayMap) image
PGMYUV (Portable GrayMap YUV) image
PNG (Portable Network Graphics) image
PPM (Portable PixelMap) image
V.Flash PTX image
SGI image
Sunplus JPEG (SP5X)
sunrast
Sun Rasterfile image
Truevision Targa image
TIFF image
Renderware TXD (TeXture Dictionary) image
vc1image
Windows Media Video 9 Image v2
wmv3image
Windows Media Video 9 Image
XBM (X BitMap) image
XWD (X Window Dump) image
pcm_s16le
PCM signed 16-bit little-endian
pcm_s16be
PCM signed 16-bit big-endian
pcm_u16le
PCM unsigned 16-bit little-endian
pcm_u16be
PCM unsigned 16-bit big-endian
PCM signed 8-bit
PCM unsigned 8-bit
pcm_mulaw
PCM mu-law
pcm_alaw
PCM A-law
pcm_s32le
PCM signed 32-bit little-endian
pcm_s32be
PCM signed 32-bit big-endian
pcm_u32le
PCM unsigned 32-bit little-endian
pcm_u32be
PCM unsigned 32-bit big-endian
pcm_s24le
PCM signed 24-bit little-endian
pcm_s24be
PCM signed 24-bit big-endian
pcm_u24le
PCM unsigned 24-bit little-endian
pcm_u24be
PCM unsigned 24-bit big-endian
pcm_s24daud
PCM D-Cinema audio signed 24-bit
pcm_zork
PCM Zork
pcm_s16le_planar
PCM 16-bit little-endian planar
pcm_s24le_planar
PCM signed 24-bit little-endian planar
pcm_s32le_planar
PCM signed 32-bit little-endian planar
pcm_dvd
PCM signed 20|24-bit big-endian
pcm_f32be
PCM 32-bit floating point big-endian
pcm_f32le
PCM 32-bit floating point little-endian
pcm_f64be
PCM 64-bit floating point big-endian
pcm_f64le
PCM 64-bit floating point little-endian
pcm_bluray
PCM signed 16|20|24-bit big-endian for Blu-ray media
pcm_lxf
PCM signed 20-bit little-endian planar
SMPTE 302M
adpcm_ima_qt
ADPCM IMA QuickTime
adpcm_ima_wav
ADPCM IMA WAV
adpcm_ima_dk3
ADPCM IMA Duck DK3
adpcm_ima_dk4
ADPCM IMA Duck DK4
adpcm_ima_ws
ADPCM IMA Westwood
adpcm_ima_smjpeg
ADPCM IMA Loki SDL MJPEG
adpcm_ms
ADPCM Microsoft
adpcm_4xm
ADPCM 4X Movie
adpcm_xa
ADPCM CDROM XA
adpcm_adx
SEGA CRI ADX ADPCM
adpcm_ea
ADPCM Electronic Arts
adpcm_g726
G.726 ADPCM
adpcm_ct
ADPCM Creative Technology
adpcm_swf
ADPCM Shockwave Flash
adpcm_yamaha
ADPCM Yamaha
adpcm_sbpro_4
ADPCM Sound Blaster Pro 4-bit
adpcm_sbpro_3
ADPCM Sound Blaster Pro 2.6-bit
adpcm_sbpro_2
ADPCM Sound Blaster Pro 2-bit
adpcm_thp
ADPCM Nintendo Gamecube THP
adpcm_ima_amv
ADPCM IMA AMV
adpcm_ea_r1
ADPCM Electronic Arts R1
adpcm_ea_r3
ADPCM Electronic Arts R3
adpcm_ea_r2
ADPCM Electronic Arts R2
adpcm_ima_ea_sead
ADPCM IMA Electronic Arts SEAD
adpcm_ima_ea_eacs
ADPCM IMA Electronic Arts EACS
adpcm_ea_xas
ADPCM Electronic Arts XAS
adpcm_ea_maxis_xa
ADPCM Electronic Arts Maxis CDROM XA
adpcm_ima_iss
ADPCM IMA Funcom ISS
adpcm_g722
G.722 ADPCM
adpcm_ima_apc
ADPCM IMA CRYO APC
adpcm_vima
LucasArts VIMA audio
AMR-NB (Adaptive Multi-Rate NarrowBand)
AMR-WB (Adaptive Multi-Rate WideBand)
RealAudio 1.0 (14.4K)
RealAudio 2.0 (28.8K)
roq_dpcm
DPCM id RoQ
interplay_dpcm
DPCM Interplay
xan_dpcm
DPCM Xan
sol_dpcm
DPCM Sol
MP2 (MPEG audio layer 2)
MP3 (MPEG audio layer 3)
ATSC A/52A (AC-3)
DCA (DTS Coherent Acoustics)
dvaudio
DV audio
Windows Media Audio 1
Windows Media Audio 2
MACE (Macintosh Audio Compression/Expansion) 3:1
MACE (Macintosh Audio Compression/Expansion) 6:1
vmdaudio
Sierra VMD audio
FLAC (Free Lossless Audio Codec)
ADU (Application Data Unit) MP3 (MPEG audio layer 3)
MP3onMP4
shorten
Shorten
westwood_snd1
Westwood Audio (SND1)
QDesign Music Codec 2
Cook / Cooker / Gecko (RealAudio G2)
truespeech
DSP Group TrueSpeech
TTA (True Audio)
smackaudio
Smacker audio
QCELP / PureVoice
wavpack
WavPack
dsicinaudio
Delphine Software International CIN audio
IMC (Intel Music Coder)
musepack7
Musepack SV7
MLP (Meridian Lossless Packing)
GSM Microsoft variant
ATRAC3 (Adaptive TRansform Acoustic Coding 3)
voxware
Voxware RT29 Metasound
Monkey's Audio
nellymoser
Nellymoser Asao
musepack8
Musepack SV8
wmavoice
Windows Media Audio Voice
Windows Media Audio 9 Professional
wmalossless
Windows Media Audio Lossless
atrac3p
ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)
ATSC A/52B (AC-3, E-AC-3)
RealAudio SIPR / ACELP.NET
MP1 (MPEG audio layer 1)
VQF TwinVQ
MPEG-4 Audio Lossless Coding (ALS)
ATRAC1 (Adaptive TRansform Acoustic Coding)
binkaudio_rdft
Bink Audio (RDFT)
binkaudio_dct
Bink Audio (DCT)
QDesign Music
Constrained Energy Lapped Transform (CELT)
G.723.1
bmv_audio
Discworld II BMV audio
RealAudio Lossless
IAC (Indeo Audio Coder)
iLBC (Internet Low Bitrate Codec)
Opus (Opus Interactive Audio Codec)
comfortnoise
RFC 3389 Comfort Noise
TAK (Tom's lossless Audio Kompressor)
metasound
Voxware MetaSound
paf_audio
Amazing Studio Packed Animation File Audio
On2 Audio for Video Codec
dvd_subtitle
DVD subtitles
dvb_subtitle
DVB subtitles
raw UTF-8 text
SSA (SubStation Alpha) / ASS (Advanced SSA) subtitle
mov_text
MOV text
hdmv_pgs_subtitle
HDMV Presentation Graphic Stream subtitles
dvb_teletext
DVB teletext
SubRip Text
mpeg1video
MPEG-1 video
mpeg2video
MPEG-2 video
mpegvideo_xvmc
MPEG-1/2 video XvMC (X-Video Motion Compensation)
H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2
RealVideo 1.0
RealVideo 2.0
Motion JPEG
Apple MJPEG-B
MPEG-4 part 2
rawvideo
raw video
msmpeg4v1
MPEG-4 part 2 Microsoft variant version 1
msmpeg4v2
MPEG-4 part 2 Microsoft variant version 2
msmpeg4v3
MPEG-4 part 2 Microsoft variant version 3
Windows Media Video 7
Windows Media Video 8
H.263+ / H.263-1998 / H.263 version 2
Intel H.263
FLV / Sorenson Spark / Sorenson H.263 (Flash Video)
Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1
Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3
dvvideo
DV (Digital Video)
huffyuv
HuffYUV
Creative YUV (CYUV)
H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10
Intel Indeo 3
On2 VP3
ASUS V1
ASUS V2
FFmpeg video codec #1
4X Movie
ATI VCR1
Cirrus Logic AccuPak
Sony PlayStation MDEC (Motion DECoder)
id RoQ video
interplayvideo
Interplay MVE video
xan_wc3
Wing Commander III / Xan
xan_wc4
Wing Commander IV / Xxan
QuickTime video (RPZA)
cinepak
Cinepak
Westwood Studios VQA (Vector Quantized Animation) video
Microsoft RLE
msvideo1
Microsoft Video 1
id Quake II CIN video
QuickTime 8BPS video
QuickTime Graphics (SMC)
Autodesk Animator Flic video
truemotion1
Duck TrueMotion 1.0
vmdvideo
Sierra VMD video
LCL (LossLess Codec Library) MSZH
LCL (LossLess Codec Library) ZLIB
QuickTime Animation (RLE) video
TechSmith Screen Capture Codec
IBM UltiMotion
Apple QuickDraw
Miro VideoXL
Q-team QPEG
ffvhuff
Huffyuv FFmpeg variant
RealVideo 3.0
RealVideo 4.0
SMPTE VC-1
Windows Media Video 9
Winnov WNV1
Autodesk RLE
Intel Indeo 2
truemotion2
Duck TrueMotion 2.0
BMP (Windows and OS/2 bitmap)
CamStudio
mmvideo
American Laser Games MM Video
Zip Motion Blocks Video
AVS (Audio Video Standard) video
smackvideo
Smacker video
NuppelVideo/RTJPEG
Karl Morton's video codec
flashsv
Flash Screen Video v1
Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)
jpeg2000
JPEG 2000
VMware Screen Codec / VMware Video
On2 VP5
On2 VP6
On2 VP6 (Flash version)
dsicinvideo
Delphine Software International CIN video
tiertexseqvideo
Tiertex Limited SEQ video
Feeble Files/ScummVM DXA
VC3/DNxHD
Nintendo Gamecube THP video
Interplay C93
bethsoftvid
Bethesda VID video
On2 VP6 (Flash version, with alpha channel)
AMV Video
Beam Software VB
Intel Indeo Video Interactive 4
Intel Indeo Video Interactive 5
RL2 video
escape124
Escape 124
libavcodec/dct.c
Unknown chroma format %d
Bitdepth greater than 8
Stream is old and may not work
Stream may have unhandled features
Unsupported picture coding mode %d
Failed to get a buffer for %u: 0x%lx
Buffer for type %u was too small
Failed to release buffer type %u: 0x%lx
Failed to begin frame: 0x%lx
Failed to add picture parameter buffer
Failed to add inverse quantization matrix buffer
Failed to add bitstream or slice control buffer
Failed to execute: 0x%lx
Failed to end frame: 0x%lx
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"$(&)
#%*,!"$('+-.
h264_dxva2
Failed to build bitstream
internal error, slice end before start
MVs not available, ER not possible.
concealing %d DC, %d AC, %d MV errors
D>u='>Qf
c:\buildslave\libav_win32\build\dev\libavcodec\fft_template.c
c:\buildslave\libav_win32\build\dev\libavutil/file_open.c
invalid sync code
invalid channel mode: %d
invalid sample size code (%d)
broken stream, invalid padding
sample/frame number invalid; utf8 fscked
reserved blocksize code: 0
illegal sample rate code %d
header crc mismatch
extradata NULL or too small.
extradata contains %d bytes too many.
extradata too small.
invalid max blocksize: %d
couldn't reallocate wrap buffer of size %d
libavcodec/flac_parser.c
couldn't allocate FLACHeaderMarker
sample rate change detected in adjacent frames
bits per sample change detected in adjacent frames
blocking strategy change detected in adjacent frames
number of channels change detected in adjacent frames
sample/frame number mismatch in adjacent frames
crc check failed from offset %i (frame %lld) to %i (frame %lld)
dropping low score %i frame header from offset %i to %i
couldn't reallocate buffer of size %td
find_new_headers couldn't allocate FLAC header
Junk frame till offset %i
  Max Blocksize: %d
  Max Framesize: %d
  Samplerate: %d
  Channels: %d
  Bits: %d
illegal residual coding method %d
invalid predictor order: %i > %i
illegal pred order %d
invalid coeff precision
qlevel %d not supported, maybe buggy stream
invalid subframe padding
Invalid number of wasted bits > available bits (%d) - left=%d
Decorrelated bit depth > 32
invalid coding type
invalid frame header
bps not found in STREAMINFO or frame header
switching bps mid-stream is not supported
blocksize %d > %d
sample rate not found in STREAMINFO or frame header
invalid header
decode_frame() failed
overread: %d
underread: %d orig size: %d
trans_color
color value (ARGB) that is used instead of transparent color
picture doesn't have either global or local palette.
LZW init failed
code=%02x '%c'
cannot decode frame without keyframe
																
        
       
																
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"$(&)
#%*,!"$('+-.
Baseline
Constrained Baseline
Extended
High 10
High 10 Intra
High 4:2:2
High 4:2:2 Intra
High 4:4:4
High 4:4:4 Predictive
High 4:4:4 Intra
CAVLC 4:4:4
c:\buildslave\libav_win32\build\dev\libavutil/mem.h
top block unavailable for requested intra4x4 mode %d at %d %d
left block unavailable for requested intra4x4 mode %d at %d %d
out of range intra chroma pred mode at %d %d
top block unavailable for requested intra mode at %d %d
left block unavailable for requested intra mode at %d %d
libavcodec/h264.c
avcC %d too short
Decoding sps %d from avcC failed
Decoding pps %d from avcC failed
no picture
Delayed frames seen. Reenabling low delay requires a codec flush.
Unsupported bit depth %d
reference overflow
AVC: nal size %d
NAL %d at %d/%d length %d
AVC: Consumed only %d bytes instead of %d
Ignoring NAL unit %d during extradata parsing
Invalid mix of idr and non-idr slices
Decoding in chunks is not supported for partitioned slices.
SPS decoding failure, trying again with the complete NAL
Unknown NAL code: %d (%d bits)
decode_slice_header error
no frame!
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"$(&)
#%*,!"$('+-.
overflow in decode_cabac_mb_mvd
Reference %d >= %d
cabac decode of qscale diff failed at %d %d
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"#$%&'()*+,-./0123456789:;<=>?
 !"$(&)
#%*,!"$('+-.
corrupted macroblock %d %d (total_coeff=%d)
Invalid level prefix
negative number of zero coeffs at %d %d
mb_type %d in %c slice too large at %d %d
Not enough data for an intra PCM block.
B sub_mb_type %u out of range at %d %d
P sub_mb_type %u out of range at %d %d
ref %u overflow
cbp too large (%u) at %d %d
dquant out of range (%d) at %d %d
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 $(-28?GPZeq
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"$(&)
#%*,!"$('+-.
&'45<=67>?DELMFGNO\]de^_fglmtunovw
illegal reordering_of_pic_nums_idc %d
reference count %d overflow
illegal memory management control operation %d
pps_id %u out of range
non-existing PPS %u referenced
non-existing SPS %u referenced
missing picture in access unit
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"$(&)
#%*,!"$('+-.
libavcodec/h264_picture.c
!dst->f.buf[0]
src->f.buf[0]
hardware accelerator failed to decode picture
  !""##$$%%%&&&''''
 !"##$%&&'(())**+++,,,----
 !"#$%&'())*+,,-..//001112223333
&'45<=67>?DELMFGNO\]de^_fglmtunovw
 !"$(&)
#%*,!"$('+-.
cpb_count %d invalid
illegal aspect ratio
time_scale/num_units_in_tick invalid or unsupported (%lu/%lu)
Clipping illegal num_reorder_frames %d
Overread VUI by %d bits
sps_id %u out of range
libavcodec/h264_ps.c
chroma_format_idc %u
Different chroma and luma bit depth
log2_max_frame_num_minus4 out of range (0-12): %d
poc_cycle_length overflow %d
illegal POC type %d
too many reference frames %d
mb_width/height overflow
This stream was generated by a broken encoder, invalid 8x8 inference
discarding sps cropping, original values are l:%d r:%d t:%d b:%d
Reducing left cropping to %d chroma samples to preserve alignment.
PIC-AFF
sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %ld/%ld
Unimplemented luma bit depth=%d (max=10)
FMO not supported
reference overflow (pps)
weighted
pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s
&'45<=67>?DELMFGNO\]de^_fglmtunovw
reference count overflow
abs_diff_pic_num overflow
long_term_pic_idx overflow
illegal modification_of_pic_nums_idc %u
reference picture missing during reorder
Missing reference picture
%d %d %p
remove short %d count %d
short term list:
%lu fn:%d poc:%d %p
long term list:
Inconsistent MMCO state between slices [%d, %d, %d]
no mmco here
mmco:%d %d %d
mmco: unref short failure
mmco: unref short %d count %d
mmco: unref long failure
illegal short term reference assignment for second field in complementary field pair (first field is long term)
illegal short term buffer state detected
number of reference frames (%d+%d) exceeds max (%d; probably corrupt input), discarding one
illegal long ref in memory management control operation %d
Inconsistent MMCO state between slices [%d, %d]
&'45<=67>?DELMFGNO\]de^_fglmtunovw
ct_type:%X pic_struct:%d
x264 - core %d
user data:"%s"
non-existing SPS %d referenced in buffering period
SEI type %d truncated at %d
unknown SEI type %d
&'45<=67>?DELMFGNO\]de^_fglmtunovw
(&$ :".+
 !"$(&)
#%*,!"$('+-.
libavcodec/h264_slice.c
!pic->f.data[0]
!pic->hwaccel_picture_private
h264_slice_header_init() failed
Could not allocate memory
context_init() failed.
no frame buffer available
Invalid cropped dimensions: %dx%d.
Ignoring cropping information.
too many threads/slices %d, reducing to %d
slice type %d too large at %d %d
A non-intra slice in an IDR NAL unit.
changing width %d -> %d / height %d -> %d on slice %d
Reinit context to %dx%d, pix_fmt: %d
h264_slice_header_init() failed
Cannot (re-)initialize context during parallel decoding.
Changing field mode (%d -> %d) between slices is not allowed
unset cur_pic_ptr on slice %d
Invalid field mode combination %d/%d
Found reference and non-reference fields in the same frame, which
Frame num gap %d %d
first_mb_in_slice overflow
cabac_init_idc %u overflow
QP %u out of range
deblocking_filter_idc %u out of range
deblocking filter parameters %d %d out of range
Too many slices, increase MAX_SLICES and recompile
slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s
error while decoding MB %d %d, bytestream %td
error while decoding MB %d %d
Input contains more MB rows than the frame height.
&'45<=67>?DELMFGNO\]de^_fglmtunovw
Internal error, IDCT permutation not set
Pixel format list longer than expected, it is either not properly terminated or contains duplicates
libavcodec/imgconvert.c
libavcodec/lzw.c
 $(+.0368:<>@BDFHJLMOPRTUWXZ[\^_`bcdfghiklmnoprstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
#*1892+$
%,3:;4-&
'.5<=6/7>?
c:\buildslave\libav_win32\build\dev\libavcodec\mdct_template.c
internal error in cmp function selection
 !"#$%&'(
								
 &.4<D:6
 &.4@FL$
 &.4<D:6
 (08@LZ
overread, skip %d enddists: %d %d
bits_left=%d
big_values too big
invalid block type
invalid old backstep %d
invalid new backstep %d
c:\buildslave\libav_win32\build\dev\libavcodec\mpegaudiodec_template.c
s->frame != ((void *)0)
Header missing
Error while decoding MPEG audio frame.
"#()01*+$%&',-./2389:;4567<=>?
 (0891)!
"*2:#+3;
$,4<%-5=
&.6>'/7?
libavcodec/mpegvideo.c
get_buffer() failed (%d %p)
alloc_frame_buffer() failed (hwaccel private data allocation)
get_buffer() failed (stride changed)
get_buffer() failed (uv stride mismatch)
get_buffer() failed to allocate context scratch buffers.
Error allocating a picture.
!dst->f->buf[0]
src->f->buf[0]
failed to allocate context scratch buffers.
Failed to allocate context scratch buffers.
Context scratch buffers could not be allocated due to unknown size.
decoding to AV_PIX_FMT_NONE is not supported.
too many threads/slices (%d), reducing to %d
releasing zombie picture
warning: first frame is no keyframe
allocate dummy last picture for field based first keyframe
Non-reference picture received and no reference available
New frame, type: 
DCT coeffs of MB at %dx%d:
MPEG motion vector out of boundary (%d %d)
set bitrate (in bits/s)
Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.
unaligned
allow decoders to produce unaligned output
use four motion vectors per macroblock (MPEG-4)
use 1/4-pel motion compensation
use loop filter
use fixed qscale
use gmc
always try a mb with mv=<0,0>
input_preserved
use internal 2-pass ratecontrol in first  pass mode
use internal 2-pass ratecontrol in second pass mode
only decode/encode grayscale
emu_edge
do not draw edges
error[?] variables will be set during encoding
truncated
normalize adaptive quantization
use interlaced DCT
low_delay
force low delay
global_header
place global headers in extradata instead of every keyframe
bitexact
use only bitexact functions (except (I)DCT)
H.263 advanced intra coding / MPEG-4 AC prediction
interlaced motion estimation
closed GOP
output_corrupt
Output even potentially corrupted frames
allow non-spec-compliant speedup tricks
skip bitstream encoding
ignorecrop
ignore cropping information from sps
local_header
place global headers at every keyframe instead of in extradata
me_method
set motion estimation method
zero motion estimation (fastest)
full motion estimation (slowest)
EPZS motion estimation (default)
esa motion estimation (alias for full)
tesa motion estimation
diamond motion estimation (alias for EPZS)
log motion estimation
phods motion estimation
X1 motion estimation
hex motion estimation
umh motion estimation
extradata_size
time_base
set the group of picture (GOP) size
set audio sampling rate (in Hz)
set number of audio channels
set cutoff bandwidth
frame_size
frame_number
video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0
video quantizer scale blur (VBR)
minimum video quantizer scale (VBR)
maximum video quantizer scale (VBR)
maximum difference between the quantizer scales (VBR)
use 'frames' B frames
b_qfactor
QP factor between P- and B-frames
rc_strategy
ratecontrol method
b_strategy
strategy to choose between I/P/B-frames
RTP payload size in bytes
mv_bits
header_bits
i_tex_bits
p_tex_bits
i_count
p_count
skip_count
misc_bits
frame_bits
codec_tag
work around not autodetected encoder bugs
autodetect
old_msmpeg4
some old lavc-generated MSMPEG4v3 files (no autodetection)
xvid_ilace
Xvid interlacing bug (autodetected if FOURCC == XVIX)
(autodetected if FOURCC == UMP4)
no_padding
padding bug (autodetected)
illegal VLC bug (autodetected per FOURCC)
qpel_chroma
std_qpel
old standard qpel (autodetected per FOURCC/version)
qpel_chroma2
direct_blocksize
direct-qpel-blocksize bug (autodetected per FOURCC/version)
edge padding bug (autodetected per FOURCC/version)
hpel_chroma
dc_clip
work around various bugs in Microsoft's broken decoders
truncated frames
how strictly to follow the standards
strictly conform to a older more strict version of the spec or reference software
strictly conform to all the things in the spec no matter what the consequences
unofficial
allow unofficial extensions
experimental
allow non-standardized experimental things
b_qoffset
QP offset between P- and B-frames
err_detect
set error detection flags
crccheck
verify embedded CRCs
bitstream
detect bitstream specification deviations
detect improper bitstream length
explode
abort decoding on minor error detection
has_b_frames
block_align
mpeg_quant
use MPEG quantizers instead of H.263
qsquish
how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function)
rc_qmod_amp
experimental quantizer modulation
rc_qmod_freq
rc_override_count
Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.
maxrate
Set maximum bitrate tolerance (in bits/s). Requires bufsize to be set.
minrate
Set minimum bitrate tolerance (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.
bufsize
set ratecontrol buffer size (in bits)
rc_buf_aggressivity
currently useless
i_qfactor
QP factor between P- and I-frames
i_qoffset
QP offset between P- and I-frames
rc_init_cplx
initial complexity for 1-pass encoding
DCT algorithm
autoselect a good one (default)
fastint
fast integer
accurate integer
altivec
floating point AAN DCT
lumi_mask
compresses bright areas stronger than medium ones
tcplx_mask
temporal complexity masking
scplx_mask
spatial complexity masking
inter masking
dark_mask
compresses dark areas stronger than medium ones
select IDCT implementation
simplemmx
simplearm
simplearmv5te
simplearmv6
simpleneon
simplealpha
xvidmmx
floating point AAN IDCT
slice_count
set error concealment strategy
guess_mvs
iterative motion vector (MV) search (slow)
deblock
use strong deblock filter for damaged MBs
bits_per_coded_sample
prediction method
sample aspect ratio
print specific debug info
picture info
rate control
mb_type
macroblock (MB) type
per-block quantization parameter (QP)
motion vector
dct_coeff
startcode
error recognition
memory management control operations (H.264)
visualize quantization parameter (QP), lower QP are tinted greener
vis_mb_type
visualize block types
buffers
picture buffer allocations
thread_ops
threading operations
visualize motion vectors (MVs)
debug_mv
forward predicted MVs of P-frames
forward predicted MVs of B-frames
backward predicted MVs of B-frames
full-pel ME compare function
cmp_func
sub-pel ME compare function
macroblock compare function
ildctcmp
interlaced DCT compare function
dia_size
diamond type & size for motion estimation
last_pred
amount of motion predictors from the previous frame
pre motion estimation
pre motion estimation compare function
sum of absolute differences, fast (default)
sum of squared errors
sum of absolute Hadamard transformed differences
sum of absolute DCT transformed differences
sum of squared quantization errors (avoid, low quality)
number of bits needed for the block
rate distortion optimal, slow
sum of absolute vertical differences
sum of squared vertical differences
noise preserving sum of squared differences
pre_dia_size
diamond type & size for motion estimation pre-pass
sub-pel motion estimation quality
dtg_active_format
me_range
limit motion vectors range (1023 for DivX player)
intra quant bias
inter quant bias
global_quality
variable length coder / Huffman coder
arithmetic coder
raw (no encoding)
run-length coder
deflate
deflate-based coder
context
context model
slice_flags
xvmc_acceleration
macroblock decision algorithm (high quality mode)
use mbcmp (default)
use fewest bits
use best rate distortion
stream_codec_tag
sc_threshold
scene change threshold
minimum Lagrange factor (VBR)
maximum Lagrange factor (VBR)
noise reduction
rc_init_occupancy
number of bits which should be loaded into the rc buffer before decoding starts
threads
autodetect a suitable number of threads to use
me_threshold
motion estimation threshold
mb_threshold
macroblock threshold
intra_dc_precision
nsse weight
skip_top
number of macroblock rows at the top which are skipped
skip_bottom
number of macroblock rows at the bottom which are skipped
profile
unknown
aac_main
aac_low
aac_ssr
aac_ltp
aac_he_v2
aac_eld
mpeg2_aac_low
mpeg2_aac_he
dts_96_24
dts_hd_hra
dts_hd_ma
skip_threshold
frame skip threshold
skip_factor
frame skip factor
skip_exp
frame skip exponent
skipcmp
frame skip compare function
border_mask
increase the quantizer for macroblocks close to borders
minimum macroblock Lagrange factor (VBR)
maximum macroblock Lagrange factor (VBR)
motion estimation bitrate penalty compensation (1.0 = 256)
skip_loop_filter
avdiscard
skip_idct
skip_frame
default
bidir_refine
refine the two motion vectors used in bidirectional macroblocks
brd_scale
downscale frames for dynamic B-frame decision
keyint_min
minimum interval between IDR-frames (x264)
reference frames to consider for motion compensation
chromaoffset
chroma QP offset from luma
trellis
rate-distortion optimal quantization
sc_factor
multiplied by qscale for each frame and added to scene_change_score
mv0_threshold
b_sensitivity
adjust sensitivity of b_frame_strategy 1
compression_level
min_prediction_order
max_prediction_order
timecode_frame_start
GOP timecode frame start number, in non-drop-frame format
request_channels
set desired number of audio channels
bits_per_raw_sample
channel_layout
request_channel_layout
rc_max_vbv_use
rc_min_vbv_use
ticks_per_frame
color_primaries
color primaries
color_primaries_type
unspecified
Unspecified
BT.470 M
bt470bg
BT.470 BG
smpte170m
SMPTE 170 M
smpte240m
SMPTE 240 M
BT.2020
color_trc
color transfert characteristic
color_trc_type
gamma22
Gamma 2.2
gamma28
Gamma 2.8
log_sqrt
iec61966_2_4
BT.1361
iec61966_2_1
bt2020_10bit
BT.2020 - 10 bit
bt2020_12bit
BT.2020 - 12 bit
colorspace
colorspace_type
bt2020_ncl
BT.2020 NCL
bt2020_cl
BT.2020 CL
color_range
color range
color_range_type
MPEG (219*2^(n-8))
JPEG (2^n-1)
chroma_sample_location
log_level_offset
set the log level offset
number of slices, used in parallelized encoding
thread_type
select multithreading type
audio_service_type
audio service type
Main Audio Service
Effects
Visually Impaired
Hearing Impaired
Dialogue
Commentary
Emergency
Voice Over
Karaoke
request_sample_fmt
8-bit unsigned integer
16-bit signed integer
32-bit signed integer
32-bit float
64-bit double
8-bit unsigned integer planar
16-bit signed integer planar
32-bit signed integer planar
32-bit float planar
64-bit double planar
refcounted_frames
side_data_only_packets
AVCodecContext
libavcodec/options.c
ret >= 0
Tried to copy AVCodecContext %p into already-initialized %p
libavcodec/parser.c
reserved sample depth (0)
reserved sample rate (%d)
reserved channel configuration (%d)
PCM packet too small
PCM signed 16|20|24-bit big-endian for DVD media
libavcodec/pcm-dvd.c
PCM DVD unsupported sample depth
PCM channels out of bounds
Invalid sample_size
invalid PCM packet
Application has requested %d threads. Using a thread count greater than %d is not recommended.
c:\buildslave\libav_win32\build\dev\compat/w32pthreads.h
kernel32.dll
InitializeConditionVariable
WakeAllConditionVariable
WakeConditionVariable
SleepConditionVariableCS
A frame threaded decoder did not free the frame on failure. This is a bug, please report it.
libavcodec/pthread_frame.c
p->avctx->codec_type == AVMEDIA_TYPE_VIDEO
%p finished %d field %d
thread awaiting %d field %d from %p
detected %d logical cores
get_buffer() cannot be called after ff_thread_finish_setup()
thread_release_buffer called on pic %p
libavcodec/pthread_slice.c
ignoring invalid SAR: %u/%u
libavcodec/utils.c
default_get_buffer called on frame %p
pic->data[0]!=NULL in avcodec_default_get_buffer
default_get_buffer called on pic %p
Inconsistent channel configuration.
Too many channels: %d.
avctx->codec_type == AVMEDIA_TYPE_VIDEO
Could not find an AVHWAccel for the pixel format: %s
No codec provided to avcodec_open2().
This AVCodecContext was allocated for %s, but %s passed to avcodec_open2().
insufficient thread locking around avcodec_open/close()
ignoring invalid width/height values
codec type or id mismatches
Specified sample_fmt is not supported.
Specified pix_fmt is not supported
Specified sample_rate is not supported
channel_layout not specified
Specified channel_layout is not supported
channel layout does not match number of channels
Encoding to a planar sample format, with more than %d channels, but extended_data is not set.
extended_data is not set.
avctx->codec->encode2
start_display_time must be 0.
This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.
PARAM_CHANGE side data too small.
Error applying parameter changes.
invalid packet: NULL data, size != 0
mpeg2ts
%s / 0x%04X
Video: %s%s
, %dx%d
 [PAR %d:%d DAR %d:%d]
, %d/%d
, q=%d-%d
Audio: %s
, %d Hz
Data: %s
Subtitle: %s
Attachment: %s
Invalid Codec type %d
, pass 1
, pass 2
, %d kb/s
--prefix=/c/buildslave/libav_win32/build/dev/build_x86_64 --toolchain=msvc --enable-shared --disable-static --enable-runtime-cpudetect --disable-all --enable-avcodec --enable-avutil --enable-avresample --enable-avformat --enable-swscale --arch=x86_64 --enable-parser=h264 --enable-decoder='aac,h264,vp8,vp9,gif,vorbis,mp3,flac,alac,pcm*' --enable-demuxer='aac,matroska,gif,ogg,mov,mp3,flac,wav' --enable-hwaccels --enable-dxva2 --disable-decoder=mpeg1video --disable-decoder=mpeg2video --disable-decoder=vc1 --disable-decoder=h263 --enable-libvpx
libavcodec license: LGPL version 2.1 or later
%s is not implemented. Update your Libav version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.
If you want to help, upload a sample of this file to ftp://upload.libav.org/incoming/ and contact the libav-devel mailing list.
valve_h264
WinH264CreateDecoder
WinH264CreateDecoderD3D9
WinH264DestroyDecoder
WinH264DecoderProcessInput
WinH264DecoderProcessTimestamps
WinH264DecoderEndOfInput
WinH264DecoderWaitForOutput
WinH264DecoderAcquireOutput
WinH264DecoderReleaseOutput
steam.exe
steamwebhelper.exe
STEAMVIDEOTOKEN
32f5h290g53047gv5034nbvt923b
Duplicate value found in floor 1 X coordinates
14P;=4p
=5^LI5;aV5
u&62G16t
`H9SfU9
Dc9h	r9
/=mJ;=@vG=
;G>M.T>7
<*S"=JvW=
f#<?dY<
?Al	?Yi
$?tk(?>
/?+D3?m
?m=)T|=
X>p`_>(
W)?h.+?'
A?|3C?]
L\?qz]?]
n?a|o?v5p?
|?	X|?X
}?:F}?)z}?>
4>-"7>X<:>
a>2id>I
b!?~U"?dG#?
\.??C/?
??qd@?t3A?7
S??gT?g
Z?2f[?!
`?P&a?L
b?FIc?G
d?XTe?d
m?0+n?D
n?@Mo?*
s?	At?#
-v?Hov?
z?k {?pH{?
%|?qG|?lh|?
8}?|S}?sm}?
~?B$~?,8~?xK~?+^~?Fp~?
3=/	7=7T:=
N=I,R=(
U=7=Y=s
.>@;0>~
4>{\6>6
O>JXQ>B
^>|6`>z
h>,Vj>6
uo>3-q>
t>ZZv>K
,?;;-?6
9?)c:?0
<?,Q=?!
??~0@?P
D?{]E?'
V?S0W?y
_?HX_?d
_?~/`?{v`?
1d?ord?r
d?Z4e??te?
9k?4pk?5
m?`Im?,|m?
p?6Lp?uyp?]
Tr?.~r?
	u?L-u?{Pu?\su?
_x?.{x?
4y?UNy?
>z?`Uz?
>{?MR{?
e{?+y{?D
O|?A`|?
~?K)~?@3~?
F~?3P~?
t~?x}~?
C=/:E=3
YX=Z!Z=
Ra=X#c=
Rl={-n=
_{=7I}=
c">] #>&
->fU.>z
_1>E#2>
g;>q/<>
zB>sEC>
vJ>,DK>
~W>AQX>
	?CL	?>
!?sD!?5
$'?O`'?
-?@X-?=
'3?W`3?
	4?"A4?*y4?!
66?ln6?
H:?2~:?5
@?zJ@?c~@?8
DE?nvE?D
(H?QYH?
J?v;J?6kJ?
5P?kbP?4
LV?$vV?
9X?~bX?
F^?Vk^?
!_?1F_?Xj_?f
Za?Z}a?
Yc?S{c?
 d?nAd? bd?
e?R$e?\De?Nde?)
"f?WAf?
Vg?;ug?
)h?EGh?
k?0,k?vGk?
8l??Sl?
7n?!Pn?
)o?jAo?
Wp?.np?
Kq?raq?
Jr?I_r?
=s?JQs?
ds?}xs?
7t?^Jt?
Gu?;Yu?
6v?xFv?
Vv?(gv?dwv?
%w?u4w?
bw?(qw?'
fx?Mtx?
!y?w.y?C;y?
Ty?Bay?
my?Bzy?
9z?iDz?
Zz?3fz?Vqz?j|z?o
9{?|C{?`M{?5W{?
j{?\t{?
)|?h2|?
:|?CC|?
S|?'\|?Xd|?|l|?
.}?f5}?*<}?
I}?0P}?
V}?N]}?
c}?>j}?
w}?P}}?
:~?{?~?ND~?
R~?:W~?
[~?v`~?
n~?~r~?
v~?K{~?
6O:t[V:-
.;S 2;Bl5;
<;g~?;;
P;0sT;V
}j;REn;
%<RX'<i
*<T#,<(
<<~I><T
a<jpc<DJe<
Hv<_5x<"$z<
6=*r7=xD8=:
F=|[G=e6H=
L=VaM=h?N=
R=E}S=}^T=(@U=E"V=
]\=[C]=
ar=6Rs=
Ct=Y4u=
$>b(%>8
%>*E&>E
(>~@)>O
*>3`*>H
3>+z3>U
?>ZN@>K
E>*AF>W
P>"$Q>x
c>I3d> 
e>;Of>q
p>7dq>K
t>sEu>(
	?D<	?B\	?@|	?<
A ?2` ?
("?YF"?
#?K8#?{V#?
%?e	&?H'&?(E&?
3'?pQ'?.o'?
\(?Cz(?
+)?<I)?
4*?YR*?
=+?RZ+?
C,?!a,?B~,?_
.?g1.?KN.?+k.?
Q/?\n/?
S0?Mp0?
T2?Zp2?
63?BR3?ln3?
34?%O4?)k4?)
`6?D|6?
=7?4Y7?
58?mP8?
*9?9F9?ra9?
;?x-;?^H;??c;?
9<?TT<?
C=?o^=?
1>?TL>?
#@?}=@?vW@?jq@?Z
&A?Z@A?!ZA?
'B?AAB?
ZB?ftB?
&C?/@C?
=D?KVD?toD?
IF?lbF?({F?
'G?G@G?
XG?ZqG?
4H?'MH?yeH?
I?B'I?c?I?
/J?hGJ?H_J?"wJ?
LK?~dK?
 L?G8L?
gL?|~L?
gM?>~M?]
MN?vdN?]{N?>
1O?}HO?+_O?
@P?5WP?
	Q?& Q?]6Q?
R?C)R?5?R?"UR?	kR?
DS?yZS?
1T?.GT?
U?%1U?GFU?c[U?ypU?
:W?,OW?
cW?:xW?
DX?_XX?
7Z?fKZ?
5[?+I[?
K]?d^]?
*^?Q=^?
O^?$b^?
+_?$=_?=O_?Pa_?]s_?e
&`?b8`?(J`?
/a?}@a?
Qa?Mca?
!b?<2b?TCb?eTb?qeb?wvb?w
Qc?Sbc?
(d?>9d?
Yd?Hjd?
e?V,e?[<e?[Le?T\e?Gle?5|e?
9f?&If?
Xf?Uhf?
@g?@Og?v^g?
]h?Nlh?
Ui?Udi?
@k?DNk?
[k?mik?
%l?C2l?y?l?
m?r)m?<6m?
Om?w\m?*im?
%n?[1n?
In?EVn?
/o?};o?UGo?)So?
/p?(;p?
Qp?8]p?
0q?m;q?QFq?/Qq?
qq?r|q?6
;r?gEr?
Zr?sdr?
Bs?^Ls?5Vs?
ss?^}s?
3t?]<t?
Ot?TXt?
tt?W}t?
:u?SCu?
]u?Qfu?
1v?":v?\Bv?
cv?9kv?Vsv?p{v?
0w?H8w?
Gw?'Ow?
Vw?O^w?
ew?emw?
tw?i|w?
2x?'9x?-@x?.Gx?,Nx?$Ux?
\x?	cx?
$y?B+y?
8y?t>y?
Dy?*Ky?
^y?edy?
py?&wy?]}y?
*z?q0z?+6z?
Az??Gz?
Rz?0Xz?
]z?gcz?
^{?kc{?Gh{?
,|?H0|?
<|?*A|?ZE|?
Z|?4^|?Mb|?bf|?tj|?
&}?r)}?
,}?K0}?
7}?z:}?
=}?6A}?
G}?8K}?
Q}?!U}?hX}?
^}?.b}?je}?
o}?=r}?ju}?
2~?|4~?
6~?e9~?
;~?D>~?
G~?HJ~?
O~?`Q~?
V~?cX~?
]~?Q_~?
c~?)f~?lh~?
l~?(o~?bq~?
x~?3z~?b|~?
Id header is too short
Wrong packet type in Id header
Invalid packet signature in Id header
Invalid framing bit in Id header
Setup header is too short
Wrong packet type in Setup header
Invalid packet signature in Setup header
libavcodec/vorbis_parser.c
Out of memory
Invalid Setup header
%d modes (either a false positive or a sample from an unknown encoder)
Unsupported mode count: %d
Extradata corrupt.
Invalid packet
Invalid mode in packet
Index value %d out of range (0 - %d) for %s at %s:%i
libavcodec/vorbisdec.c
 %u. Codebook setup data corrupt.
 %u. Codebook's dimension is invalid (%d).
 %u. Codebook has too many entries (%u).
 More codelengths than codes in codebook. 
Bug in codevector vector building code. 
Codebook lookup type not supported. 
 Invalid code lengths while generating vlcs. 
 Error generating vlc tables. 
Vorbis time domain transform data nonzero. 
floor_setup->data.t1.class_masterbook[j]
Floor value is too large for blocksize: %u (%lu)
Floor 0 order is 0.
Floor 0 rate is 0.
Floor 0 bark map size is 0.
book_idx
Invalid floor type!
partition out of bounds: type, begin, end, size, blocksize: %hu, %lu, %lu, %u, %lu
res_setup->classbook
res_setup->books[j][k]
Other mappings than type 0 are not compliant with the Vorbis I specification. 
mapping_setup->magnitude[j]
mapping_setup->angle[j]
%u. mapping setup data invalid.
mapping_setup->submap_floor[j]
mapping_setup->submap_residue[j]
mode_setup->mapping
 Vorbis setup header packet corrupt (no vorbis signature). 
 Vorbis setup header packet corrupt (codebooks). 
 Vorbis setup header packet corrupt (time domain transforms). 
 Vorbis setup header packet corrupt (floors). 
 Vorbis setup header packet corrupt (residues). 
 Vorbis setup header packet corrupt (mappings). 
 Vorbis setup header packet corrupt (modes). 
 Vorbis setup header packet corrupt (framing flag). 
 Vorbis id header packet corrupt (no vorbis signature). 
Invalid number of channels
Invalid samplerate
 Vorbis id header packet corrupt (illegal blocksize). 
 Vorbis id header packet corrupt (framing flag not set). 
Extradata missing.
First header is not the id header.
Id header corrupt.
Third header is not the setup header.
Setup header corrupt.
floor0 dec: booknumber too high!
Insufficient output buffer
 Invalid residue type while residue decode?! 
Not a Vorbis I audio packet.
mode_number
Invalid codebook in vorbis_floor_decode.
Too many channels in vorbis_floor_decode.
N_U9203+a
v.F_KO{/3
Gf95)1}b*XhUu
dqe-?;Z
W%	s;M@
U7&F|If
U7>Ff=G%"5
y(E<G&Iw
 !"#$%%&'()*+,-../0123456789:;<=>?@ABCDEFGHIJKLLMNOPQRSTUVWXY[]_`bdefhjlnprtvz|~
Ran out of free frames!
libavcodec/vp8.c
Unknown profile %d
Upscaling
Unknown profile %d
Header size larger than data provided
Invalid start code 0x%x
Unspecified colorspace
Invalid partitions
q-index
lf-delta
partial-golden-update
blit-pitch
Feature %s present in macroblock (value 0x%x)
Discarding interframe without a prior keyframe!
get_buffer() failed!
libavcodec/vp9.c
Failed to initialize bitstream reader
Invalid frame marker
Reserved bit should be zero
Invalid sync code
RGB not supported in profile 0
Not all references are available
Failed to initialize decoder for %dx%d
Ran out of memory during range coder init
Invalid compressed header size
Marker bit was set
Unexpected partition %d.
Requested reference %d not available
Superframe packet size too big: %u > %d
cUw,>;C
<Z`:&Lra
3@:$=tr
NCw;&Spg
f[;< !pG
7B$//+r
F\?$&0\z
=<Q:/$|
@`p@@`@
IW\)SRc25''
 ($)!,%-
08491<5="*&+#.'/2:6;3>7?
?E=$% B
?49HoKC
?atan2f
?8UUUUU
?UUUUUU
"e?<<<<<<l?
Il?333333c?
d?000000`?
L?UUUUUUU?
&?PPPPPPP?
qS>g?h3
c?FA@s}
CreateFile2
?UUUUUU
sARoInitialize
RoUninitialize
?UUUUUU
?8bunz8
?@En[vP
?UUUUUU
@^8U)zj
?3ScR.>
?gibQ^AX>
WR_l%2>
)2STud>
J\;5yTb
<8bunz8
<@En[vP
Q5rHg,>
.>PJ;I:qE>
/2GG>!B
zY;>u:m	
0><[cZUg^>
[*ncd>0
S>$hkDh$h>[2
UA>N0Wl
CorExitProcess
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
InitializeCriticalSectionEx
CreateEventExW
CreateSemaphoreExW
SetThreadStackGuarantee
CreateThreadpoolTimer
SetThreadpoolTimer
WaitForThreadpoolTimerCallbacks
CloseThreadpoolTimer
CreateThreadpoolWait
SetThreadpoolWait
CloseThreadpoolWait
FlushProcessWriteBuffers
FreeLibraryWhenCallbackReturns
GetCurrentProcessorNumber
GetLogicalProcessorInformation
CreateSymbolicLinkW
SetDefaultDllDirectories
EnumSystemLocalesEx
CompareStringEx
GetDateFormatEx
GetLocaleInfoEx
GetTimeFormatEx
GetUserDefaultLocaleName
IsValidLocaleName
LCMapStringEx
GetCurrentPackageId
GetTickCount64
GetFileInformationByHandleExW
SetFileInformationByHandleW
MessageBoxW
GetActiveWindow
GetLastActivePopup
GetUserObjectInformationW
GetProcessWindowStation
_nextafter
Tuesday
Wednesday
Thursday
Saturday
January
February
September
October
November
December
MM/dd/yy
dddd, MMMM dd, yyyy
HH:mm:ss
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
SystemFunction036
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
c:\buildslave\libav_win32\build\dev\libavcodec\libavcodec-56.pdb
libavcodec-56.dll
av_bitstream_filter_close
av_bitstream_filter_filter
av_bitstream_filter_init
av_bitstream_filter_next
av_codec_is_decoder
av_codec_is_encoder
av_codec_next
av_dct_calc
av_dct_end
av_dct_init
av_destruct_packet
av_dup_packet
av_dv_codec_profile
av_dv_frame_profile
av_fast_padded_malloc
av_fft_calc
av_fft_end
av_fft_init
av_fft_permute
av_free_packet
av_get_audio_frame_duration
av_get_bits_per_sample
av_get_codec_tag_string
av_get_exact_bits_per_sample
av_get_profile_name
av_grow_packet
av_hwaccel_next
av_imdct_calc
av_imdct_half
av_init_packet
av_lockmgr_register
av_log_ask_for_sample
av_log_missing_feature
av_mdct_calc
av_mdct_end
av_mdct_init
av_new_packet
av_packet_copy_props
av_packet_free_side_data
av_packet_from_data
av_packet_get_side_data
av_packet_move_ref
av_packet_new_side_data
av_packet_ref
av_packet_rescale_ts
av_packet_shrink_side_data
av_packet_unref
av_parser_change
av_parser_close
av_parser_init
av_parser_next
av_parser_parse2
av_picture_copy
av_picture_crop
av_picture_pad
av_rdft_calc
av_rdft_end
av_rdft_init
av_register_bitstream_filter
av_register_codec_parser
av_register_hwaccel
av_shrink_packet
av_xiphlacing
avcodec_align_dimensions
avcodec_align_dimensions2
avcodec_alloc_context3
avcodec_alloc_frame
avcodec_close
avcodec_configuration
avcodec_copy_context
avcodec_decode_audio4
avcodec_decode_subtitle2
avcodec_decode_video2
avcodec_default_execute
avcodec_default_execute2
avcodec_default_get_buffer
avcodec_default_get_buffer2
avcodec_default_get_format
avcodec_default_reget_buffer
avcodec_default_release_buffer
avcodec_descriptor_get
avcodec_descriptor_get_by_name
avcodec_descriptor_next
avcodec_encode_audio2
avcodec_encode_subtitle
avcodec_encode_video2
avcodec_fill_audio_frame
avcodec_find_best_pix_fmt2
avcodec_find_decoder
avcodec_find_decoder_by_name
avcodec_find_encoder
avcodec_find_encoder_by_name
avcodec_flush_buffers
avcodec_free_context
avcodec_free_frame
avcodec_get_chroma_sub_sample
avcodec_get_class
avcodec_get_context_defaults3
avcodec_get_edge_width
avcodec_get_frame_defaults
avcodec_get_pix_fmt_loss
avcodec_get_type
avcodec_is_open
avcodec_license
avcodec_open2
avcodec_pix_fmt_to_codec_tag
avcodec_register
avcodec_register_all
avcodec_set_dimensions
avcodec_string
avcodec_version
avpicture_alloc
avpicture_deinterlace
avpicture_fill
avpicture_free
avpicture_get_size
avpicture_layout
avpriv_aac_parse_header
avpriv_ac3_channel_layout_tab
avpriv_align_put_bits
avpriv_copy_bits
avpriv_copy_pce_data
avpriv_dirac_parse_sequence_header
avpriv_find_start_code
avpriv_flac_is_extradata_valid
avpriv_flac_parse_streaminfo
avpriv_lock_avformat
avpriv_mpa_bitrate_tab
avpriv_mpa_decode_header
avpriv_mpa_freq_tab
avpriv_mpeg4audio_get_config
avpriv_mpeg4audio_sample_rates
avpriv_mpegaudio_decode_header
avpriv_put_string
avpriv_split_xiph_headers
avpriv_toupper4
avpriv_unlock_avformat
avpriv_vorbis_parse_extradata
avpriv_vorbis_parse_frame
avpriv_vorbis_parse_reset
avsubtitle_free
&=AL,=$
7d=T"j=
u=pE{=ga
V="'K=r
-8?}M:?
O?sVP?M
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
avpriv_strtod
avpriv_snprintf
av_malloc_tracked
av_freep
avpriv_float_dsp_init
av_frame_unref
av_free
av_mallocz_tracked
avpriv_report_missing_feature
avpriv_request_sample
av_realloc_tracked
av_rescale_q
av_buffer_alloc
av_buffer_create
av_buffer_default_free
av_buffer_ref
av_buffer_unref
av_buffer_realloc
av_pix_fmt_desc_get
av_image_fill_linesizes
av_image_fill_pointers
av_image_alloc
av_image_copy
av_image_check_size
av_reallocp
av_reduce
av_usleep
avpriv_emms_yasm
av_get_channel_layout_nb_channels
av_crc_get_table
av_fifo_alloc
av_fifo_free
av_fifo_size
av_fifo_generic_write
av_fifo_realloc2
av_fifo_drain
av_fast_realloc
av_get_bytes_per_sample
av_sample_fmt_is_planar
av_samples_get_buffer_size
av_samples_fill_arrays
av_fast_malloc
av_frame_alloc
av_frame_free
av_frame_ref
av_display_rotation_set
av_display_matrix_flip
av_buffer_pool_uninit
av_frame_new_side_data
av_stereo3d_create_side_data
av_get_picture_type_char
av_pix_fmt_get_chroma_sub_sample
av_buffer_allocz
av_buffer_pool_init
av_buffer_pool_get
av_get_bits_per_pixel
av_buffer_make_writable
av_strdup
av_opt_set_defaults
av_opt_set
av_cpu_count
av_frame_move_ref
av_vlog
av_log_get_level
av_strlcat
av_get_channel_layout_string
av_get_default_channel_layout
av_dict_copy
av_dict_free
av_get_sample_fmt_name
av_get_planar_sample_fmt
av_samples_copy
av_samples_set_silence
av_frame_get_buffer
av_frame_is_writable
av_frame_copy
av_frame_copy_props
av_frame_get_side_data
avpriv_set_systematic_pal2
av_get_pix_fmt_name
av_pix_fmt_count_planes
av_image_check_sar
av_opt_free
av_opt_set_dict
av_get_cpu_flags
libavutil-54.dll
MultiByteToWideChar
CloseHandle
InitializeCriticalSection
EnterCriticalSection
LeaveCriticalSection
DeleteCriticalSection
SetEvent
ResetEvent
ReleaseSemaphore
WaitForSingleObject
CreateEventA
GetModuleHandleA
GetProcAddress
CreateSemaphoreA
SetErrorMode
FreeLibrary
GetModuleFileNameW
GetModuleHandleExW
LoadLibraryW
GetEnvironmentVariableA
GetModuleFileNameA
IsProcessorFeaturePresent
CreateFileW
GetFileType
GetLastError
GetModuleHandleW
IsDebuggerPresent
GetStdHandle
WriteConsoleW
EncodePointer
DecodePointer
CreateThread
GetCurrentThreadId
ExitThread
LoadLibraryExW
HeapFree
GetCommandLineA
ExitProcess
AreFileApisANSI
WideCharToMultiByte
SetConsoleCtrlHandler
SetLastError
GetCurrentThread
SetStdHandle
RtlUnwindEx
GetStartupInfoW
WriteFile
GetConsoleCP
GetConsoleMode
SetEndOfFile
HeapAlloc
GetProcessHeap
ReadFile
ReadConsoleW
SetFilePointerEx
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
InitializeCriticalSectionAndSpinCount
CreateEventW
GetCurrentProcess
TerminateProcess
TlsAlloc
TlsGetValue
TlsSetValue
TlsFree
GetTickCount
CreateSemaphoreW
OutputDebugStringW
RaiseException
IsValidCodePage
GetOEMCP
GetCPInfo
QueryPerformanceCounter
GetCurrentProcessId
GetSystemTimeAsFileTime
GetEnvironmentStringsW
FreeEnvironmentStringsW
FatalAppExitA
FlushFileBuffers
HeapReAlloc
GetStringTypeW
GetDateFormatW
GetTimeFormatW
CompareStringW
LCMapStringW
GetLocaleInfoW
IsValidLocale
GetUserDefaultLCID
EnumSystemLocalesW
HeapSize
KERNEL32.dll
&'45<=67>?DELMFGNO\]de^_fglmtunovw
5?D)_?D)_?D)_?D)_?
{N{N{N{NFEFEFEFE
?	?	?	?	?	?	?	?	?
 @ @ @ @ @ @ @ @&
;3	3	3	3	3	3	3	3	
	3	3	3	3	3	3	3	3;
&@ @ @ @ @ @ @ @ 
?UUUUUU
?@s#0?LD
>W`.]tB3?
3?9y>m0_D@H_
Tp=9y>m0_D@H_
6p7M=:P_:}u
RlK8`K8
