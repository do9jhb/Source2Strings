!This program cannot be run in DOS mode.
`.rdata
@.reloc
@SUWATAUH
A]A\_][
UVWATAUAVAWH
A_A^A]A\_^]
UWATAUAVH
A^A]A\_]
@UAUAWH
VATAUAVAWH
 A_A^A]A\^
UWAUAVAWH
A_A^A]_]
\$ WATAVH
fffffff
r5fffff
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
r5fffff
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
|$ ATAUAVH
 A^A]A\
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
r/ffffff
rIfffff
WATAUAVAWH
 A_A^A]A\_
T$(H;T$8
\$0L;\$@
\$XH;|$P
r/ffffff
rIfffff
WATAUAVAWH
 A_A^A]A\_
T$(H;T$8
\$0L;\$@
\$XH;|$P
s*fffff
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
8A_A^A]A\_^][
s*fffff
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
8A_A^A]A\_^][
rQffffff
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
8A_A^A]A\_^][
rQffffff
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
8A_A^A]A\_^][
s,ffffff
|$ ATAUAVH
 A^A]A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
8A_A^A]A\_^][
D$HIcD$
D$ IcD$
D$(IcD$
D$0IcD$
sRffffff
UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
C0ffffff
)L$pfffff
)L$pfff
|$ ATAUAVAW
A_A^A]A\
|$ ATAUAVAW
A_A^A]A\
|$ ATAU
t$ WATAUAVH
A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
L$ SUAVH
@UVWATAUH
`A]A\_^]
uAE9i H
`A]A\_^]
SUVWAUAVAWH
@A_A^A]_^][
t$ WATAUAVAWH
0A_A^A]A\_
l$ VWATAUAVH
0A^A]A\_^
SUVWAUAVAWH
@A_A^A]_^][
SUVWAUAVAWH
D$0ffff
PA_A^A]_^][
WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
@UVATAVH
XA^A\^]
uAE9Y H
XA^A\^]
|$ ATAUAVH
 A^A]A\
D;"uU;j
@UVATAUAVAWH
(A_A^A]A\^]
|$ ATAUL
|$0A]A\
|$ ATAU
|$0A]A\
|$ ATAU
|$0A]A\
|$ ATAU
|$0A]A\
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
D$hHcD$p
A_A^A]A\_^][
@SUVWATAUAVAWH
D$hHcD$p
A_A^A]A\_^][
@SUVWATAUAVAWH
D$pHcD$x
A_A^A]A\_^][
|$ ATAUD
|$0A]A\
@UWAUAVH
|$ ATAUAV
|$8A^A]A\
|$ ATAUAV
|$8A^A]A\
@SVWAWH
LcD$hIc
|$pLcD$hM
@SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
LcD$`Ic
HcL$`Ic
|$hHcL$`
A_A^A]A\_^][
l$ ATAUAV
l$8A^A]A\
AUAVAWH
@A_A^A]
$IcD$(I
L$ IcE(I
$IcD$(I
L$ IcE(I
|$ ATAUAVD
|$8A^A]A\
AUAVAWH
0A_A^A]
T$$IcF(I
$IcD$(I
L$ IcE(I
l$ ATAUAV
l$8A^A]A\
AUAVAWH
@A_A^A]
$IcD$(I
L$ IcE(I
|$ ATAUAVD
|$8A^A]A\
AUAVAWH
0A_A^A]
T$$IcF(I
|$ ATAUAVD
|$8A^A]A\
$IcD$(I
|$8ffff
L$ IcE(I
l$ ATAUD
l$0A]A\
ATAUAVAW
\$(A_A^A]A\
I$A_A^A]A\
$IcD$(I
|$8ffff
L$ IcE(I
AUAVAWH
0A_A^A]
T$$IcF(I
|$ ATAUAVD
|$8A^A]A\
l$ ATAUAV
l$8A^A]A\
AUAVAWH
@A_A^A]
$IcD$(I
|$8ffff
L$ IcE(I
|$ ATAUAVD
|$8A^A]A\
ATAUAVAW
\$(A_A^A]A\
I$A_A^A]A\
$IcD$(I
|$8ffff
L$ IcE(I
l$ WAUAVD
l$8A^A]_
T$$IcF(I
ATAUAVAW
\$(A_A^A]A\
I$A_A^A]A\
$IcD$(I
|$8ffff
L$ IcE(I
$IcD$(I
|$8ffff
L$ IcE(I
l$ VAUAVD
l$8A^A]^
AUAVAWH
0A_A^A]
T$$IcF(I
ATAUAVAW
\$(A_A^A]A\
I$A_A^A]A\
$IcD$(I
|$8ffff
L$ IcE(I
l$ ATAUAV
l$8A^A]A\
AUAVAWH
@A_A^A]
$IcD$(I
|$8ffff
L$ IcE(I
l$ WAUAVD
l$8A^A]_
T$$IcF(I
UVWATAUH
i Lca(H;
 A]A\_^]
|$ ATAU
|$0A]A\
|$ ATAU
|$0A]A\
l$ VWATAUAVAWL
l$PA_A^A]A\_^
\$ UVWATAUAVAW
D$@HcD$HL
\$XA_A^A]A\_^]
@UVWAUAVH
 A^A]_^]
@SUVWATAUAVAWH
D$pHcD$x
A_A^A]A\_^][
|$ ATAUH
|$0A]A\
@SUVWATAUAVAWH
|$hHcD$p
A_A^A]A\_^][
@SUVWATAUAVAWH
D$pHcD$x
A_A^A]A\_^][
|$ ATAUAVAWL
|$@A_A^A]A\
t$ WATAUAVAWL
t$HA_A^A]A\_
VWAUAVH
l$(Ic@(I
hA^A]_^
SUVWATAUAVAWH
xA_A^A]A\_^][
t$ IcT$
t$ WATAVH
@UVWATAUAVH
A^A]A\_^]
|$hfffff
\$ UVWATAUH
@A]A\_^]
@SUVWATH
@A\_^][
WATAUAVAWH
A_A^A]A\_
L$ SUAVH
l$ WATAUH
`< t\<,u;3
@SWAUAWH
hA_A]_[
t)ffffff
@VATAUH
x ATAUAVH
																									
tNH9\$ uGH9\$(u@
u6H9|$8w/3
L;A(u$H
L;A u'L
@UWAUAWH
t6fffff
(A_A]_]
t$ ATAUE3
t;ffffff
t$0A]A\
CH;C(u=L
0Hc\$`L
USVWATAVAWH
`A_A^A\_^[]
D+cpD+ktE
`A_A^A\_^[]
xH90u	H
;|$h|1H;^Xu
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
YUY2wGt=
fffffff
VWATAUAWH
 A_A]A\_^
|$ ATAUAVH
0A^A]A\
\$ UVWH
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVH
\$8ffff
fffffff
A^A]A\_^][
SUVWATAUAVH
\$8ffff
A^A]A\_^][
SUVWATAUAVH
A^A]A\_^][
l$ VWATH
\$ UWAUH
VWATAUAVH
A^A]A\_^
t$h;8u>
@SUVWAVAWH
(A_A^_^][
d$h;\$`uDH
(A_A^_^][
=IYUVup
@SUVWAVH
PA^_^][
t$ WATAUH
c`D9cdtKH
d$ UAUAVH
UVATAVAWH
A_A^A\^]
@USAUAVAWH
A_A^A][]
|$ ATAUAVH
@A^A]A\
t$HA9l$
l$ VATAVH
SVATAUH
YV12t	A
NV12t	A
WATAUAVAWH
A_A^A]A\_
t$ WAUAVH
t$ WATAVH
VWATAUAWH
A_A]A\_^
VWATAUAWH
A_A]A\_^
SVWAVAWH
pA_A^_^[
VWATAUAVH
0A^A]A\_^
SUWATAUAVAWH
`A_A^A]A\_][
l$ VATAUH
l$ VWAVH
=NV21w2t)=
0-NV12t$
@SATAVAWH
=NV21w%tM=
/-NV12t#
hA_A^A\[
UVWATAUH
`A]A\_^]
\$ VATAUH
SWATAUAWH
pA_A]A\_[
UVWATAUAVAWH
@A_A^A]A\_^]
"B "B!<
l$(Lcl$`
@WATAVAWH
HA_A^A\_
\$ UVWATAVH
D$b"D$`"D$a"Eh<
A^A\_^]
SUVWATAUAVH
pA^A]A\_^][
D$@ffff
pA^A]A\_^][
SUVWATH
WATAUAVAWH
4Afffff
0A_A^A]A\_
UVATAVAWH
0A_A^A\^]
D$Pfffff
SUWAVAWH
`A_A^_][
SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWATAUAVAWH
(A_A^A]A\_^][
UWAVAWH
t$ WATAUH
l$ VWATH
@SUVWAVAWH
XA_A^_^][
fffffff
SUATAVH
hA^A\][
<-t	<0u
IPD9Aht
KPD9Aht
IPD9Aht
A+@HA+@@
A+@LA+@D
USVWAVAWH
A_A^_^[]
YUY2w tJA
YVYUt#A
A_A^_^[]
\$ VATAVH
@VATAUH
WATAUAVAWH
 A_A^A]A\_
t+fffffff
D$,+L$ 
WATAUAVAWH
<0ti<1teH
A_A^A]A\_
D$(9C,A
9s(u(9{,u#H
@UAUAVAWH
8A_A^A]]
@SVWATH
UVWATAUAVAWH
D$p=WAVEu	D
D$ =factt
|$ dataH
0A_A^A]A\_^]
KLD;C u
KTD;C(u
***********
*********
****************************************************************************
********
*******************
 !"#$%******************************************&*******************'()*****
L$ UATAUAVAWH
A_A^A]A\]
@UVWAUAVH
@A^A]_^]
t+H9q t%H
tZffffff
f9TMpu*
K`H;KXu
;\$`sTD
H;KXu	H
UVWATAUH
A]A\_^]
UATAUAVAWH
+L$DD+L$@
A9] ~II
A_A^A]A\]
|$ ATAUAVH
D$<+D$4f
D$@+D$8f
VWATAUAVH
A^A]A\_^
UVWATAUH
A]A\_^]
l$ VWATH
WATAUAVAWH
A_A^A]A\_
C H9h(u$H
K H9i u-H
@8{$tUH
|$ ATAUAVH
 A^A]A\
SUVWATAUAWH
 A_A]A\_^][
SUVWATAUAVH
 A^A]A\_^][
SUVWATAUAWH
 A_A]A\_^][
SUVWATAUAWH
 A_A]A\_^][
SUVWATAUAVH
 A^A]A\_^][
SUVWATAUAWH
 A_A]A\_^][
UVWAVAWH
A_A^_^]
L$ VWAUAVAW
l$@A_A^A]_^
UVWAVAWH
A_A^_^]
UVWAUAVAW
\$@A_A^A]_^]
UVWATAVAW
\$HA_A^A\_^]
UVWATAVAW
\$HA_A^A\_^]
l$p=YV12
t$ WATAUAVAWH
=YV12t~=YUY2t
=IYUVti=UYVY
0A_A^A]A\_
WATAUAVAWH
~;Lct$x
 A_A^A]A\_
=IYUVu H
\$ UVWAUAWH
YUY2t2A
UYVYt)A
YVYUt A
D9&uPD9f
=YV12td=YUY2tO=YVYUt:=IYUVt)=UYVYt
A_A]_^]
UYVYuSH
@UUUUUU
Application didn't initialize properly, did you include SDL_main.h in the file containing your main() function?
hg-0:aaaaaaaaaaah
Windows
Assertion Failed
always_ignore
SDL_ASSERT
Assertion failure at %s (%s:%d), triggered %u %s:
Always Ignore
    * %s (%s:%d)
    * triggered %u time%s.
    * always ignore: %s.
All SDL assertions between last init/quit:
SDL assertion report.
Invalid audio device ID
Audio device has a callback, queueing not allowed
No such device
No capture support
Audio subsystem is not initialized
System audio capture device
System audio output device
No available audio device
Audio target '%s' not available
SDL_AUDIODRIVER
SDL_AUDIO_SAMPLES
SDL_AUDIO_CHANNELS
Unsupported number of audio channels.
SDL_AUDIO_FORMAT
SDL_AUDIO_FREQUENCY
Couldn't create audio thread
SDLAudioDev%d
Couldn't create mixer lock
No such device.
Audio device already open
SDL_AUDIO_DEVICE_NAME
Too many open audio devices
Audio device is already opened
No buffer allocated for conversion
No conversion available for these formats
No conversion available for these rates
Source or destination channels is zero
Source or destination rate is zero
Invalid destination format
Invalid source format
Parameter '%s' is invalid
APassed NULL destination surface
SDL_BlendFillRects(): Unsupported surface format
SDL_BlendLines(): Unsupported surface format
SDL_BlendLines(): Passed NULL destination surface
SDL_BlendPoint(): Unsupported surface format
SDL_BlendPoints(): Unsupported surface format
SDL_BLIT_CPU_FEATURES
Blit combination not supported
Error reading from BMP
Compressed BMP files not supported
File is not a Windows BMP file
Couldn't convert image to %d bpp
%d bpp BMP files not supported
Video subsystem must be initialized to set clipboard text
Video subsystem must be initialized to get clipboard text
Video subsystem must be initialized to check clipboard text
Unknown
AuthenticAMD
GenuineIntel
Haptic error %s
UTF-16LE
Haptic: Internal error on finding supported effects.
Enumerating supported effects
Enabling actuators
Resetting device
Acquiring DirectInput device
Getting device axes
Setting data format
Setting cooperative level to exclusive
Querying DirectInput interface
Creating DirectInput device
Couldn't find joystick in haptic device list
Haptic: Unknown direction type.
Haptic: Unknown effect type.
Unable to create effect
Unable to update effect
Running the effect
Unable to stop effect
Removing effect from the device
Getting effect status
Setting gain
Setting autocenter
Pausing the device
Stopping the device
Enumerating DirectInput devices
Initializing DirectInput device
GetModuleHandle() failed with error code %lu.
CoCreateInstance
Coinitialize
Haptic: SubSystem already open.
%s() DirectX error 0x%8.8lx
IDirectInput::Initialize
CoInitialize
IDirectInputDevice8::SetProperty
IDirectInputDevice8::Unacquire
IDirectInputDevice8::Acquire
IDirectInputDevice8::GetCapabilities
IDirectInputDevice8::SetDataFormat
IDirectInputDevice8::SetCooperativeLevel
IDirectInputDevice8::QueryInterface
IDirectInput::CreateDevice
DirectSound
directsound
DirectSound: System doesn't appear to have DX8.
DirectSoundCaptureEnumerateW
DirectSoundEnumerateW
DirectSoundCreate8
DirectSound: failed to load DSOUND.DLL
DSOUND.DLL
Invalid call for the current state
Caller doesn't have priority
Unsupported audio format
No audio device found
Mixing buffer was lost
%s: Unknown DirectSound error: 0x%x
Control requested is not available
Function not supported
Unsupported interface -- Is DirectX 8.0 or later installed?
Out of memory
Invalid parameter
Audio device in use
DirectSound GetCurrentPosition
DirectSound Lock
Sound buffer size must be between %d and %d
DirectSound CreateSoundBuffer
DirectSound SetCooperativeLevel
DirectSound: Unsupported audio format
DirectSoundCreate
direct-to-disk audio
sdlaudio.raw
SDL_DISKAUDIOFILE
SDL_DISKAUDIODELAY
SDL_DrawLines(): Unsupported surface format
SDL_DrawLines(): Passed NULL destination surface
SDL_DrawPoint(): Unsupported surface format
SDL_DrawPoints(): Unsupported surface format
SDL dummy audio driver
SDL_DYNAPI_entry
SDL_DYNAMIC_API
Could not load EGL library
Could not initialize EGL
Could not get EGL display
Could not retrieve EGL function eglQueryString
eglQueryString
Could not retrieve EGL function eglBindAPI
eglBindAPI
Could not retrieve EGL function eglWaitGL
eglWaitGL
Could not retrieve EGL function eglWaitNative
eglWaitNative
Could not retrieve EGL function eglSwapInterval
eglSwapInterval
Could not retrieve EGL function eglSwapBuffers
eglSwapBuffers
Could not retrieve EGL function eglMakeCurrent
eglMakeCurrent
Could not retrieve EGL function eglDestroySurface
eglDestroySurface
Could not retrieve EGL function eglCreateWindowSurface
eglCreateWindowSurface
Could not retrieve EGL function eglDestroyContext
eglDestroyContext
Could not retrieve EGL function eglCreateContext
eglCreateContext
Could not retrieve EGL function eglGetConfigAttrib
eglGetConfigAttrib
Could not retrieve EGL function eglChooseConfig
Could not retrieve EGL function eglGetProcAddress
eglGetProcAddress
Could not retrieve EGL function eglTerminate
eglTerminate
Could not retrieve EGL function eglInitialize
eglInitialize
Could not retrieve EGL function eglGetDisplay
eglGetDisplay
libEGL.dll
SDL_VIDEO_EGL_DRIVER
eglChooseConfig
Could not initialize OpenGL / GLES library
libGLES_CM.dll
libGLESv1_CM.dll
libGLESv2.dll
SDL_VIDEO_GL_DRIVER
d3dcompiler_43.dll
d3dcompiler_46.dll
SDL_VIDEO_WIN_D3DCOMPILER
OpenGL ES context already created
Couldn't find matching EGL config
EGL implementation does not support sRGB system framebuffers
EGL_KHR_create_context
EGL_KHR_gl_colorspace
Unable to make EGL context current
OpenGL not initialized
EGL not initialized
Could not create EGL context (context attributes are not supported)
Could not make EGL context current
Could not create EGL context
Error reading from datastream
Error writing to datastream
Error seeking in datastream
That operation is not supported
Unknown SDL error
SDL EVENT QUEUE: Maximum events in-flight: %d
SDL_EVENT_QUEUE_STATISTICS
Event queue is full (%d events)
Couldn't lock event queue
The event system has been shut down
SDL_FillRect(): You must lock the surface
SDL_FillRect(): Unsupported surface format
SDL_FillRects() passed NULL rects
dpright
rightshoulder
leftshoulder
rightstick
leftstick
righttrigger
lefttrigger
4c05c405000000000000504944564944,PS4 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:a3,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:a4,rightx:a2,righty:a5,start:b9,x:b0,y:b3,
25090500000000000000504944564944,PS3 DualShock,a:b2,b:b1,back:b9,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b6,leftstick:b10,lefttrigger:b4,leftx:a0,lefty:a1,rightshoulder:b7,rightstick:b11,righttrigger:b5,rightx:a2,righty:a3,start:b8,x:b0,y:b3,
4c056802000000000000504944564944,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,
88880803000000000000504944564944,PS3 Controller,a:b2,b:b1,back:b8,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b9,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:b7,rightx:a3,righty:a4,start:b11,x:b0,y:b3,
4d6963726f736f66742050432d6a6f79,OUYA Controller,a:b0,b:b3,dpdown:b9,dpleft:b10,dpright:b11,dpup:b8,guide:b14,leftshoulder:b4,leftstick:b6,lefttrigger:b12,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:b13,rightx:a5,righty:a4,x:b1,y:b2,
6d0419c2000000000000504944564944,Logitech F710 Gamepad,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
6d0418c2000000000000504944564944,Logitech F510 Gamepad,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
6d0416c2000000000000504944564944,Generic DirectInput Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
ffff0000000000000000504944564944,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,
e8206058000000000000504944564944,Cideko AK08b,a:b2,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b3,y:b0,
341a3608000000000000504944564944,Afterglow PS3 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
xinput,XInput Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b10,leftshoulder:b4,leftstick:b8,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b9,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,
Hat index too large: %d
Button index too large: %d
Axis index too large: %d
Joystick button name too large: %s
Button name too large: %s
Couldn't parse %s
Couldn't parse name from %s
emscripten
Couldn't parse GUID from %s
mappingString
%s,%s,%s
SDL_GAMECONTROLLERCONFIG
There are %d joysticks available
Couldn't find mapping for device (%d)
platform:
Could not read DB
Could not allocate space to read DB into memory
Invalid RWops
Unknown gestureId
no gesture touch devices registered
could not read any dollar gesture from rwops
given touch id not found
?ERROR: NumPoints = %i
Haptic: Invalid haptic device identifier
Haptic: There are %d haptic devices available
Haptic: Joystick isn't a haptic device.
Haptic: Joystick isn't valid.
Haptic: Device has no free space left.
Haptic: Effect not supported by haptic device.
Haptic: Invalid effect identifier.
Haptic: Updating effect type is illegal.
Haptic: Device does not support status queries.
Haptic: Gain must be between 0 and 100.
SDL_HAPTIC_GAIN_MAX
Haptic: Device does not support setting gain.
Haptic: Autocenter must be between 0 and 100.
Haptic: Device does not support setting autocenter.
Haptic: Device does not support setting pausing.
Device doesn't support rumble
Haptic: Rumble effect not initialized on haptic device
Haptic: Mouse isn't a haptic device.
callback
UCS-4-INTERNAL
UCS-4BE
UCS-4LE
UCS-2-INTERNAL
UCS-2BE
UCS-2LE
UTF-32LE
UTF32LE
UTF-32BE
UTF32BE
UTF16LE
UTF-16BE
UTF16BE
ISO-8859-1
US-ASCII
LC_MESSAGES
LC_CTYPE
0123456789abcdef
SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS
Joystick hasn't been opened yet
Joystick only has %d axes
Joystick only has %d hats
Joystick only has %d balls
Joystick only has %d buttons
KBDIllumUp
KBDIllumDown
KBDIllumToggle
DisplaySwitch
BrightnessUp
BrightnessDown
AC Bookmarks
AC Refresh
AC Stop
AC Forward
AC Back
AC Home
AC Search
Computer
Calculator
MediaSelect
AudioMute
AudioPlay
AudioStop
AudioPrev
AudioNext
ModeSwitch
Right GUI
Right Alt
Right Shift
Right Ctrl
Left GUI
Left Alt
Left Shift
Left Ctrl
Keypad Hexadecimal
Keypad Decimal
Keypad Octal
Keypad Binary
Keypad ClearEntry
Keypad Clear
Keypad +/-
Keypad MemDivide
Keypad MemMultiply
Keypad MemSubtract
Keypad MemAdd
Keypad MemClear
Keypad MemRecall
Keypad MemStore
Keypad !
Keypad @
Keypad Space
Keypad #
Keypad :
Keypad ||
Keypad |
Keypad &&
Keypad &
Keypad >
Keypad <
Keypad %
Keypad ^
Keypad XOR
Keypad F
Keypad E
Keypad D
Keypad C
Keypad B
Keypad A
Keypad Backspace
Keypad Tab
Keypad }
Keypad {
Keypad )
Keypad (
CurrencySubUnit
CurrencyUnit
DecimalSeparator
ThousandsSeparator
Keypad 000
Keypad 00
Clear / Again
Separator
AltErase
Keypad = (AS400)
Keypad ,
VolumeDown
VolumeUp
Execute
Keypad =
Application
Keypad .
Keypad 0
Keypad 9
Keypad 8
Keypad 7
Keypad 6
Keypad 5
Keypad 4
Keypad 3
Keypad 2
Keypad 1
Keypad Enter
Keypad +
Keypad -
Keypad *
Keypad /
Numlock
PageDown
ScrollLock
PrintScreen
CapsLock
Backspace
scancode
CRITICAL
VERBOSE
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
SDL_MixAudio(): unknown audio format
SDL_MOUSE_RELATIVE_MODE_WARP
No window has focus
Cursor hot spot doesn't lie within cursor
Cursors are not currently supported
Passed NULL cursor surface
CreateSystemCursor is not currently supported
Cursor not associated with the current mouse
_SDL_DummySurface
SDL_window%d-%8.8d.bmp
SDL_VIDEO_DUMMY_SAVE_FRAMES
Couldn't find dummy surface for window
SDL dummy video driver
SDL_VIDEODRIVER
SDL_PIXELFORMAT_YVYU
SDL_PIXELFORMAT_IYUV
SDL_PIXELFORMAT_UYVY
SDL_PIXELFORMAT_UNKNOWN
SDL_PIXELFORMAT_YUY2
SDL_PIXELFORMAT_BGR24
SDL_PIXELFORMAT_NV21
SDL_PIXELFORMAT_NV12
SDL_PIXELFORMAT_YV12
SDL_PIXELFORMAT_RGB24
SDL_PIXELFORMAT_BGR888
SDL_PIXELFORMAT_BGRX8888
SDL_PIXELFORMAT_ABGR8888
SDL_PIXELFORMAT_BGRA8888
SDL_PIXELFORMAT_RGBA8888
SDL_PIXELFORMAT_RGB888
SDL_PIXELFORMAT_RGBX8888
SDL_PIXELFORMAT_ARGB8888
SDL_PIXELFORMAT_ARGB2101010
SDL_PIXELFORMAT_BGRA5551
SDL_PIXELFORMAT_ABGR4444
SDL_PIXELFORMAT_ABGR1555
SDL_PIXELFORMAT_BGRA4444
SDL_PIXELFORMAT_BGR565
SDL_PIXELFORMAT_ARGB1555
SDL_PIXELFORMAT_RGBA4444
SDL_PIXELFORMAT_RGBA5551
SDL_PIXELFORMAT_BGR555
SDL_PIXELFORMAT_ARGB4444
SDL_PIXELFORMAT_RGB332
SDL_PIXELFORMAT_RGB444
SDL_PIXELFORMAT_RGB555
SDL_PIXELFORMAT_RGB565
SDL_PIXELFORMAT_INDEX8
SDL_PIXELFORMAT_INDEX1LSB
SDL_PIXELFORMAT_INDEX1MSB
SDL_PIXELFORMAT_INDEX4LSB
SDL_PIXELFORMAT_INDEX4MSB
Unknown pixel format
FOURCC pixel formats are not supported
ncolors
palette
SDL_SetPixelFormatPalette() passed a palette that doesn't match the format
SDL_SetPixelFormatPalette() passed NULL format
SDL_NO_SIGNAL_HANDLERS
numrects
index must be in the range of 0 - %d
_SDL_WindowRenderData
Invalid renderer
Invalid texture
SDL_LockTexture(): texture must be streaming
Texture not created with SDL_TEXTUREACCESS_TARGET
Texture was not created with this renderer
SDL_RenderDrawPoints(): Passed NULL points
SDL_RenderDrawLines(): Passed NULL points
SDL_RenderDrawRects(): Passed NULL rects
SDL_RenderFillRects(): Passed NULL rects
Renderer does not support RenderCopyEx
Renderer doesn't support querying output size
Palettized textures are not supported
Texture dimensions can't be 0
Texture dimensions are limited to %dx%d
Invalid texture format
Texture format must by YV12 or IYUV
SDL_CreateTextureFromSurface() passed NULL surface
?Created renderer: %s
index must be -1 or in the range of 0 - %d
Couldn't find matching render driver
SDL_RENDER_DRIVER
SDL_RENDER_VSYNC
Renderer already associated with window
Invalid window
direct3d
UNKNOWN
DRIVERINVALIDCALL
INVALIDCALL
INVALIDDEVICE
NOTAVAILABLE
DEVICENOTRESET
DEVICELOST
MOREDATA
NOTFOUND
DRIVERINTERNALERROR
CONFLICTINGTEXTUREPALETTE
UNSUPPORTEDTEXTUREFILTER
CONFLICTINGRENDERSTATE
UNSUPPORTEDFACTORVALUE
CONFLICTINGTEXTUREFILTER
TOOMANYOPERATIONS
UNSUPPORTEDALPHAARG
UNSUPPORTEDALPHAOPERATION
UNSUPPORTEDCOLORARG
UNSUPPORTEDCOLOROPERATION
WRONGTEXTUREFORMAT
OUTOFVIDEOMEMORY
WASSTILLDRAWING
?nearest
SDL_RENDER_SCALE_QUALITY
CreateTexture(D3DPOOL_DEFAULT)
CreateTexture(D3DPOOL_SYSTEMMEM)
SetTexture()
UpdateTexture()
UnlockRect()
LockRect()
Texture is not currently available
SetRenderTarget()
GetSurfaceLevel()
SetScissor()
GetRenderTargetData()
CreateOffscreenPlainSurface()
GetDesc()
Renderer is not a D3D renderer
Reset()
BeginScene()
Clear()
DrawPrimitiveUP()
SetShader()
!	@Present()
CreatePixelShader()
GetPresentParameters()
GetSwapChain()
CreateDevice()
SDL_RENDER_DIRECT3D_THREADSAFE
Unable to create Direct3D interface
;GL_OUT_OF_MEMORY
GL_TABLE_TOO_LARGE
GL_STACK_UNDERFLOW
GL_INVALID_VALUE
GL_INVALID_OPERATION
GL_STACK_OVERFLOW
GL_INVALID_ENUM
GL_NO_ERROR
%s: %s (%d): %s %s (0x%X)
generic
%s: %s (%d): %s %s
glViewport
glVertex3fv
glVertex2f
glTranslatef
glTexSubImage2D
glTexParameteri
glTexImage2D
glTexEnvf
glTexCoord2f
glShadeModel
glScissor
glRotatef
glRotated
glRectf
glReadPixels
glReadBuffer
glRasterPos2i
glPushMatrix
glPopMatrix
glPointSize
glPixelStorei
glOrtho
glMatrixMode
glLoadIdentity
glLineWidth
glGetString
glGetPointerv
glGetIntegerv
glGetError
glGenTextures
glEnable
glDrawPixels
glDisable
glDepthFunc
glDeleteTextures
glColor4f
glColor3fv
glClearColor
glClear
glBlendFuncSeparate
glBlendFunc
glBindTexture
Couldn't load GL function %s: %s
glBegin
..\..\src\render\opengl\SDL_render_gl.c
GL_UpdateViewport
GL_DestroyRenderer
glDebugMessageCallbackARB
GL_ResetState
glTexImage2D()
glGenTextures()
GL_CreateTexture
Texture format %s not supported by OpenGL
GL_UpdateTexture
glTexSubImage2D()
GL_UpdateTextureYUV
glFramebufferTexture2DEXT() failed
GL_RenderDrawLines
GL_RenderFillRects
GL_RenderCopy
GL_RenderCopyEx
GL_RenderReadPixels
glReadPixels()
glCheckFramebufferStatusEXT
glBindFramebufferEXT
glFramebufferTexture2DEXT
glDeleteFramebuffersEXT
glGenFramebuffersEXT
GL_EXT_framebuffer_object
OpenGL shaders: %s
DISABLED
ENABLED
SDL_RENDER_OPENGL_SHADERS
glActiveTextureARB
GL_ARB_multitexture
GL_EXT_texture_rectangle
GL_ARB_texture_rectangle
GL_ARB_texture_non_power_of_two
GL_ARB_debug_output
opengles2
glBufferSubData
glBufferData
glBindBuffer
glGenBuffers
glGetProgramInfoLog
glGetAttribLocation
glDeleteFramebuffers
glCheckFramebufferStatus
glFramebufferTexture2D
glBindFramebuffer
glVertexAttribPointer
glUseProgram
glUniformMatrix4fv
glUniform4f
glUniform1i
glShaderSource
glShaderBinary
glLinkProgram
glGetUniformLocation
glGetShaderiv
glGetShaderInfoLog
glGetProgramiv
glGetBooleanv
glGenFramebuffers
glFinish
glEnableVertexAttribArray
glDrawArrays
glDisableVertexAttribArray
glDeleteShader
glDeleteProgram
glCreateShader
glCreateProgram
glCompileShader
glBindAttribLocation
glAttachShader
Couldn't load GLES2 function %s: %s
glActiveTexture
glFramebufferTexture2D() failed
The specified shader cannot be loaded on the current platform
Failed to load the shader
Failed to load the shader: %s
No shader matching the requested characteristics was found
..\..\src\render\opengles2\SDL_render_gles2.c
GLES2_UpdateViewport
u_color
u_modulation
u_texture
u_texture_u
u_texture_v
u_projection
Failed to link shader program
a_center
a_angle
a_texCoord
a_position
Unsupported texture format
GLES2_DestroyRenderer
glGenTexures()
GLES2_CreateTexture
Texture format not supported
GLES2_UpdateTexture
GLES2_UpdateTextureYUV
GLES2_RenderDrawLines
GLES2_RenderFillRects
GLES2_RenderCopy
GLES2_RenderCopyEx
v@GLES2_RenderReadPixels
GLES2_ResetState
software
Unknown texture format
Software renderer doesn't have an output surface
Tried to read outside of surface bounds
Can't create renderer for NULL surface
@Couldn't open %s
windows_file_size: invalid context/file not opened
windows_file_size
windows_file_seek: invalid context/file not opened
windows_file_seek
windows_file_seek: Unknown value for 'whence'
Unknown value for 'whence'
Can't write to read-only memory
SDL not compiled with stdio support
SDL_RWFromFile(): No file or no mode specified
varying vec4 v_color;
varying vec2 v_texCoord;
uniform sampler2D tex0; // Y 
uniform sampler2D tex1; // U/V 
// YUV offset 
const vec3 offset = vec3(-0.0627451017, -0.501960814, -0.501960814);
// RGB coefficients 
const vec3 Rcoeff = vec3(1.164,  0.000,  1.596);
const vec3 Gcoeff = vec3(1.164, -0.391, -0.813);
const vec3 Bcoeff = vec3(1.164,  2.018,  0.000);
void main()
    vec2 tcoord;
    vec3 yuv, rgb;
    // Get the Y value 
    tcoord = v_texCoord;
    yuv.x = texture2D(tex0, tcoord).r;
    // Get the U and V values 
    tcoord *= UVCoordScale;
    yuv.yz = texture2D(tex1, tcoord).ar;
    // Do the color transform 
    yuv += offset;
    rgb.r = dot(yuv, Rcoeff);
    rgb.g = dot(yuv, Gcoeff);
    rgb.b = dot(yuv, Bcoeff);
    // That was easy. :) 
    gl_FragColor = vec4(rgb, 1.0) * v_color;
varying vec4 v_color;
varying vec2 v_texCoord;
uniform sampler2D tex0; // Y 
uniform sampler2D tex1; // U/V 
// YUV offset 
const vec3 offset = vec3(-0.0627451017, -0.501960814, -0.501960814);
// RGB coefficients 
const vec3 Rcoeff = vec3(1.164,  0.000,  1.596);
const vec3 Gcoeff = vec3(1.164, -0.391, -0.813);
const vec3 Bcoeff = vec3(1.164,  2.018,  0.000);
void main()
    vec2 tcoord;
    vec3 yuv, rgb;
    // Get the Y value 
    tcoord = v_texCoord;
    yuv.x = texture2D(tex0, tcoord).r;
    // Get the U and V values 
    tcoord *= UVCoordScale;
    yuv.yz = texture2D(tex1, tcoord).ra;
    // Do the color transform 
    yuv += offset;
    rgb.r = dot(yuv, Rcoeff);
    rgb.g = dot(yuv, Gcoeff);
    rgb.b = dot(yuv, Bcoeff);
    // That was easy. :) 
    gl_FragColor = vec4(rgb, 1.0) * v_color;
varying vec4 v_color;
varying vec2 v_texCoord;
uniform sampler2D tex0; // Y 
uniform sampler2D tex1; // U 
uniform sampler2D tex2; // V 
// YUV offset 
const vec3 offset = vec3(-0.0627451017, -0.501960814, -0.501960814);
// RGB coefficients 
const vec3 Rcoeff = vec3(1.164,  0.000,  1.596);
const vec3 Gcoeff = vec3(1.164, -0.391, -0.813);
const vec3 Bcoeff = vec3(1.164,  2.018,  0.000);
void main()
    vec2 tcoord;
    vec3 yuv, rgb;
    // Get the Y value 
    tcoord = v_texCoord;
    yuv.x = texture2D(tex0, tcoord).r;
    // Get the U and V values 
    tcoord *= UVCoordScale;
    yuv.y = texture2D(tex1, tcoord).r;
    yuv.z = texture2D(tex2, tcoord).r;
    // Do the color transform 
    yuv += offset;
    rgb.r = dot(yuv, Rcoeff);
    rgb.g = dot(yuv, Gcoeff);
    rgb.b = dot(yuv, Bcoeff);
    // That was easy. :) 
    gl_FragColor = vec4(rgb, 1.0) * v_color;
varying vec4 v_color;
varying vec2 v_texCoord;
uniform sampler2D tex0;
void main()
    gl_FragColor = texture2D(tex0, v_texCoord) * v_color;
varying vec4 v_color;
varying vec2 v_texCoord;
void main()
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
    v_color = gl_Color;
    v_texCoord = vec2(gl_MultiTexCoord0);
varying vec4 v_color;
void main()
    gl_FragColor = v_color;
varying vec4 v_color;
void main()
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
    v_color = gl_Color;
Failed to compile shader:
#define sampler2D sampler2DRect
#define texture2D texture2DRect
#define UVCoordScale 0.5
#define UVCoordScale 1.0
glUseProgramObjectARB
glUniform1fARB
glUniform1iARB
glShaderSourceARB
glLinkProgramARB
glGetUniformLocationARB
glGetObjectParameterivARB
glGetInfoLogARB
glDeleteObjectARB
glCreateShaderObjectARB
glCreateProgramObjectARB
glCompileShaderARB
glAttachObjectARB
GL_ARB_fragment_shader
GL_ARB_vertex_shader
GL_ARB_shading_language_100
GL_ARB_shader_objects
     uniform mat4 u_projection;     attribute vec2 a_position;     attribute vec2 a_texCoord;     attribute float a_angle;     attribute vec2 a_center;     varying vec2 v_texCoord;         void main()     {         float angle = radians(a_angle);         float c = cos(angle);         float s = sin(angle);         mat2 rotationMatrix = mat2(c, -s, s, c);         vec2 position = rotationMatrix * (a_position - a_center) + a_center;         v_texCoord = a_texCoord;         gl_Position = u_projection * vec4(position, 0.0, 1.0);        gl_PointSize = 1.0;     } 
     precision mediump float;     uniform vec4 u_color;         void main()     {         gl_FragColor = u_color;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         gl_FragColor = texture2D(u_texture, v_texCoord);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         vec4 abgr = texture2D(u_texture, v_texCoord);         gl_FragColor = abgr;         gl_FragColor.r = abgr.b;         gl_FragColor.b = abgr.r;         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         vec4 abgr = texture2D(u_texture, v_texCoord);         gl_FragColor = abgr;         gl_FragColor.r = abgr.b;         gl_FragColor.b = abgr.r;         gl_FragColor.a = 1.0;         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         vec4 abgr = texture2D(u_texture, v_texCoord);         gl_FragColor = abgr;         gl_FragColor.a = 1.0;         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform sampler2D u_texture_u;     uniform sampler2D u_texture_v;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         mediump vec3 yuv;         lowp vec3 rgb;         yuv.x = texture2D(u_texture,   v_texCoord).r;         yuv.y = texture2D(u_texture_u, v_texCoord).r - 0.5;         yuv.z = texture2D(u_texture_v, v_texCoord).r - 0.5;         rgb = mat3( 1,        1,       1,                     0,       -0.39465, 2.03211,                     1.13983, -0.58060, 0) * yuv;         gl_FragColor = vec4(rgb, 1);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform sampler2D u_texture_u;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         mediump vec3 yuv;         lowp vec3 rgb;         yuv.x = texture2D(u_texture,   v_texCoord).r;         yuv.yz = texture2D(u_texture_u, v_texCoord).ra - 0.5;         rgb = mat3( 1,        1,       1,                     0,       -0.39465, 2.03211,                     1.13983, -0.58060, 0) * yuv;         gl_FragColor = vec4(rgb, 1);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform sampler2D u_texture_u;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         mediump vec3 yuv;         lowp vec3 rgb;         yuv.x = texture2D(u_texture,   v_texCoord).r;         yuv.yz = texture2D(u_texture_u, v_texCoord).ar - 0.5;         rgb = mat3( 1,        1,       1,                     0,       -0.39465, 2.03211,                     1.13983, -0.58060, 0) * yuv;         gl_FragColor = vec4(rgb, 1);         gl_FragColor *= u_modulation;     } 
?Unable to lock source surface
Unable to lock destination surface
Invalid destination blit rectangle
Invalid source blit rectangle
Only works with same format surfaces
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0x
SDL_SetSurfacePalette() passed a NULL surface
surface
SDL_UpperBlit: passed a NULL surface
Surfaces must not be locked during blit
Indexed pixel formats not supported
Unknown FOURCC pixel format
dst_pitch
SDL_UpperBlitScaled: passed a NULL surface
Empty destination palette
Passed a NULL condition variable
Couldn't locate our .exe
Couldn't find GetModuleFileNameExW
GetModuleFileNameExW
Couldn't load psapi.dll
Couldn't create a prefpath.
Path too long.
Couldn't locate our prefpath
Failed loading 
Passed a NULL mutex
Couldn't create semaphore
WaitForSingleObject() failed
Passed a NULL sem
ReleaseSemaphore() failed
Not enough resources to create thread
SetThreadPriority()
SDL_TIMER_RESOLUTION
TlsSetValue() failed
SDL_THREAD_STACK_SIZE
SDLTimer
Unknown touch device
Unknown touch finger
SDL_FRAMEBUFFER_ACCELERATION
Video subsystem has not been initialized
displayIndex must be in the range 0 - %d
Missing desired mode or closest mode parameter
Video driver doesn't support changing display mode
No video mode large enough for %dx%d
Couldn't find any displays
Couldn't find display mode match
Window surface is invalid, please call SDL_GetWindowSurface() to get a new surface
SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS
No dynamic GL support in video driver
OpenGL library already loaded
No GL driver has been loaded
glGetStringi
Unknown OpenGL attribute
Unknown OpenGL context profile %d
Unknown OpenGL context flag %d
Failed getting OpenGL glGetIntegerv entry point
OpenGL error: %08X
OpenGL error: GL_INVALID_VALUE
OpenGL error: GL_INVALID_ENUM
Failed getting OpenGL glGetError entry point
Failed getting OpenGL glGetFramebufferAttachmentParameteriv entry point
glGetFramebufferAttachmentParameteriv
Failed getting OpenGL glGetString entry point
The specified window isn't an OpenGL window
Setting the swap interval is not supported
No OpenGL context has been made current
The specified window has not been made current
No message system available
messageboxdata
SDL_ALLOW_TOPMOST
No hardware accelerated renderers available
_SDL_WindowTextureData
No window texture data
No OpenGL support in video driver
No available video device
SDL_VIDEO_ALLOW_SCREENSAVER
The video driver did not add any displays
%s not available
Window is too large.
SDL_VIDEO_HIGHDPI_DISABLED
Conflicting window flags specified
Unknown set of MS_ADPCM coefficients
IMA ADPCM decoder can only handle %u channels
Unrecognized file type (not WAVE)
Unknown %d-bit PCM data format
MPEG Layer 3 data not supported
Unknown WAVE data format: 0x%.4x
Complex WAVE files not supported
Couldn't open clipboard
Couldn't set clipboard data
Couldn't get clipboard data
SDL_WINDOWS_NO_CLOSE_ON_ALT_F4
Couldn't register application class
SDL_app
Unable to create DIB
n5Failed to create notify device for joystick autodetect
Failed to create message window for joystick autodetect
Failed to create register class for joystick autodetect
SDL_joystick
MSSCIPYA.IME
PINTLGNT.IME
MSTCIPHA.IME
CINTLGNT.IME
TINTLGNT.IME
ShowReadingWindow
GetReadingString
Right Windows
Left Windows
ImmUnlockIMCC
ImmLockIMCC
ImmUnlockIMC
ImmLockIMC
imm32.dll
ANo displays available
Couldn't get DPI
Couldn't find monitor data
DISP_CHANGE_BADPARAM
DISP_CHANGE_BADFLAGS
DISP_CHANGE_BADMODE
ChangeDisplaySettingsEx() failed: %s
DISP_CHANGE_FAILED
Unknown reason
CreateIconIndirect()
Could not retrieve OpenGL functions
wglShareLists
wglMakeCurrent
wglDeleteContext
wglCreateContext
wglGetProcAddress
OPENGL32.DLL
SDL_OPENGL_LIBRARY
WGL_ARB_context_flush_control
WGL_EXT_create_context_es2_profile
WGL_EXT_swap_control_tear
wglGetSwapIntervalEXT
wglSwapIntervalEXT
WGL_EXT_swap_control
wglGetPixelFormatAttribivARB
wglChoosePixelFormatARB
WGL_ARB_pixel_format
wglGetExtensionsStringARB
SetPixelFormat()
No matching GL pixel format available
wglMakeCurrent()
wglSwapIntervalEXT()
Negative swap interval unsupported in this GL
GL 3.x is not supported
wglCreateContextAttribsARB
Could not create GL context
Could not create GLES window surface
WARNING: Ignoring SDL_GL_SetSwapInterval call due to ANGLE bug
SDL Windows video driver
windows
SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN
SDL_WINDOWS_ENABLE_MESSAGELOOP
Direct3DCreate9
D3D9.DLL
Invalid display index
CreateDXGIFactory
DXGI.DLL
Unable to create DXGI interface
outputIndex
adapterIndex
GetDpiForMonitor
SHCORE.DLL
RegisterTouchWindow
GetTouchInputInfo
CloseTouchInputHandle
USER32.DLL
SetProp() failed
SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT
SetDeviceGammaRamp()
GetDeviceGammaRamp()
Application not compiled with SDL %d.%d
Unable to create Helper Window
Unable to create Helper Window Class
Unable to destroy Helper Window Class
Unable to destroy Helper Window
SetLayeredWindowAttributes()
SetWindowLong()
Couldn't create window
Windows Waveform Audio
waveOutPrepareHeader()
waveOutOpen()
XAudio2
xaudio2
XAudio2: SDL was built without XAudio2 support (old DirectX SDK).
XInputGetBatteryInformation
XInputGetCapabilities
XInputSetState
XInputGetState
XInput Controller #%u
Couldn't create XInput haptic thread
SDLXInputDev%d
Couldn't create XInput haptic mutex
SDL_XINPUT_ENABLED
SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING
XInput Device #%u
XInput ArcadePad #%u
XInput DrumKit #%u
XInput Guitar #%u
XInput DancePad #%u
XInput FlightStick #%u
XInput ArcadeStick #%u
XInput Wheel #%u
X360 Controller #%u
Failed to obtain XInput device capabilities. Device disconnected?
Unsupported YUV destination format
YV12 and IYUV textures only support full surface locks
Unsupported YUV format in copy
Invalid target pixel format
?Unsupported YUV format
eFlv!@r
c:\buildslave\sdl_win32\build\dev\VisualC\x64\Release\SDL2.pdb
timeBeginPeriod
timeEndPeriod
timeGetTime
waveOutGetDevCapsW
waveOutGetNumDevs
waveInGetDevCapsW
waveInGetNumDevs
waveOutGetErrorTextW
waveOutWrite
waveOutClose
waveInClose
waveOutUnprepareHeader
waveOutOpen
waveInOpen
waveOutPrepareHeader
WINMM.dll
ImmReleaseContext
ImmSetCompositionWindow
ImmGetContext
ImmGetIMEFileNameA
ImmSetCompositionStringW
ImmNotifyIME
ImmGetCompositionStringW
ImmGetCandidateListW
ImmAssociateContext
IMM32.dll
VerQueryValueA
GetFileVersionInfoA
GetFileVersionInfoSizeA
VERSION.dll
ExitProcess
GetSystemInfo
GlobalMemoryStatusEx
GetLastError
GetModuleHandleW
FreeLibrary
GetProcAddress
LoadLibraryA
SetEnvironmentVariableA
GetEnvironmentVariableA
WriteConsoleW
lstrlenW
GetStdHandle
OutputDebugStringW
AttachConsole
VirtualAlloc
VirtualFree
VirtualQuery
CreateFileW
SetErrorMode
GetFileSizeEx
SetFilePointerEx
ReadFile
WriteFile
SetFilePointer
CloseHandle
GetCurrentProcess
LoadLibraryW
CreateDirectoryW
lstrcatW
InitializeCriticalSectionAndSpinCount
DeleteCriticalSection
EnterCriticalSection
TryEnterCriticalSection
LeaveCriticalSection
GetSystemPowerStatus
CreateSemaphoreW
WaitForSingleObject
ReleaseSemaphore
CreateThread
RaiseException
IsDebuggerPresent
GetCurrentThreadId
SetThreadPriority
GetCurrentThread
WaitForSingleObjectEx
QueryPerformanceCounter
QueryPerformanceFrequency
TlsGetValue
TlsAlloc
TlsSetValue
FormatMessageW
VerifyVersionInfoW
VerSetConditionMask
GlobalUnlock
GlobalLock
GlobalAlloc
GetTickCount
CompareStringA
GetVersionExA
WideCharToMultiByte
KERNEL32.dll
GetRawInputDeviceInfoA
GetRawInputDeviceList
GetDesktopWindow
CloseClipboard
GetClipboardSequenceNumber
SetClipboardData
EmptyClipboard
OpenClipboard
GetClipboardData
IsClipboardFormatAvailable
GetAsyncKeyState
IsIconic
GetMessageExtraInfo
WindowFromPoint
GetRawInputData
ValidateRect
GetUpdateRect
SetCursor
ClientToScreen
IsRectEmpty
GetClientRect
AdjustWindowRectEx
GetMenu
GetWindowLongW
GetWindowRect
ClipCursor
GetKeyState
ScreenToClient
GetCursorPos
CallWindowProcW
DefWindowProcW
GetPropW
DispatchMessageW
TranslateMessage
PeekMessageW
RegisterClassW
LoadImageW
UnregisterClassW
GetClassInfoW
DestroyWindow
UnregisterDeviceNotification
RegisterDeviceNotificationW
CreateWindowExW
RegisterClassExW
GetMessageW
MapVirtualKeyW
GetKeyboardLayout
EndDialog
ReleaseDC
SystemParametersInfoA
DialogBoxIndirectParamW
DrawTextW
SystemParametersInfoW
EnumDisplayMonitors
EnumDisplaySettingsW
EnumDisplayDevicesW
GetMonitorInfoW
MonitorFromPoint
ChangeDisplaySettingsExW
RegisterRawInputDevices
LoadCursorW
DestroyIcon
CreateIconIndirect
SetCursorPos
GetDoubleClickTime
SetWindowRgn
SetWindowPos
GetFocus
SetWindowLongPtrW
GetWindowLongPtrW
SetPropW
GetWindowTextW
GetWindowTextLengthW
SetWindowTextW
SendMessageW
CreateIconFromResource
ShowWindow
SetWindowLongW
RemovePropW
TrackMouseEvent
SetLayeredWindowAttributes
USER32.dll
SelectObject
CreateDIBSection
CreateCompatibleDC
GetDIBits
CreateCompatibleBitmap
DeleteObject
DeleteDC
GetDeviceCaps
GetTextMetricsW
CreateFontIndirectW
CreateDCW
CreateBitmap
DescribePixelFormat
SetPixelFormat
ChoosePixelFormat
SwapBuffers
GetPixelFormat
CombineRgn
CreateRectRgn
SetDeviceGammaRamp
GetDeviceGammaRamp
GDI32.dll
SHGetFolderPathW
DragFinish
DragQueryFileW
DragAcceptFiles
SHELL32.dll
CoCreateInstance
CoInitializeEx
CoUninitialize
ole32.dll
OLEAUT32.dll
SDL2.dll
SDL_AddEventWatch
SDL_AddHintCallback
SDL_AddTimer
SDL_AllocFormat
SDL_AllocPalette
SDL_AllocRW
SDL_AtomicAdd
SDL_AtomicCAS
SDL_AtomicCASPtr
SDL_AtomicGet
SDL_AtomicGetPtr
SDL_AtomicLock
SDL_AtomicSet
SDL_AtomicSetPtr
SDL_AtomicTryLock
SDL_AtomicUnlock
SDL_AudioInit
SDL_AudioQuit
SDL_BuildAudioCVT
SDL_CalculateGammaRamp
SDL_CaptureMouse
SDL_ClearError
SDL_ClearHints
SDL_ClearQueuedAudio
SDL_CloseAudio
SDL_CloseAudioDevice
SDL_CondBroadcast
SDL_CondSignal
SDL_CondWait
SDL_CondWaitTimeout
SDL_ConvertAudio
SDL_ConvertPixels
SDL_ConvertSurface
SDL_ConvertSurfaceFormat
SDL_CreateColorCursor
SDL_CreateCond
SDL_CreateCursor
SDL_CreateMutex
SDL_CreateRGBSurface
SDL_CreateRGBSurfaceFrom
SDL_CreateRenderer
SDL_CreateSemaphore
SDL_CreateShapedWindow
SDL_CreateSoftwareRenderer
SDL_CreateSystemCursor
SDL_CreateTexture
SDL_CreateTextureFromSurface
SDL_CreateThread
SDL_CreateWindow
SDL_CreateWindowAndRenderer
SDL_CreateWindowFrom
SDL_DXGIGetOutputInfo
SDL_DYNAPI_entry
SDL_DelEventWatch
SDL_DelHintCallback
SDL_Delay
SDL_DestroyCond
SDL_DestroyMutex
SDL_DestroyRenderer
SDL_DestroySemaphore
SDL_DestroyTexture
SDL_DestroyWindow
SDL_DetachThread
SDL_Direct3D9GetAdapterIndex
SDL_DisableScreenSaver
SDL_EnableScreenSaver
SDL_EnclosePoints
SDL_Error
SDL_EventState
SDL_FillRect
SDL_FillRects
SDL_FilterEvents
SDL_FlushEvent
SDL_FlushEvents
SDL_FreeCursor
SDL_FreeFormat
SDL_FreePalette
SDL_FreeRW
SDL_FreeSurface
SDL_FreeWAV
SDL_GL_BindTexture
SDL_GL_CreateContext
SDL_GL_DeleteContext
SDL_GL_ExtensionSupported
SDL_GL_GetAttribute
SDL_GL_GetCurrentContext
SDL_GL_GetCurrentWindow
SDL_GL_GetDrawableSize
SDL_GL_GetProcAddress
SDL_GL_GetSwapInterval
SDL_GL_LoadLibrary
SDL_GL_MakeCurrent
SDL_GL_ResetAttributes
SDL_GL_SetAttribute
SDL_GL_SetSwapInterval
SDL_GL_SwapWindow
SDL_GL_UnbindTexture
SDL_GL_UnloadLibrary
SDL_GameControllerAddMapping
SDL_GameControllerAddMappingsFromRW
SDL_GameControllerClose
SDL_GameControllerEventState
SDL_GameControllerFromInstanceID
SDL_GameControllerGetAttached
SDL_GameControllerGetAxis
SDL_GameControllerGetAxisFromString
SDL_GameControllerGetBindForAxis
SDL_GameControllerGetBindForButton
SDL_GameControllerGetButton
SDL_GameControllerGetButtonFromString
SDL_GameControllerGetJoystick
SDL_GameControllerGetStringForAxis
SDL_GameControllerGetStringForButton
SDL_GameControllerMapping
SDL_GameControllerMappingForGUID
SDL_GameControllerName
SDL_GameControllerNameForIndex
SDL_GameControllerOpen
SDL_GameControllerUpdate
SDL_GetAssertionHandler
SDL_GetAssertionReport
SDL_GetAudioDeviceName
SDL_GetAudioDeviceStatus
SDL_GetAudioDriver
SDL_GetAudioStatus
SDL_GetBasePath
SDL_GetCPUCacheLineSize
SDL_GetCPUCount
SDL_GetClipRect
SDL_GetClipboardText
SDL_GetClosestDisplayMode
SDL_GetColorKey
SDL_GetCurrentAudioDriver
SDL_GetCurrentDisplayMode
SDL_GetCurrentVideoDriver
SDL_GetCursor
SDL_GetDefaultAssertionHandler
SDL_GetDefaultCursor
SDL_GetDesktopDisplayMode
SDL_GetDisplayBounds
SDL_GetDisplayDPI
SDL_GetDisplayMode
SDL_GetDisplayName
SDL_GetDisplayUsableBounds
SDL_GetError
SDL_GetEventFilter
SDL_GetGlobalMouseState
SDL_GetGrabbedWindow
SDL_GetHint
SDL_GetKeyFromName
SDL_GetKeyFromScancode
SDL_GetKeyName
SDL_GetKeyboardFocus
SDL_GetKeyboardState
SDL_GetModState
SDL_GetMouseFocus
SDL_GetMouseState
SDL_GetNumAudioDevices
SDL_GetNumAudioDrivers
SDL_GetNumDisplayModes
SDL_GetNumRenderDrivers
SDL_GetNumTouchDevices
SDL_GetNumTouchFingers
SDL_GetNumVideoDisplays
SDL_GetNumVideoDrivers
SDL_GetPerformanceCounter
SDL_GetPerformanceFrequency
SDL_GetPixelFormatName
SDL_GetPlatform
SDL_GetPowerInfo
SDL_GetPrefPath
SDL_GetQueuedAudioSize
SDL_GetRGB
SDL_GetRGBA
SDL_GetRelativeMouseMode
SDL_GetRelativeMouseState
SDL_GetRenderDrawBlendMode
SDL_GetRenderDrawColor
SDL_GetRenderDriverInfo
SDL_GetRenderTarget
SDL_GetRenderer
SDL_GetRendererInfo
SDL_GetRendererOutputSize
SDL_GetRevision
SDL_GetRevisionNumber
SDL_GetScancodeFromKey
SDL_GetScancodeFromName
SDL_GetScancodeName
SDL_GetShapedWindowMode
SDL_GetSurfaceAlphaMod
SDL_GetSurfaceBlendMode
SDL_GetSurfaceColorMod
SDL_GetSystemRAM
SDL_GetTextureAlphaMod
SDL_GetTextureBlendMode
SDL_GetTextureColorMod
SDL_GetThreadID
SDL_GetThreadName
SDL_GetTicks
SDL_GetTouchDevice
SDL_GetTouchFinger
SDL_GetVersion
SDL_GetVideoDriver
SDL_GetWindowBordersSize
SDL_GetWindowBrightness
SDL_GetWindowData
SDL_GetWindowDisplayIndex
SDL_GetWindowDisplayMode
SDL_GetWindowFlags
SDL_GetWindowFromID
SDL_GetWindowGammaRamp
SDL_GetWindowGrab
SDL_GetWindowID
SDL_GetWindowMaximumSize
SDL_GetWindowMinimumSize
SDL_GetWindowOpacity
SDL_GetWindowPixelFormat
SDL_GetWindowPosition
SDL_GetWindowSize
SDL_GetWindowSurface
SDL_GetWindowTitle
SDL_GetWindowWMInfo
SDL_HapticClose
SDL_HapticDestroyEffect
SDL_HapticEffectSupported
SDL_HapticGetEffectStatus
SDL_HapticIndex
SDL_HapticName
SDL_HapticNewEffect
SDL_HapticNumAxes
SDL_HapticNumEffects
SDL_HapticNumEffectsPlaying
SDL_HapticOpen
SDL_HapticOpenFromJoystick
SDL_HapticOpenFromMouse
SDL_HapticOpened
SDL_HapticPause
SDL_HapticQuery
SDL_HapticRumbleInit
SDL_HapticRumblePlay
SDL_HapticRumbleStop
SDL_HapticRumbleSupported
SDL_HapticRunEffect
SDL_HapticSetAutocenter
SDL_HapticSetGain
SDL_HapticStopAll
SDL_HapticStopEffect
SDL_HapticUnpause
SDL_HapticUpdateEffect
SDL_Has3DNow
SDL_HasAVX
SDL_HasAVX2
SDL_HasAltiVec
SDL_HasClipboardText
SDL_HasEvent
SDL_HasEvents
SDL_HasIntersection
SDL_HasMMX
SDL_HasRDTSC
SDL_HasSSE
SDL_HasSSE2
SDL_HasSSE3
SDL_HasSSE41
SDL_HasSSE42
SDL_HasScreenKeyboardSupport
SDL_HideWindow
SDL_Init
SDL_InitSubSystem
SDL_IntersectRect
SDL_IntersectRectAndLine
SDL_IsGameController
SDL_IsScreenKeyboardShown
SDL_IsScreenSaverEnabled
SDL_IsShapedWindow
SDL_IsTextInputActive
SDL_JoystickClose
SDL_JoystickCurrentPowerLevel
SDL_JoystickEventState
SDL_JoystickFromInstanceID
SDL_JoystickGetAttached
SDL_JoystickGetAxis
SDL_JoystickGetBall
SDL_JoystickGetButton
SDL_JoystickGetDeviceGUID
SDL_JoystickGetGUID
SDL_JoystickGetGUIDFromString
SDL_JoystickGetGUIDString
SDL_JoystickGetHat
SDL_JoystickInstanceID
SDL_JoystickIsHaptic
SDL_JoystickName
SDL_JoystickNameForIndex
SDL_JoystickNumAxes
SDL_JoystickNumBalls
SDL_JoystickNumButtons
SDL_JoystickNumHats
SDL_JoystickOpen
SDL_JoystickUpdate
SDL_LoadBMP_RW
SDL_LoadDollarTemplates
SDL_LoadFunction
SDL_LoadObject
SDL_LoadWAV_RW
SDL_LockAudio
SDL_LockAudioDevice
SDL_LockMutex
SDL_LockSurface
SDL_LockTexture
SDL_Log
SDL_LogCritical
SDL_LogDebug
SDL_LogError
SDL_LogGetOutputFunction
SDL_LogGetPriority
SDL_LogInfo
SDL_LogMessage
SDL_LogMessageV
SDL_LogResetPriorities
SDL_LogSetAllPriority
SDL_LogSetOutputFunction
SDL_LogSetPriority
SDL_LogVerbose
SDL_LogWarn
SDL_LowerBlit
SDL_LowerBlitScaled
SDL_MapRGB
SDL_MapRGBA
SDL_MasksToPixelFormatEnum
SDL_MaximizeWindow
SDL_MinimizeWindow
SDL_MixAudio
SDL_MixAudioFormat
SDL_MouseIsHaptic
SDL_NumHaptics
SDL_NumJoysticks
SDL_OpenAudio
SDL_OpenAudioDevice
SDL_PauseAudio
SDL_PauseAudioDevice
SDL_PeepEvents
SDL_PixelFormatEnumToMasks
SDL_PollEvent
SDL_PumpEvents
SDL_PushEvent
SDL_QueryTexture
SDL_QueueAudio
SDL_Quit
SDL_QuitSubSystem
SDL_RWFromConstMem
SDL_RWFromFP
SDL_RWFromFile
SDL_RWFromMem
SDL_RaiseWindow
SDL_ReadBE16
SDL_ReadBE32
SDL_ReadBE64
SDL_ReadLE16
SDL_ReadLE32
SDL_ReadLE64
SDL_ReadU8
SDL_RecordGesture
SDL_RegisterApp
SDL_RegisterEvents
SDL_RemoveTimer
SDL_RenderClear
SDL_RenderCopy
SDL_RenderCopyEx
SDL_RenderDrawLine
SDL_RenderDrawLines
SDL_RenderDrawPoint
SDL_RenderDrawPoints
SDL_RenderDrawRect
SDL_RenderDrawRects
SDL_RenderFillRect
SDL_RenderFillRects
SDL_RenderGetClipRect
SDL_RenderGetD3D9Device
SDL_RenderGetIntegerScale
SDL_RenderGetLogicalSize
SDL_RenderGetScale
SDL_RenderGetViewport
SDL_RenderIsClipEnabled
SDL_RenderPresent
SDL_RenderReadPixels
SDL_RenderSetClipRect
SDL_RenderSetIntegerScale
SDL_RenderSetLogicalSize
SDL_RenderSetScale
SDL_RenderSetViewport
SDL_RenderTargetSupported
SDL_ReportAssertion
SDL_ResetAssertionReport
SDL_RestoreWindow
SDL_SaveAllDollarTemplates
SDL_SaveBMP_RW
SDL_SaveDollarTemplate
SDL_SemPost
SDL_SemTryWait
SDL_SemValue
SDL_SemWait
SDL_SemWaitTimeout
SDL_SetAssertionHandler
SDL_SetClipRect
SDL_SetClipboardText
SDL_SetColorKey
SDL_SetCursor
SDL_SetError
SDL_SetEventFilter
SDL_SetHint
SDL_SetHintWithPriority
SDL_SetMainReady
SDL_SetModState
SDL_SetPaletteColors
SDL_SetPixelFormatPalette
SDL_SetRelativeMouseMode
SDL_SetRenderDrawBlendMode
SDL_SetRenderDrawColor
SDL_SetRenderTarget
SDL_SetSurfaceAlphaMod
SDL_SetSurfaceBlendMode
SDL_SetSurfaceColorMod
SDL_SetSurfacePalette
SDL_SetSurfaceRLE
SDL_SetTextInputRect
SDL_SetTextureAlphaMod
SDL_SetTextureBlendMode
SDL_SetTextureColorMod
SDL_SetThreadPriority
SDL_SetWindowBordered
SDL_SetWindowBrightness
SDL_SetWindowData
SDL_SetWindowDisplayMode
SDL_SetWindowFullscreen
SDL_SetWindowGammaRamp
SDL_SetWindowGrab
SDL_SetWindowHitTest
SDL_SetWindowIcon
SDL_SetWindowInputFocus
SDL_SetWindowMaximumSize
SDL_SetWindowMinimumSize
SDL_SetWindowModalFor
SDL_SetWindowOpacity
SDL_SetWindowPosition
SDL_SetWindowShape
SDL_SetWindowSize
SDL_SetWindowTitle
SDL_SetWindowsMessageHook
SDL_ShowCursor
SDL_ShowMessageBox
SDL_ShowSimpleMessageBox
SDL_ShowWindow
SDL_SoftStretch
SDL_StartTextInput
SDL_StopTextInput
SDL_TLSCreate
SDL_TLSGet
SDL_TLSSet
SDL_ThreadID
SDL_TryLockMutex
SDL_UnionRect
SDL_UnloadObject
SDL_UnlockAudio
SDL_UnlockAudioDevice
SDL_UnlockMutex
SDL_UnlockSurface
SDL_UnlockTexture
SDL_UnregisterApp
SDL_UpdateTexture
SDL_UpdateWindowSurface
SDL_UpdateWindowSurfaceRects
SDL_UpdateYUVTexture
SDL_UpperBlit
SDL_UpperBlitScaled
SDL_VideoInit
SDL_VideoQuit
SDL_WaitEvent
SDL_WaitEventTimeout
SDL_WaitThread
SDL_WarpMouseGlobal
SDL_WarpMouseInWindow
SDL_WasInit
SDL_WriteBE16
SDL_WriteBE32
SDL_WriteBE64
SDL_WriteLE16
SDL_WriteLE32
SDL_WriteLE64
SDL_WriteU8
SDL_abs
SDL_acos
SDL_asin
SDL_atan
SDL_atan2
SDL_atof
SDL_atoi
SDL_calloc
SDL_ceil
SDL_copysign
SDL_cos
SDL_cosf
SDL_fabs
SDL_floor
SDL_free
SDL_getenv
SDL_iconv
SDL_iconv_close
SDL_iconv_open
SDL_iconv_string
SDL_isdigit
SDL_isspace
SDL_itoa
SDL_lltoa
SDL_log
SDL_ltoa
SDL_malloc
SDL_memcmp
SDL_memcpy
SDL_memmove
SDL_memset
SDL_pow
SDL_qsort
SDL_realloc
SDL_scalbn
SDL_setenv
SDL_sin
SDL_sinf
SDL_snprintf
SDL_sqrt
SDL_sqrtf
SDL_sscanf
SDL_strcasecmp
SDL_strchr
SDL_strcmp
SDL_strdup
SDL_strlcat
SDL_strlcpy
SDL_strlen
SDL_strlwr
SDL_strncasecmp
SDL_strncmp
SDL_strrchr
SDL_strrev
SDL_strstr
SDL_strtod
SDL_strtol
SDL_strtoll
SDL_strtoul
SDL_strtoull
SDL_strupr
SDL_tan
SDL_tanf
SDL_tolower
SDL_toupper
SDL_uitoa
SDL_ulltoa
SDL_ultoa
SDL_utf8strlcpy
SDL_vsnprintf
SDL_vsscanf
SDL_wcslcat
SDL_wcslcpy
SDL_wcslen
?>UUUUU
!)@:F,@zj/@\G1@|
:@:F<@Z
=@zj?@L~@@\GA@l
?LUUUUU
?IUUUUU
PIDVID^
PIDVIDp
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 "$&(*,.02468:<>@BDFHJLNPRTVXZ\^`bdfhjlnprtvxz|~
 $(,048<@DHLPUY]aeimquy}
 )19AJRZbjs{
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    <security>
      <requestedPrivileges>
        <requestedExecutionLevel level="asInvoker" uiAccess="false"></requestedExecutionLevel>
      </requestedPrivileges>
    </security>
  </trustInfo>
</assembly>PAPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPAD
