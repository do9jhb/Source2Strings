!This program cannot be run in DOS mode.
`.rdata
@_RDATA
@.reloc
|$ ATAVAWH
 A_A^A\
|$ ATAVAWH
 A_A^A\
22222222
2222222222
 !"#$%&'()*+,-./01
																														
;t$p}EH
UATAUAVAWH
A_A^A]A\]
											
USVWATAUAVAWH
A_A^A]A\_^[]
L$ SVWH
SUVWATAUAVAWH
A_A^A]A\_^][
@UWATAUAWH
 A_A]A\_]
\$ UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
@UVWATAUAVAWH
A_A^A]A\_^]
SUVWATAUAVH
 A^A]A\_^][
UATAUAVAWH
A_A^A]A\]
SUVWATAUAVH
 A^A]A\_^][
H SVATAWH
hA_A\^[
@UVWAUH
@UWATAUAVAWH
A_A^A]A\_]
G(H9t$P
G,H9t$h
0H9t$ tRH
0H9t$(t
VATAUAWH
XA_A]A\^
WATAUAWH
HA_A]A\_
VATAUAWH
HA_A]A\^
SATAUAWH
HA_A]A\[
@SVATAVAWH
A_A^A\^[
@SUWAUAVH
A^A]_][
UVWATAUAWH
A_A]A\_^]
WATAUAVAWH
 A_A^A]A\_
@VWATAVAWH
PA_A^A\_^
VWATAVAWH
PA_A^A\_^
\$ UVWH
@USVWATAUAVAWH
A_A^A]A\_^[]
t$ WAVAWH
\$ UVWATAUAVAWH
A_A^A]A\_^]
@UWATAUAVAWH
A_A^A]A\_]
@UAVAWH
@SUVATAWH
 A_A\^][
\$ VATAWH
@USVWATAWH
A_A\_^[]
D9d$@tgA
WpHcT$@
WxHcT$@L
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
SVWATAUAVAWH
PA_A^A]A\_^[
SVWATAUAVAWH
PA_A^A]A\_^[
SVWATAUAVAWH
PA_A^A]A\_^[
D$@L;D$Hu
C8H9C0t'H
C8H9C0u
WATAUAVAWH
`A_A^A]A\_
|$ UATAUAVAWH
0A_A^A]A\]
WATAUAVAWH
@A_A^A]A\_
|$ AUAVAWH
0A_A^A]
@USVWAVH
L9u@t	H
L9uHt	H
L9u0t	H
 A^_^[]
t$ WAVAWH
UVWATAUH
 A]A\_^]
@SUVWATAUAVH
A^A]A\_^][
UVWAVAWH
A_A^_^]
HcC$HcK
UATAUAVAWH
A_A^A]A\]
T$8+G$A
t$ UWAVH
.HcC$HcK
@SVWAVH
UVWATAUAVAWH
L$PfE;_x
A_A^A]A\_^]
@USWATAUAVAWH
}1fA;\$
A_A^A]A\_[]
@SUWATAUAVAWH
A_A^A]A\_][
@UVWATAUH
A]A\_^]
|$ ATAVAWH
 A_A^A\
@SVWAVAWH
PA_A^_^[
tBLcvPD;v`u
PA_A^_^[
UVWATAUAVAWH
L9mPt	H
L9mHt	H
A_A^A]A\_^]
|$ UATAUAVAWH
?L9d$@t
?IcvPA;v`u
A_A^A]A\]
t$ WAVAWH
UVWATAUAVAWH
A_A^A]A\_^]
@SUVWATAUAVAWH
A_A^A]A\_^][
UVWATAUAVAWH
IcnPA;n`uRI
A_A^A]A\_^]
@USVWATAUAVAWH
T$`fA;T$
A_A^A]A\_^[]
t$ UWAVH
xtA;Gx}nfA;
UVWATAUAVAWH
`A_A^A]A\_^]
@UVATAUAVH
|$dA9U(
xiA;Ex}cfA;
xwA;Ex}qfA;
A^A]A\^]
|$XHct$`L
HcL$HE2
t$H;t$d
D$8H9\$0t
@UVWAVAWH
A_A^_^]
@UVWATAUAVAWH
A_A^A]A\_^]
VWATAVAWH
A_A^A\_^
@UVWATAUAVAWH
A_A^A]A\_^]
@SUVWAVH
UATAUAVAWH
A_A^A]A\]
gfffffffL+
fffffff
@WATAUAVAWH
fffffff
gfffffffH
@A_A^A]A\_
D$@L;D$Hu
HpH+HhH
HXH+HPH
$II+HPH
$II+HhH
$II+HPH
UVWATAUAVAWH
0A_A^A]A\_^]
gfffffffH
fffffff
A H9q0t?H
C@H+C8H
C H9s0t8
C@H+C8H
2333333
WATAUAVAWH
@A_A^A]A\_
@UVWATAUAVAWH
pA_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
t}D9O$|w
@USVWATAVAWH
A_A^A\_^[]
2333333
WATAUAVAWH
@A_A^A]A\_
@WAVAWH
WATAUAVAWH
G0I+G(H
A_A^A]A\_
Y(H;Y0t
GHH9O(t
@UVWATAUAVAWH
F Ic\$ 
PA_A^A]A\_^]
@UAVAWH
A0H+A(H
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
`A_A^A]A\_^]
@SUVWATAUAVAWH
hA_A^A]A\_^][
H9C8tPH
UWATAVAWH
A_A^A\_]
VWATAVAWH
0A_A^A\_^
@WAVAWH
@UVWATAUAVAWH
ub'vb'v
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
D$@L;D$Hu
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
@UWATAVAWH
A_A^A\_]
@UVWATAUAVAWH
A_A^A]A\_^]
llllllllllllllllllllllllllllll
lllllll
lllllllllllllllllll
llllllllllllll
lllllllllllll
llllllllll
ll !"#$%&lllllllllllllllll'()*+,-.lll/0123456789:;<=>?@ABCDEFGHIJlllllllllllllllllKLMNOPQRSTUVWXYZ[\]^_`abcdefghijk
******************************************************************
************************************************************************
 !" #$%&'()
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
 !"#$%&'(V)*+,-./0123456VVVVVVV789:;<=>?@ABCVVVDVVVEFGHIJKLMVVNOPVVQRVVVVVVVVVVVVVVVSTVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
ub'vb'v
D$XH;T$`
@UVWATAUAVAWH
*HcD$ H
A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
@UVWATAUAVAWH
gfffffffI
A_A^A]A\_^]
\$ UVAWH
VWAUAVAWH
gfffffffH+
0A_A^A]_^
AUAVAWH
PA_A^A]
@SUVWAVAWH
A_A^_^][
@UAUAWH
D$XH98u:I
WATAUAVAWH
@A_A^A]A\_
A(LcA H
9A }ELcA H
t^HcC ;C
u3HcC ;C
*t?HcC ;C
D$@L;D$Hu
t=9Q$}3
t9D9A$}3
@SUVWATAUAVAWH
XA_A^A]A\_^][
p UWATAVAWH
A_A^A\_]
UATAUAVAWH
A_A^A]A\]
   !!!!!!!!!
))))))"))))))))))))))))))))))))))))))))))))))))))))))#$%%%%&'(
I LcA E
A(HcA ;A
WATAUAVAWH
@A_A^A]A\_
@SAVAWH
@USVWATAUAVAWH
A_A^A]A\_^[]
@SUVATAUH
 A]A\^][
SUVWATAVAWH
`A_A^A\_^][
UATAVAWH
XA_A^A\]
@SUVWAVH
SUVWATAUAVAWH
HA_A^A]A\_^][
@USVWATAUAVAWH
D9v u%L
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
D$@L;D$Hu
SUVWAVH
@SUVWAVAWH
A_A^_^][
UVWATAUAVAWH
`A_A^A]A\_^]
@SUVWATAUAVAWH
A_A^A]A\_^][
UWAVAWH
8A_A^_]
AUAVAWH
0A_A^A]
L9~`tCH
@SUVWAVAWH
A_A^_^][
@UVWAVAWH
A_A^_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
D8d$0tQH
A_A^A]A\_^[]
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
t$ ATAVAWH
gfffffffM
0A_A^A\
UATAVAWI
A_A^A\]
UVWAVAWH
@A_A^_^]
@SUVWAVH
@SUVWATAUAVAWH
A_A^A]A\_^][
B D+B<H
SWATAUAVAWH
D8d$0u%I
M9g8tcH
hA_A^A]A\_[
@UVWATAUAVAWH
A_A^A]A\_^]
UWATAUAWH
0A_A]A\_]
UVWATAUAVAWH
2D8xxu?H
PA_A^A]A\_^]
@UAVAWH
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWAVAWH
A_A^_^]
SWATAVAWH
@A_A^A\_[
D$@L;D$Hu
t'HcH ;H
T$@D+@<
Ic@ A;@
@(Ic@ A;@
Ic@ A;@
t4Ic@ A;@
J LcB E
B(HcB ;B
H Lc@ E
H(HcH ;H
2333333
effffff
WATAUAVAWH
@A_A^A]A\_
s@H;K8t
@WAVAWH
VWATAVAWH
HpI+HhH
A_A^A\_^
@UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
0A_A^_^]
PXI+PPH
D$@D;	H
D$@L;D$Hu
@SUATAWH
(A_A\][
WATAUAVAWH
A_A^A]A\_
@UVWATAUAVAWH
pA_A^A]A\_^]
@SUVWAVH
`A^_^][
@UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
^pH;^xtDf
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
G(HcL$(H
G(Lc\$(M
A_A^A]A\_^]
@SUVWATAUAVAWH
A_A^A]A\_^][
@USVWATAUAVAWH
A_A^A]A\_^[]
WATAUAVAWH
0A_A^A]A\_
UVWATAUAVAWH
I E+A<A
L$8D9*H
A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
@UATAUAVAWH
A_A^A]A\]
2333333
WATAUAVAWH
@A_A^A]A\_
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
|$ ATAVAWH
0A_A^A\
D$DLcA H
@UVWATAUAVAWH
gfffffffI
fffffff
A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
WATAUAVAWH
@A_A^A]A\_
gfffffffL+
fffffff
gfffffffH
gfffffffL+
fffffff
gfffffffH
TUUUUUU
A9q }EI
A;q }?I
\$ UVWH
effffff
TUUUUUU
I9q sEI
I;q s?I
I9q sEI
I;q s?I
WATAUAVAWH
@A_A^A]A\_
H9C s(H
UVWAVAWH
0A_A^_^]
trH91um
gfffffffL+
3333333
gfffffffH
gfffffffL+
3333333
|$ ATAVAWH
0A_A^A\
VWATAVAWH
t$0@83u
A_A^A\_^
:::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::
 !"#$%&'()*:::+:::,-./01234::567:::::::::::::::::::89
D$@L;D$Hu
@UVWATAUAVAWH
D8d$1u$E
A_A^A]A\_^]
VWAUAVAWH
A_A^A]_^
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
UWATAVAWH
A_A^A\_]
gfffffffH
@SUVAUH
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
D8s(uPH
UVWATAUAVAWH
A_A^A]A\_^]
VWATAUAVH
@A^A]A\_^
SVWATAUAVAWH
0A_A^A]A\_^[
L$ AVAWH
@UVWAWH
^0H9?t(H
SVWATAUAVAWH
@A_A^A]A\_^[
SVWATAUAVAWH
@A_A^A]A\_^[
SVWATAUAVAWH
@A_A^A]A\_^[
WATAUAVAWH
A_A^A]A\_
USVWATAUAVAWH
A_A^A]A\_^[]
D$@L;D$Hu
@UVWATAUAVAWH
GhI+G`H
A_A^A]A\_^]
SUVATAUAVAWH
 A_A^A]A\^][
@USVWATAUAVAWH
NhM+N`I
A_A^A]A\_^[]
UATAUAVAWH
NhL+N`I
A_A^A]A\]
NhL+N`I
UVWAVAWH
pA_A^_^]
@SUVWATAUAVAWH
xA_A^A]A\_^][
^0H9?t'H
WATAUAVAWH
0A_A^A]A\_
ApH+AhH
CpH+ChH
@VWATAVAWH
@A_A^A\_^
\$ WAVAWH
VWATAVAWH
G(H+G H
 A_A^A\_^
G(H+G H
C(H+C H
UVWATAUAVAWH
A_A^A]A\_^]
G(H+G H
@SVWAUAWH
C(H+C H
PA_A]_^[
@UVWATAUAVAWH
t$ Hc8H
D;|$H}>D
A_A^A]A\_^]
C(H+C H
t$ WAVAWH
C(H+C H
@UVWATAUAVAWH
A_A^A]A\_^]
l$ VWAVH
@UVWATAUAVAWH
CpH+ChH
A_A^A]A\_^]
@SAUAWH
A(H+A H
t$ WAVAWH
l$ VAVAWH
\$ UVAWH
@WAVAWH
t$ WATAUAVAWH
 A_A^A]A\_
l$ VAVAWH
t$ WAVAWH
l$ VAVAWH
t$ WATAUAVAWH
D9!u2D9y
 A_A^A]A\_
t$ WAVAWH
@WATAUAVAWH
C(H+C H
0A_A^A]A\_
l$ VAVAWH
|$ ATAVAWH
 A_A^A\
G(H+G H
VWATAVAWH
 A_A^A\_^
t2I9(t!I
t2H9)t!L
H SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
ATAVAWH
 A_A^A\
\$ UVWATAUAVAWH
A_A^A]A\_^]
u092u,H
UWATAVAWH
A_A^A\_]
@USVWAUH
\$pH;\$`t
\$pH;\$`u
H;D$PtO
|$ @wLH
D$@L;D$Hu
0u=H9QHu7
UWATAVAWH
@A_A^A\_]
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
@WATAVAWH
HA_A^A\_
@UWATAVH
HA^A\_]
H3L$HH3D$PI
/L3D$HH
/H3L$(I
H3A(L3I0H
@SUVWAWH
@A__^][
\$ VWAWH
L$ USWH
\$ UWAVH
FhH;i@t
H9s tbH
@UVWATAWH
K8L9c t$
@A_A\_^]
D$@L;D$Hu
@UWAUAVH
@USVWAVH
<ct^<lt1<s
<bt <ht
<ct <mt
<btN<dt)<n
<atb<mt3<v
<bt <ht
<itN<pt)<s
<etN<gt)<l
<atN<it)<p
<ot^<vt1<x
<it <pt
<htN<ut)<w
<bt <ht
<htj<ut)<w
<bt <ht
<htN<ut)<w
<et`<ot2<s
<at`<ot2<x
<et\<gt)<u
<btN<ht)<w
<at><nt!<s
<dt <nt
<btb<ht3<w
<bt><ht!<w
<atB<nt#<x
<atB<nt#<s
<atB<nt#<x
<atB<nt#<r
<atB<nt#<s
<atB<nt#<x
<atB<nt#<s
<at^<nt1<r
<htN<st)<w
<bt.<dt <ht
<atB<st#<u
<bt.<dt <ht
<atb<st3<u
<bt.<dt <ht
<bt <ht
<dt><nt!<p
<bt.<dt <ht
<dt <ht
<bt.<dt <ht
<dt <ht
<bt.<dt <ht
<ht~<ltY<r
<1tN<3t)<6
<mtd<rt4<t
<at<<ft.<it <tt
<dtm<ltN<v
<bt.<ht <ot
<bt <ht
<btN<ht)<w
<bt <ht
<btN<ht)<w
<etj<gt7<l
<bt <ht
<btB<ht#<w
<ctb<st3<z
<etN<it)<p
<1tN<3t)<6
<bt.<dt <qt
<dt <qt
<bt.<dt <qt
<atB<nt#<x
<atN<it)<u
<dt <qt
<bt <dt
<dt <qt
<bts<dtN<qt)<w
<bt.<dt <qt
<bt <dt
<dt <qt
<bt <dt
<dt <qt
<dtw<it3<s
<btN<dt)<w
<bt\<dt7<w
<dt <qt
<bt\<dt7<w
<dt <qt
<bt\<dt7<w
<dt <qt
<btN<dt)<w
<bt <dt
<bt`<mt2<p
<dtb<it3<s
<ctB<mt#<s
<bt\<dt7<w
<dt <qt
<bt\<dt7<w
<dt <qt
<bt\<dt7<w
<dt <qt
<bt\<dt7<w
<bt><dt!<w
<ctd<mt4<u
<bt><dt!<w
<otb<st3<z
<dt[<it><qt!<s
<itb<qt3<s
<dt%<quBH
																																													
								
\$PH;\$Xu
tQH9.t!H
tQL9>t!H
@USAUAVH
@SAUAVAWH
8A_A^A][
@SAUAVAWH
8A_A^A][
@SAUAVAWH
8A_A^A][
@WATAUAVAWH
pA_A^A]A\_
@SVATAUAVH
PA^A]A\^[
l$ WAVAWH
WATAUAVAWH
0A_A^A]A\_
\$ UVWH
H3L$HH3D$PI
/L3D$HH
/H3L$(I
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
|$ ATAVAWH
0A_A^A\
L$ SUVWAVH
@SUVWATAVAWH
L9xxtU@8x
A_A^A\_^][
?@w	H9O
D$0H;L$`r
\$ UVWH
|$ @wLH
@SWATAVH
9@w	L9i
hA^A\_[
@UVATAUH
D$0H;L$`r
d$ UAVAWH
@UAUAWH
@USVWAVH
@SUVWATAVAWH
A_A^A\_^][
\$ UVWH
l$ VAVAWH
\$ UWAVH
@UATAUAVH
HA^A]A\]
|$ ATAVAWH
 A_A^A\
|$ ATAVAWH
 A_A^A\
VWAUAVAWH
0A_A^A]_^
K8w	H9q
T$HH;T$P
@USVWATAUAWH
A_A]A\_^[]
|$ H9L$8t
tmD8t$Pt
WD9t$@t
@UWATAUAVH
A^A]A\_]
UVWATAUAVAWH
l$0L9n 
D$xH9D$p
d$xL+d$pI
A_A^A]A\_^]
@SAVAWH
\$ VWATAVAWH
t6L9c t
 A_A^A\_^
UUUUUUU
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
@A_A^_^]
@USVWAVH
PA^_^[]
L9E(u@M
\$ UVWH
@UATAVH
@SUVWAVH
@UWAVAWH
tD93u;H;L$`r
@UVWATAVAWH
A_A^A\_^]
D$8H;D$@r
ATAVAWH
L$8H+L$0H
@USVWAVH
@SUVWATAVAWH
PA_A^A\_^][
@UWATAVH
SUWATAUAVAWH
 A_A^A]A\_][
l$ VWAVH
E8I9E0r
H9xHuPH
l$ VWAVH
\$PH;\$Xu
\$@2F	$
\$@2G	$
\$H2G	H
\$@2G	$
|$ UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
cXL9't!H
A_A^A]A\]
VWATAVAWH
 A_A^A\_^
 !"#$%&'()*+,-./0123456789;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:
 !"#$%&'()*+,-./0123458688888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888887
@UAUAVAWH
D$hH;D$pr
v+L+T$`H
9@w	H9Y
A_A^A]]
\$ UVWATAUAVAWH
H8w	L9i
x8@w	M9h@
~8@w	M9n@
x8@w	M9h@
@w	M;F@
H8w	L9i
N8w	L9i
D$8H3V@H
A_A^A]A\_^]
@UVAVAWH
@USWAUAVAWH
A_A^A]_[]
@UAUAVH
D$hH;D$pr
@UVWAVH
@UATAUAVAWH
D$8H;D$@r
A_A^A]A\]
\$ UVAVH
l$ WATAWH
H9D$@u!
G8I;HHt
A8H;PHt
\$ UVWATAVH
 A^A\_^]
@USAUAVH
t$(H;t$0
tY9y4vT3
H9|$(u)H
D$8H;D$@r
t%D;A4s
t';Q4s"
u)9p4v$3
t09y4v+3
gfffffffH
ATAVAWH
gfffffffH+
 A_A^A\
F(I9F r
gfffffffA
TUUUUUU
I9q s<I
I;q s<I
CxH9Cpr
G0H9G(r
@USVAUAVH
D$PH9D$Hr
D$HH;D$Pr
A^A]^[]
t$ WATAUAVAWH
 A_A^A]A\_
|$ ATAVAWH
 A_A^A\
D$@H;D$H
UVWAVAWH
`A_A^_^]
@SVWAVH
D$@L;D$Hu
@USVWATAUH
hA]A\_^[]
UVWATAVH
A^A\_^]
\$ UVATH
gfffffff
\$ UVATH
A@9APt/H
D8AQt^H
D8APtPH
A@8APtMD
@SWAUAWH
(A_A]_[
UWAVAWH
H8H+H0H
WATAUAVAWH
 A_A^A]A\_
@UAUAWH
@USVWAUAVH
F8H+F0H
A^A]_^[]
M8H;M@r
D$XL;D$`
VWATAVAWH
A_A^A\_^
WATAUAVAWH
0A_A^A]A\_
@USVWAVH
<-u=D8r
|$ ATAVAWH
 A_A^A\
@UVWAUAWH
A_A]_^]
H3L$HH3D$PI
/L3D$HH
/H3L$(I
@SATAWH
\$ UVWAVAWH
A_A^_^]
H3L$HH3D$PI
/L3D$HH
/H3L$(I
UVWAUAVH
0A^A]_^]
VWAUAVAWH
0A_A^A]_^
@SVWAVH
SUVWATAUAVAWH
A_A^A]A\_^][
|$ ATAVAWH
 A_A^A\
UUUUUUUUI
33333333f
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
0A_A^_^]
SVWAVAWH
PA_A^_^[
\$ A^_]
USVWATAUAVAWH
A_A^A]A\_^[]
|$ @v(H
|$ @vfH
VWATAVAWH
0A_A^A\_^
ATAUAVH
PA^A]A\
l$ WAVAWH
>@w	I9n
;@w	H9k
USWAVAWH
?@w	M9o
A_A^_[]
|$@@v(H
@SUWAVH
VWATAUAVH
@A^A]A\_^
@USWATAUAVH
A^A]A\_[]
t$ WAVAWH
UVWATAUAVAWH
E9>wGD9?wBH
@A_A^A]A\_^]
l$ WAVAWH
>@w	I9n
;@w	H9k
t$ WAVAWH
@USVWAVAWH
A_A^_^[]
H3L$HH3D$PI
/L3D$HH
/H3L$(I
UATAUAVAWH
@A_A^A]A\]
UVWATAUAVAWH
 A_A^A]A\_^]
@SVAUAVH
hA^A]^[
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
L$ SWAUAVH
8A^A]_[
t7D8|$xu
8A^A]_[
|$ UATAUAVAWH
A_A^A]A\]
\$ UVATAUAV
A^A]A\^]
@USVWATAUAVAWH
D$8f+L$Tf
A_A^A]A\_^[]
D9;w6A;
9)w@9*w<H
w>9*w:H
UUUUUUUUH
33333333H
d$ UAVAWH
@UVWAWH
@UVWAVH
UATAUAVAWH
A_A^A]A\]
@UVWAVH
0H;K8vPH
I9q s<I
I;q s<I
@UWAVAWH
(A_A^_]
ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
D$(H;D$@
D$@L;D$Hu
WATAUAVAWH
 A_A^A]A\_
L9uOt	L
\$ ATAVAWH
0A_A^A\
|$ ATAVAWH
@A_A^A\
O8H9H s
C H9G8sx
WATAUAVAWH
0A_A^A]A\_
L$ AVAWH
@SUVWAVH
|$ ATAVAWH
 A_A^A\
@SUVWATAUAVAWH
d$(uDI;
hA_A^A]A\_^][
UVWATAUAVAWH
--------H
w0M+w(I
A_A^A]A\_^]
@UATAUAVH
(A^A]A\]
D8AptAH
G0I9G(t&
\$ UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAVH
A^A\_^[]
E8H;E@r
t$ WAVAWH
@USVWATAUAVAWH
xA_A^A]A\_^[]
TUUUUUU
A9q }EI
A;q }?I
A9q }EI
A;q }?I
I9q sEI
I;q s?I
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
H9C s(H
VWATAVAWH
A_A^A\_^
@UVWATAUAVAWH
A_A^A]A\_^]
L$ UATAUAVAWH
A_A^A]A\]
Px9D$H}
Ph9D$H}
L$`Hc	H
l$X@8(u
@SUVWATAVAWH
A_A^A\_^][
  !"#$%&'000(000)*+0000000000000,-000000000000000./
WATAUAVAWH
A_A^A]A\_
@SUVWATAUAWH
A_A]A\_^][
@UVWATAUAVAWH
A_A^A]A\_^]
D$@L;D$Hu
T$PA;B }
@UVWATAUAVAWH
A_A^A]A\_^]
VWATAVAWH
A_A^A\_^
|$ ATAVAWH
t$ WAUAVH
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
MPH;MXr
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
@SUVWATAVAWH
A_A^A\_^][
@USVWATAVAWH
A_A^A\_^[]
@SUVWATAVAWH
pA_A^A\_^][
VWAUAVAWH
A_A^A]_^
@USVWATAVAWH
HcuhLcupH
pA_A^A\_^[]
\$ UVAWH
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
D8v(uGH
UVWATAUAVAWH
A_A^A]A\_^]
\$ VWAVH
VWATAVAWH
@A_A^A\_^
TUUUUUU
effffff
I9q sEI
I;q s?I
I9q sEI
I;q s?I
I9q sEI
I;q s?I
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
H9C s(H
WATAUAVAWH
@A_A^A]A\_
UVWATAUAVAWH
APH9AHt+
FPH9FHu
0A_A^A]A\_^]
@UVWAVAWH
A_A^_^]
@SUVWATAVAWH
A_A^A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
t$ WAVAWH
@UVWATAUAVAWH
F@H98t%H
C@H90t%H
A_A^A]A\_^]
trH91um
@UVWATAUAVAWH
C@H98t%H
C@H90t%H
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWAVAWH
A_A^_^]
@UVWATAUAVAWH
H;S sCH
A_A^A]A\_^]
UVWATAUAVAWH
D$ L9E0L
D$XH98u
A_A^A]A\_^]
@USVWATAUAVAWH
L;K sIH
L;K sNH
A_A^A]A\_^[]
t$ WAVAWH
@USVWAVAWH
A_A^_^[]
|$ AVHcZ
s WAVAWH
@SUVWATAUAVAWH
hA_A^A]A\_^][
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWAUAVAWH
H;K s=H
A_A^A]_^[]
@UVWATAUAVAWH
A_A^A]A\_^]
 !"WW#$%&W'WW(W)WWWWWWWWWWWW*+,-W.W/012345WWWWWWWWWWWWWWWWWW6WWWWWWWW789:;W
<=>?@AWBCWWWWWWWWDEFGHIWWWWWWW,JWKWWWWWLMNOPWQWWWWWWWWWWWWWWWWWWWWWR
SW*+<TUWWWWWWWWWR
UWAUAVAWH
A_A^A]_]
UVWATAUAVAWH
H;K sLH
`A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
@SUVWAVH
@SUVWAUAVAWH
`A_A^A]_^][
@UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
D$PM;P s
L;S sAH
UVATAUAWH
`A_A]A\^]
D$@L;D$Hu
T$ L;B s
L;K sAH
@SVWATAWH
D$xH98t
@A_A\_^[
[ VAVAWH
u>L9A s,H
T$ L;B s
@UVWATAUAVAWH
A_A^A]A\_^]
L$8H;Q s
T$8L;B s
H;S sAH
VWATAVAWH
A_A^A\_^
@UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
L;C sFH
`A_A^A]A\_^]
SVWAVAWH
0A_A^_^[
VWATAVAWH
A_A^A\_^
t$ UWAVH
@WATAUAVAWH
@A_A^A]A\_
@UVWAVAWH
G8H+G0H
A_A^_^]
AUAVAWH
@A_A^A]
WATAUAVAWH
U8H+U0H
M8H+M0H
E8H+E0H
A_A^A]A\_
E_H;x L
@UVWATAUAVAWH
`A_A^A]A\_^]
\$P;\$TL
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
G8H;]Ht
@USVWATAUAVAWH
mwLc}oH
A_A^A]A\_^[]
@USVWAVAWH
A_A^_^[]
																																				
																				
																																																				
@USVWATAUAVAWH
D$0Lc!L
D;y u	E3
A_A^A]A\_^[]
r5HcD$0
\$8r<HcD$0
rDHcD$0
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
H UATAUAVAWH
A_A^A]A\]
@UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAUAVAWH
u2E8.t-H
A_A^A]_]
H UATAUAVAWH
A_A^A]A\]
u2@8+t-H
UVWATAUAVAWH
`A_A^A]A\_^]
|$ UAVAWH
@USVWAVH
D$PI;H s
H0D;J0uP3
t$ ATAVAWH
u1D8c?u
l$ VATAVH
H9C u1H
@HH9C u:H
B(A9@(|
D$@L;D$Hu
H9z(u?H
u.H9~ u
ChH+C`H
t5H9{(t
UVWATAUAVAWH
PA_A^A]A\_^]
@UVWAVAWH
D$hH;D$pr
A_A^_^]
t$(H9Ghr
G H9AHu
@SUWATAUH
M L9{0H
`A]A\_][
@UVWATAUAVAWH
A_A^A]A\_^]
@SUVWAVH
pA^_^][
UATAUAVAWH
A_A^A]A\]
55555555555
5555555555555
5 !"55#$%5&55555555555555555'55555555()55555*5+,5-55.5555////05512355555555555555555555554
@UVWATAUAVAWH
L$8H;L$@r
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
EhH9E`r
@UVATAUAWH
 A_A]A\^]
UATAUAVAWH
D$0HcS(E3
D$HHcK`
D$@HcCdH
D$PHcChH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
SUVWAVAWH
A_A^_^][
SUVWAVAWH
GhH9G`u
8A_A^_^][
SUVWAVAWH
A_A^_^][
@SUVWAUH
 A]_^][
@UVWATAUAVAWH
EHL;EPr
A_A^A]A\_^]
VWATAVAWH
L$8H;L$@r
C8I;_Ht
A_A^A\_^
@SWATAWH
(A_A\_[
E9g4tYA
D$8H;D$@r
\$0H;\$8@
|$ ATAVAWH
0A_A^A\
D$HH;D$Pr
@SUVWAVAWH
G@H9X@H
A_A^_^][
USVWATAUAVAWH
A_A^A]A\_^[]
WATAUAVAWH
A_A^A]A\_
UATAUAVAWH
L$`H;L$hr
A_A^A]A\]
H;L$HtG
UWATAVAWH
6A8|$ tAI
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
_XI9GX@
t2H92t!H
G0I9G(r
UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
9@w	H9Q
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
S8H;HHt
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
SUVWATAUAVAWH
A_A^A]A\_^][
@UVWATAUAVAWH
A_A^A]A\_^]
t$ WAVAWH
UVWAVAWH
PA_A^_^]
@UVWAVAWH
A_A^_^]
@UVWAVAWH
A_A^_^]
@SUWATAUAVAWH
 A_A^A]A\_][
UVWATAUAVAWH
l$0E9l$
CPHcL$0I
L$0A;L$
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
H;WHu4H
ATAUAVAWH
I;FHuFH
(A_A^A]A\
@UVWATAUAVAWH
@A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
USVWATAUAVAWH
A_A^A]A\_^[]
D$@L;D$Hu
@UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
@A_A^A]A\_^]
VWATAVAWH
;H;T$@r
A_A^A\_^
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
USVWATAUAVAWH
D$PH9D$Xu"
A_A^A]A\_^[]
@SUVWAVH
|$ ATAVAWH
0A_A^A\
@SUVAVH
\$ UATAVH
t$8;Upr4I
WATAUAVAWH
 A_A^A]A\_
@UAVAWH
 A_A^]H
\$ UVWATAWH
 A_A\_^]
\$ UWAVAWL
HcC$LcC
HcC$HcK
</t?<\t;H
WATAUAVAWH
 A_A^A]A\_
L$ SVWH
<\t.</t*
@SUVAUAVH
PA^A]^][
t+HcC$LcC
t(HcC$HcK
SUVWATAUAVAWH
(A_A^A]A\_^][
HcC$HcK
|$ ATAVAWH
t1HcC$HcK
 A_A^A\
t7HcG,HcO
t1HcC$HcK
t7HcC$HcS
t1HcC$HcK
t7HcC$HcS
t1HcC$HcK
t7HcC$HcS
WATAUAVAWH
@A_A^A]A\_
T$8+G$A
t7HcC$HcK
3IcF,IcN
@UAVAWH
HcC$HcK
@UATAUAVAWH
0A_A^A]A\]
SATAVAWH
A_A^A\[
L$ AVAWH
t$ WATAVH
UVWATAUAVAWH
 A_A^A]A\_^]
T$8+G$Hc
T$8+G$A
t2HcC$HcK
UVWAVAWH
.HcC$HcK
 A_A^_^]
|$ UATAUAVAWH
A_A^A]A\]
\$ UVWATAUAVAWH
A_A^A]A\_^]
.HcC$HcK
HcC$HcK
.HcC$HcK
UVWATAUAWH
A_A]A\_^]
l$ VWAVH
UVATAUAWH
@A_A]A\^]
t}HcC$HcK
t7HcC$HcS
t3HcF,HcN
HcF,HcV
t3HcF,HcN
HcF,HcV
t3HcF,HcN
HcF,HcV
t.@8+t)
t1HcF$HcN
t$ UWAVH
L9u0t	H
PHL9u t	H
t6HcC$HcS
l$ VWAVH
fffffff
ATAVAWH
 A_A^A\
VWATAVAWH
 A_A^A\_^
x ATAVAWH
 A_A^A\
VWATAVAWH
A_A^A\_^
L$ USWH
H SVWAVH
UVWATAUAVAWH
A_A^A]A\_^]
^ffffff
fffffff
0ffffff
AUAVAWH
0A_A^A]
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
@UATAVH
l$ VAVAWH
L$ USVWH
` AUAVAWH
0A_A^A]
fffffff
.ffffff
fffffff
VWATAVAWH
A_A^A\_^
UVWATAUAVAWH
A_A^A]A\_^]
D8eoupH
UVWATAUAVAWH
pA_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
AUAVAWH
0A_A^A]
@SVWATAUAVAWH
L!|$@L!
A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
s WATAUAVAWH
9t$P~.8\$vt(H
9t$P~98\$vt3H
A_A^A]A\_
@UATAUAVAWH
!t$(H!t$ I
A_A^A]A\]
x ATAUAWH
@A_A]A\
USVWAVH
WATAUAVAWH
gfffffffH
A_A^A]A\_
x AUAVAWH
@SUVWAVH
WATAUAVAWH
A_A^A]A\_
@SUVWATAVAWH
zu|D!t$ E3
A_A^A\_^][
UVWATAUAVAWH
D$DD9T$X
|$h+t$D+
A_A^A]A\_^]
l$ VWATAVAWH
T$&@8t$&t9@8r
A81t@@8r
A_A^A\_^
@USVWATAUAVAWH
A_A^A]A\_^[]
;Cu1f9K
f93t$M;
L$ SUVWH
|$ ATAVAWH
0A_A^A\
WATAUAVAWH
0A_A^A]A\_
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
fD9|$bu
H9L$Ht8H
UVWATAUAVAWH
D)\$4A;
d$4t	fD
t$\9D$`t
t$PD8|$8t
A_A^A]A\_^]
` AUAVAWH
t$8Hc0I
\$0D9=jC3
sYHcL$HH
x ATAVAWH
< tD<	t@
 A_A^A\
H3E H3E
!\$0!\$(!\$ L
UVWATAUAVAWH
A_A^A]A\_^]
VWATAVAWH
 A_A^A\_^
\$ UVWATAUAVAWH
D9l$dtXH
HcD$PH;
A_A^A]A\_^]
t$ WATAUAVAW
A_A^A]A\_
VWATAVAWH
 A_A^A\_^
t$ WAVAWH
t$ WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
USVWATAUAVAWH
XA_A^A]A\_^[]
@ffffff
SVWATAUAVAWUH
]A_A^A]A\_^[
x ATAVAWH
 A_A^A\
@UATAUAVAWH
A_A^A]A\]
x ATAVAWH
ATAVAWH
@A_A^A\
\$ UVWATAUAVAWH
fD9 t	H
A_A^A]A\_^]
VWATAVAWH
 A_A^A\_^
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
$tPH9\$@t>
A_A^A]A\_^]
UWATAVAWH
uMM9'tHH
uQM91tLH
A_A^A\_]
<1~-<3~ <4t5<5t
UATAUAVAWH
A_A^A]A\]
D8t$HuD
(D$@L9t$ t0H
D$(D8t$(u\H
x UAVAWH
|$ UATAUAVAWH
A_A^A]A\]
,0<	w!A
@UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
A_A^A]A\_
tVf91tQH
x ATAVAWH
 A_A^A\
@SUVWATAVAWH
A_A^A\_^][
tSf91tNH
D;|$0t9
x ATAVAWH
 A_A^A\
@USVWATAVAWH
tyfD9 tsH
tHfD9 tB
@A_A^A\_^[]
UVWATAUAVAWH
D$DD9T$X
|$h+t$D+
A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
@SUVWATAVAWH
PA_A^A\_^][
SATAUAWUH
]A_A]A\[
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
L$pH9L$xu 
L$pH9L$xu'
A_A^A]A\_^]
L$0H;L$8u
UVWATAUAVAWH
L$0L;L$ t 
A_A^A]A\_^]
D$hH9D$`
UVWATAUAVAWH
A_A^A]A\_^]
VATAUAWH
A_A]A\^
UVWATAUAVAWH
A_A^A]A\_^]
VATAUAVAWH
 A_A^A]A\^
UVWATAUAVAWH
A_A^A]A\_^]
T$ H9T$(u 
H9T$(u(
L$ H9L$(u!
USVWATAUAVAWH
\$x;]0t
D+D$lD;
A_A^A]A\_^[]
uN8D$ u
@SUVWAUH
@A]_^][
\$ UVWH
L$ UATAUAVAWH
A_A^A]A\]
@USATAVH
ATAVAWH
 A_A^A\
l$ WAVAWH
@UAUAWH
SUVWAWH
FHI9GHu
A@9APtBD
|$ UATAUAVAWH
M(H;M0r
u~L9D$hu"
T$`H9T$hu!
A_A^A]A\]
iP;D$d|
D$@H9D$8
S8H;^HH
H9T$Hu 
t'H91tGH
v0H;t$ 
UVWATAUAVAWH
vpL;t$8
L$`H9L$hu!
A_A^A]A\_^]
l$ VWAUAVAWH
 A_A^A]_^
UVAUAVAWH
A_A^A]^]
|$ AUAVAWH
 A_A^A]
B`H+BXH
t$ UWAUAVAWH
A_A^A]_]
B`H+BXH
k VWAVH
UVWATAVH
PA^A\_^]
UVWATAUAVAWH
D$(H;D$0r
A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAWH
8A_A]A\_^]
@UATAUAWH
u2L+L$X
A_A]A\]
d$ UAVAWH
L9D$(u'
t2H90t!H
G8I;HHt
H;L$@tI
l$ VWAWH
u#H9s u
F@I9F8r
USVWATAUH
E@I9E8r
A]A\_^[]
E@I9E8r
H;D$0t9
UVWATAUAVAWH
F@I9F8r
A_A^A]A\_^]
D$0uuH+
UVWATAUAVAWH
_PH;t$P
D$@I9D$8r
A_A^A]A\_^]
B0E+B(t
SAUAVAWH
(A_A^A][
@SUVWAVAWH
A_A^_^][
@UATAUAVAWH
 A_A^A]A\]
UVWATAUAVAWH
u[L9~HuUI
 A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
UVWATAUAVAWH
t$X@8q t
A_A^A]A\_^]
@USVAUH
VWATAVAWH
F0I9F(r
FhI9F`r
0A_A^A\_^
D$l;D$@
t$ WATAVH
SVWAUAVAWH
HA_A^A]_^[
K H9H0t
G H9A0u
@USVWATAUAVAWH
EXI9EPr
A_A^A]A\_^[]
H8H9H@u$
GXI9GPr
t$ UWAUAVAWH
|$HH;|$Pr
A_A^A]_]
w	H;]Hu
|$ UAVAWH
D$@L;D$Hu
D$ L9D$(u"
|$ ATAVAWH
SUVWAVH
`A^_^][
UVWATAUAVAWH
A_A^A]A\_^]
H9OHu&H
L9CHu$M
ATAVAWH
 A_A^A\
ATAVAWH
 A_A^A\
E+A(tVM
uBD9nTu-
t2D9nTu
t$PH9H@u&
H;OXu|H
|$ AUAVAWH
H8H9H@u
 A_A^A]
UVWATAUAVAWH
tME8fhuGH
A_A^A]A\_^]
TUUUUUU
effffff
H9H(|	H
SUAVAWH
A(H9A t
@SUVWAUAVAWH
F H;L$(t
A_A^A]_^][
@USVWATAUAVAWH
D$(M+>I
NHM;N@t
t"H98t)H
A_A^A]A\_^[]
HHH9HPu&
L9h0t	H
[@H;\$@
t$ D;t$8
MPI9MHr
D$HH;D$Pr
G(H9G0uPI
8H;L$Pr
v+H+L$@H
L$HH9L$@
T$0H;t$8
D$hH9G0t
l$ VWAVH
E(H9E r
@SVATAUAVAWH
F(H9F r
8A_A^A]A\^[
D$@H;D$Pu
T$@H;|$Xu
L$ USWATAWH
t$pI9D$ t
D$@M;NXt
A_A\_[]
@UATAVH
|$ AUAVAWH
CXH9BXu
C`H9B`t
 A_A^A]
|$ UATAUAVAWH
A_A^A]A\]
USVAUAWI
D$0H;D$8r
A_A]^[]
MhH9C t
|$ UATAUAVAWH
A_A^A]A\]
@UVAUAWH
@USVWATAUAVH
L9x0t	H
A^A]A\_^[]
D$xH9D$@
v*H+MpH
E0H9E(r
@SVATAUAWH
L$@H+C H
C(H+C H
H9C t!H
T$hH;l$x
A_A]A\^[
@UAUAVH
UVWATAUAVAWH
tGL;wHu
 A_A^A]A\_^]
\$ UVWAVAWH
A_A^_^]
O0H9O(r
D$HH9G t
C8H9C0r
C(H9C t
>H9t$(u%
UUUUUUUUI
33333333L+
H;YXt_H
D$@;D$Pt	H
F8H;HHt	
VWAUAVAWH
F(I+F H
A_A^A]_^
L9J0t8H
VWATAUAVH
`A^A]A\_^
@UVWATAUAVAWH
A_A^A]A\_^]
t~H99t H
SUVAVAWH
0A_A^^][
UUUUUUUUI
33333333I
D$@L;D$Hu
L9p0t	H
\$ UVWATAUAVAWH
F0H9F(t
F8H9F0r
A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
l$ VATAWH
ATAVAWH
 A_A^A\
gfffffffH+
ATAVAWH
 A_A^A\
@SAVAWH
D$ H;D$(t
|$ AUAVAWH
 A_A^A]
\$ UVWH
\$ UVAVH
G8I9G@H
^HH9J@u,
t$ UWAVH
C8H9C0r
l$ VWAVH
D$(H9D$ t
A@9APtBD
@USVWATAVAWH
voA8_,t
A_A^A\_^[]
@USVWATAUAWH
A_A]A\_^[]
[@H;\$8
effffff
O ;H s*I
A A9C s
H A9K s
A A9C s
A A9@ s
H A9H s
A A9@ s
USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAWH
HA_A]A\_^]
>@w	H9^
HA_A]A\_^]
t$ WAVAWH
UVWATAUAVAWH
|$ @w;H
A_A^A]A\_^]
QPI9PPtSH
\$ UVWATAUAVAWH
E`H9EXr
A_A^A]A\_^]
|$ AUAVAWH
 A_A^A]
gfffffffI+
gfffffffH
UATAUAWI
A_A]A\]
\$ UVWATAUAVAWH
ugH9L$Xu
t'H91tNH
uVH9L$Xu&
t2H92t:H
t'L91tYH
usH9L$Xu$
A_A^A]A\_^]
D$@L;D$Hu
l$X;t$hu
ATAVAWH
 A_A^A\
ATAVAWH
 A_A^A\
ATAVAWH
gfffffffH+
 A_A^A\
|$ ATAVAWH
 A_A^A\
@UWAUAVAWH
H;^Ht	H
0u2H;^Hu,A
A_A^A]_]
P(H9:t!H
@VATAUAWH
(A_A]A\^
@WATAVAWH
(A_A^A\_
@USVWAVH
t$ WAVAWH
USVWATAUAVH
A^A]A\_^[]
@UAUAVH
FPD8ohu$H
\$8L9l$@
l$ VWAVH
\$ UVWATAWH
A_A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
USVWATAVAWH
A_A^A\_^[]
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
L$h;\$ u
@USVWAVAWH
A_A^_^[]
D$hH9D$`
D$hH;D$pr
L$8H;|$H
D$hH9D$`
EHH;EPr
L$HH;L$X
@WATAWH
|$ ATAVAWH
 A_A^A\
l$ VWAVH
@USVWATAVAWH
F`H+FXH
pA_A^A\_^[]
v+H+L$ H
ATAVAWH
 A_A^A\
T$0H;T$8t
@UWATAUAWH
A_A]A\_]
@USVWAWH
A9v@t	H
@USWAVAWH
A_A^_[]
\$ VWAVH
L$(H+L$ H
UVWATAUAVAWH
A_A^A]A\_^]
|$0H;t$x
pHL;t$8t
[@H;\$P
NHH9NPuW
@UAUAWH
L$PH;L$Xu}H
|$ AUAVAWH
 A_A^A]
NPL;NHt
FHH9BHu
ATAUAWH
@SVWATAUH
0A]A\_^[
|$ UATAUAVAWH
D$8E8e tEH
L$XA9|$
A_A^A]A\]
|$ UATAUAVAWH
D$0E8} tSH
L$@A9|$
A_A^A]A\]
D$8H;D$@r
@USVATAUH
r/H;Epr
EhH;Epr
A]A\^[]
@USVATAUH
r/H;Epr
EhH;Epr
A]A\^[]
UVWATAUAVAWH
D$8H;\$H
A_A^A]A\_^]
D$PH+|$HH
p ATAVAWH
@WAVAWH
@SWATAUAVH
0A^A]A\_[
@USVWATAUAVAWH
A_A^A]A\_^[]
\$ UATAWH
USVWATAUAVH
H9T$hu$
t$@L+;D
A^A]A\_^[]
@SWAUAWH
(A_A]_[
UWAVAWH
|$ UATAWH
D+O(t#L
G0D+G(t"L
SUVWATAUAVAWH
FXH9FPr
xA_A^A]A\_^][
SUVAUAVH
A^A]^][
UVWATAUAVAWH
9@w	L9a
A_A^A]A\_^]
@SUWAVH
EXI9EPr
@UWAUAVH
F`M+FXI
D$@t/H+
|$ UATAUAVAWH
L;Q s+H
@ H9A r
L;Q s*I
L;P s)f
@ H9A r
L;Q s*H
L;P s)f
@ H9A r
t$`L;t$h
H H9J s
@ H9A s
L;Q s*H
L;P s)f
@ H9A r
L;Q s*H
L;P s)f
@ H9A r
H H9J s
@ H9A s
A_A^A]A\]
l$ AUAVAWH
 A_A^A]
H VWAUAVAWH
A_A^A]_^
@UAVAWH
t0@8|$`u
t!D8l$`u
D$@H+:L
H;T$pr"H
tHL9'uCL
D$hH;D$pr"H
u:H;T$pr
t:H;T$pr
USVWAUAVAWH
A_A^A]_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWATAVAWH
A_A^A\_]
@USVWAUAVAWH
~8@w	L9n@
A_A^A]_^[]
\$@L+gHE
GXH9GPr
D$PH+GHH
GXH9GPr
l$ VWAVH
t@<(t@<
WATAUAVAWH
A_A^A]A\_
ATAVAWH
 A_A^A\
@USVWAUAVAWH
A_A^A]_^[]
USVWAUAVAWH
A_A^A]_^[]
@USVWAUAVAWH
A_A^A]_^[]
t$ UWAUAVAWH
A_A^A]_]
UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
UWATAVAWH
A_A^A\_]
USVWATAUAVAWH
A_A^A]A\_^[]
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
l$ UAVAWH
9@w	H9Y
@UWATAVAWH
PA_A^A\_]
UATAUAVAWH
D$pH#T$8H
D$PH#T$8H
D$`H#T$8H
A_A^A]A\]
USVWATAWH
A_A\_^[]
UWAUAVH
xA^A]_]
UVWATAUAVAWH
u8w	H9^
L9d$`u)@
L9d$hu+@
 A_A^A]A\_^]
|$ UATAWH
@USVWAUAVAWH
A_A^A]_^[]
@USVWATAUAVAWH
8@w	L9`
H9Egu,H
H9Egu'H
8@w	L9`
D8egt	I
H9EguaL
A_A^A]A\_^[]
@USVWAUAVAWH
t6H9uou
zH9uwutI
t/H9uou
A_A^A]_^[]
9@w	H9Y
UVATAUAVH
A^A]A\^]
@SVWATAVAWH
XA_A^A\_^[
@SUVWAWH
`A__^][
UVWAVAWH
`A_A^_^]
SATAUAWH
(A_A]A\[
D97wCD93w>H
D97wGD93wBH
USVWATAUAVAWH
~8@w	L9v@
8@w	M9w@
A_A^A]A\_^[]
@USWATH
H8w	L9q
GPLcd$4A
UVWATAUH
pA]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
UVATAUAVH
pA^A]A\^]
UVWATAUAVAWH
8@w	H9X
A_A^A]A\_^]
@USVATAUAVAWH
A_A^A]A\^[]
@UAVAWH
UVATAVAWH
A_A^A\^]
SATAUAWH
(A_A]A\[
@USVWATAUAVAWH
FHH9CHu
A_A^A]A\_^[]
@USVWATAUAVAWH
O8w	H9q
|$x@v	H
D$hH9D$8
D$HH9D$X
D$HH9D$8
8@w	H9p
D$HH9D$8
8@w	H9p
D$hH9D$X
D$HH9D$8
D$XH9D$h
D$8H9D$H
D$hH9D$X
D$HH9D$8
D$XH9D$h
D$8H9D$H
D$XH9D$h
|$x@v	H
A_A^A]A\_^[]
USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
8@w	H9p
M8w	H9q
8@w	H9p
|$x@v	H
9@w	H9q
A_A^A]A\_^]
|$x@v	H
D$89|$`
\$ UVWATAUAVAWH
G 9F v[
A_A^A]A\_^]
t$ UWATAVAWH
A_A^A\_]
WATAUAVAWH
@A_A^A]A\_
UVWATAUAVAWH
D9t$Xv	H
D96w	L9~
uXD96w	H9V
D96w	L9~
|$X@v	H
A_A^A]A\_^]
UVWATAUAVAWH
D97w	L9
]hD97w	L9
D97w	H9O
D$8H9D$H
D$`H9D$x
A_A^A]A\_^]
@UVWAUAVAWH
A_A^A]_^]
@UAUAVH
BHH9AHt
BHI9@Hu
H;|$PuT
WATAUAVAWH
A_A^A]A\_
|$ AUAVAWH
@UWAUAVAWH
A_A^A]_]
USVAUAWH
A_A]^[]
@USVAWH
\$8<.u#I9_
N8w	H9y
@USVWATAUAVAWH
~8@w	L9~@
C8w	L9x
K8w	L9y
EgH9]wt
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
@USVAUAWH
A_A]^[]
D$8D9vTu
8@w	H9x
A_A]^[]
|$ @v$H
E0H+E H
|$pD;l$`
T$XD;|$`
@USVAVH
D9ePv	H
8@w	I9w@
9@w	H9q
8@w	H9w@
USVWATAUAVAWH
|$@A;^0t
GXH9GPr
A_A^A]A\_^[]
FXH9FPr
GXI9GPr
M`H9Mhu#
u<I9v t6
P0A+P(t
WATAUAVAWH
A_A^A]A\_
@UATAUAVAWH
A_A^A]A\]
SUVWATAUAWH
`A_A]A\_^][
GPD9}Tu
tDE9~Tu
@UAUAVH
@SUVWAVH
WATAUAVAWH
0A_A^A]A\_
\$ UVWH
T$0;\$P
@USWAWH
uQ9X uLA
t$ UWATAVAWH
A_A^A\_]
u*9\$4t
]xD;t$8
t	D9D$HM
;\$4|IH
d$ UAVAWH
USVWATAUAVAWH
>@w	H9^
H#T$hD;
H#T$XD;
H#T$HD;
H#T$8D;
H#T$XD;
tU9|$`v
8@w	L9`
A_A^A]A\_^[]
D$19|$8
USVWATAUH
A]A\_^[]
\$ UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
D8mXtzE
PA_A^A]A\_^]
USVWAUAVAWH
PA_A^A]_^[]
effffff
G8I9G@u"A
W8M;}HI
UVWATAUAVAWH
pHI9M@u#A
d$HL;d$8
I9M@u#A
A_A^A]A\_^]
F8H9F@u"
t'H98t H
USVWATAUAVAWH
A_A^A]A\_^[]
K8H;^Ht
UWATAVAWH
|$HH;|$Pr
A_A^A\_]
SUATAUAVAWH
G8H;MHt
D$hH9FH
(A_A^A]A\][
|$ AUAVAWH
 A_A^A]
K8H;^Ht
@SVWATAVH
pA^A\_^[
UVWATAUAVAWH
F8I;MHt
G8H;OHt
A_A^A]A\_^]
H8H9H@uJ
N8H9N@u$
O8H9O@u
WATAUAVH
xA^A]A\_
L9D$(u'
L9D$(u&
UVWATAUAVAWH
EHH;EPr
A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
D$PH;D$Xr
D$(H;D$0r
t$ ATAVAWH
@A_A^A\
v*L+D$0H
t$ WATAVH
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
L$ H;L$(
A_A^_^]
0uUI9^HuOA
USVWAUH
H9T$(u$
D$ H9D$(u#
H9T$(u 
|$ ATAVAWD
|$8A_A^A\
TUUUUUU
I9q s<I
I;q s<I
@USVWATAUAVAWH
d$8D9o0u_H
A_A^A]A\_^[]
UATAUAVH
A^A]A\]
USAUAVH
D$@L;D$Hu
F0I9F(r
@USVWAUAVAWH
A_A^A]_^[]
@UWATAUAWH
A_A]A\_]
t$ WATAUAVAWH
A_A^A]A\_
UWAUAWH
FXH9FPr
t$ WAUAVH
L$ AVAWH
t%H98tRH
D$(H;D$0r
T$ H;T$(
UVWATAUAVAWH
A_A^A]A\_^]
USVWAUAVAWH
A_A^A]_^[]
USVWATAUAVAWH
S8I;\$HI
gfffffffI+
fffffff
A_A^A]A\_^[]
gfffffffL+
fffffff
l$ ATAVAWH
fffffff
gfffffffH
 A_A^A\
gfffffffL+
fffffff
@SUWAUAVH
 A^A]_][
@SUVWATAUAVAWH
A_A^A]A\_^][
@UVWAUAVH
0uPD9g0uJH
A^A]_^]
E8H;E@r
D$XH;D$`r
E8H;E@r
D$ A;E(
E8H9E0t	H
|$ H9D$Pta
E8H;E@r
l$0H9E0
D$8H;D$@r
WATAUAVAWH
0unE9n0uhA
D9n(t+H
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
L$8H+L$0H
@UATAUH
D$XH;D$`r
|$ ATAVAWH
 A_A^A\
\$ UWAVH
v*L+D$0H
L$8H;L$@r
D$8H+D$0H
H8H9H@u!
EXH;E`r
T$PH;T$`
CHL9!t!H
@UATAVAWH
utH9x0unH
A_A^A\]
|$ ATAVAWH
@UVWAVH
D$pH9]p
E8H;E@r
@SUVWATAVAWH
PA_A^A\_^][
@SUATAWH
8A_A\][
WATAUAVAWH
A_A^A]A\_
@USVAUAWH
A_A]^[]
D$P;D$X
t$0;|$P
;|$Ptsf
uHD;t$X
TUUUUUU
I9@(srA
I9q s<I
I;q s<I
@USVWATAUAVAWH
E+J(t1M
A_A^A]A\_^[]
@USATAVH
\$ UATAVH
t$8L#D$h
t$HL#D$X
D$XH9D$H
E0H9E(r
L$ H;L$(t
L$0H;L$8t
|$ UATAUAVAWH
A_A^A]A\]
@UATAUAWH
A_A]A\]
UATAUAVAWH
A_A^A]A\]
USVWATAUAVAWH
A_A^A]A\_^[]
H9T$8u(
@SUVWAVH
@A^_^][
@UVWAUAVH
A^A]_^]
VWATAUAVH
A^A]A\_^
@UAUAVAWH
D$(H;D$0r
L$ H;L$(t\
L$ H;L$(u
A_A^A]]
@UVWAVH
USVWAVI
UVWATAUAVAWH
A_A^A]A\_^]
|$ UATAUAVAWH
D$$;D$`
A_A^A]A\]
D$@L;D$Hu
l$ VWAWH
H9T$8u'
|$ ATAVAWH
 A_A^A\
WATAUAVAWH
A_A^A]A\_
t$ UAUAVH
@USVATAWH
A_A\^[]
@USVAUAWH
A_A]^[]
@UAVAWH
@UATAVAWH
A_A^A\]
d$ UAVAWH
@UATAUAWH
A_A]A\]
@UATAUAVAWH
A_A^A]A\]
@USVWATAVAWH
A_A^A\_^[]
\$ UAVAWH
@UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
t$ UWAVH
|$ UATAUAVAWH
A_A^A]A\]
L$ UVAUH
@SWAUAVAWH
pA_A^A]_[
l$ VWAWH
t$ WAUAVH
@USWAUAVH
A^A]_[]
L$ UVWAVAWH
`A_A^_^]
USVWAVH
l$ WAVAWH
UAUAVAWH
A_A^A]]
UVWATAUAVAWH
A_A^A]A\_^]
(((((((((((
(((((((((
(((((((
(((((((	
(((((((((((((((((((
((((((((((((
((((((((((
((((((((
((((((((((
(((((((
 !(("#$%&&((&&&&&((
(((((('
(((((((((
t$ WATAVH
effffff
USVWAVH
\$ UVWATAUAVAWH
t$@;t$p
A_A^A]A\_^]
UVATAUH
TUUUUUU
I9q s<I
I;q s<I
USVWATAUAVH
A^A]A\_^[]
D$@L;D$Hu
)D$ H;F
l$ WAVAWH
CpH9Cht
USATAVAWI
A_A^A\[]
UVATAUAVAWI
A_A^A]A\^]
VWAUAVAWH
PA_A^A]_^
A H9G u
A(H9G(ttI
UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVH
A^A]A\]
@USVWATAUAVAWH
D$HH9D$@
L$pH+\$H
A_A^A]A\_^[]
@USVWATAUAVAWH
E(H;E0r
A_A^A]A\_^[]
WATAUAVAWH
@A_A^A]A\_
ATAVAWH
 A_A^A\
\$ UVWATAUAVAWH
T$8H9T$0
L$0H;L$8
A_A^A]A\_^]
@SVWATAUH
 A]A\_^[
I9q s<I
I;q s<I
T$@H9C 
@SAVAWH
UVWATAUAVAWH
tsL;	u	A
H9P s!H
A_A^A]A\_^]
D$@L;D$Hu
ub'vb'v
VWATAVAWH
$H;8u5A
0A_A^A\_^
L$ SVAWH
|$P@v	H
D$DH;Eo
\$ UVWATAUAVAWH
L$@H;D$`r
A_A^A]A\_^]
@UVWATAUAVAWH
0u6L9gHu0I;
\$h;\$x
A_A^A]A\_^]
M8I9M@u A
E L; t*I
u@I9H@u*A
UWAUAVAWH
M9P@u-A
N8I9N@u'A
A_A^A]_]
L$ H;L$(t
H;t$0t(I;
L$ USVWAUAVH
9@w	H9Y
A^A]_^[]
L$ UVWAUAWH
A_A]_^]
L$ UVAUAVAWH
A_A^A]^]
\$ UVWH
D$HH+D$@H
UATAUAVAWH
A_A^A]A\]
d$ UAVAWH
VHH;WHt.I
\$ UVWH
@UVATAVH
tbL9 u]@
H L;9uHH
@UVAUAVH
UVWATAUAVAWH
A_A^A]A\_^]
@USVWAVAWH
L$x+D$d
|$x@v	H
A_A^_^[]
@UWATAVAWH
A_A^A\_]
@USVATAWH
A_A\^[]
D$@L;D$Hu
\$ UVWATAUAVAWH
A_A^A]A\_^]
H9D$ t?H
SUWAVAWH
0A_A^_][
\$ UVWH
H8w	H9y
;\$(t/H
uxM9H0urI
D$ H;L$Hr"H
@USWAWH
l$ VWAVH
@USVWATAUAVAWH
I9N@u&A
D+D$<D;
tIL9iHuCH
A_A^A]A\_^[]
\$ UVWH
L$PfD9G
D$hH;M`r
D$\;D$|
\$ UVWH
@UATAUAWH
tFL9#t5I;
A_A]A\]
UVWAVAWH
A_A^_^]
\$ UVWH
H9D$`u)
\$ UVWH
T$ H;L$pr'H
D$0;D$4u
T$ H;L$pr'H
D$0;D$4u
D$(H;L$pr"H
\$ UVWH
L$xfA9X
9@w	H9Y
|$x@v	H
\$H;\$`u
L$H;L$`
t$8fD9@
\$ UVWH
|$x@v	H
H9D$Pu!
EoH9Egu
@VAVAWH
SUVWAVH
0A^_^][
@SWATAWH
(A_A\_[
SVWAVAWH
0A_A^_^[
USVWATAUAVAWH
E0I+E H
hA_A^A]A\_^[]
UVWATAUAVAWH
EHH;EPr
M@H;MHtW
A_A^A]A\_^]
SUVWAUH
t%H99tYH
0A]_^][
t-H98t H
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWAWH
I9O@u!A
\$ H;\$0
G8I9G@u$A
|$ ATAVAWH
 A_A^A\
@SUATAUAWH
 A_A]A\][
UWATAVAWH
PA_A^A\_]
t$ WAVAWH
t$ UWATAVAWH
P(H+P H
A_A^A\_]
SUVWAUH
D$`H9D$Xr
@UWATAWH
l$ VWAVH
@USVWATAUAVH
A^A]A\_^[]
\$ UVWH
D$P;t$@u
D$<9D$$
D$<;D$$t
D$pH;D$0u
UWATAVAWH
A_A^A\_]
@USVWATAVH
A^A\_^[]
@UATAVAWH
XA_A^A\]
l$ UAVAWH
@USATAVAWH
PA_A^A\[]
UVWATAUAVAWH
EXH;E`r
A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
WATAUAVAWH
@A_A^A]A\_
VWATAUAVH
H9l$@tq
`A^A]A\_^
D+E(t%L
UVWATAUAVAWH
H;_Ht'L
A_A^A]A\_^]
M8H;M@r
EXH9EPt	H
L$ UATAUAVAWH
A_A^A]A\]
ATAVAWH
 A_A^A\
t$xH;E@r
UATAUAVAWH
A_A^A]A\]
K`H+KXH
USVWATAUAVAWH
xA_A^A]A\_^[]
USVWATAUAVAWH
xA_A^A]A\_^[]
UWATAUAWH
PA_A]A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
A_A^A]A\_
t$ WAVAWH
@UVATAUAVAWH
G8I+G0H
A_A^A]A\^]
effffff
I9@(srA
H9C(r8H
H SATAWH
@UWAVAWH
(A_A^_]
ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
H SATAWH
\$ UATAVH
\$ UVWH
ATAUAVAWH
hA_A^A]A\
|$ AUAVAWH
@USVWATAVAWH
A_A^A\_^[]
SVWATAVH
A^A\_^[
@SUWATAUAWH
L$XI9L$`u
8A_A]A\_][
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
MHH;MPr
H9t$@tWH
A_A^A]A\_^[]
UVWATAUAVAWH
O`M;OXt
A_A^A]A\_^]
L$(H;L$0r
twL9&uiH
D$PH;D$Xr
L9&uBH;|$Xr
@UAVAWH
@SWATAWH
(A_A\_[
t$ UWATAVAWH
A_A^A\_]
\$ VWAVH
UATAUAVAWH
PA_A^A]A\]
@VAUAVH
h VWAWH
SUVWAWH
0A__^][
|$ ATAVAWH
0A_A^A\
tBH;h v
UWATAVAWH
A_A^A\_]
G0H9G(t%
H9Q0t	H
L9A0uUH
\$ VATAWH
@UVWAVH
E+B(t*M
A0E+A(t
@USVWATAVH
A^A\_^[]
G,H;uPu
@USVAVAWH
A_A^^[]
SUVWAVH
@A^_^][
tHL;|$0u
@A^_^][
@UAVAWH
SAUAVAWH
HA_A^A][
[ WAVAWH
@SUATAVAWH
@A_A^A\][
|$ UAVAWH
<*u[H9{
UAUAVAWH
8A_A^A]]
@VWATAUAVH
@A^A]A\_^
@UVAUAVAWH
0A_A^A]^]
L$ SVATAVH
8A^A\^[
L$@H9L$8t
SUVWAVH
PA^_^][
@USVWATAUAVAWH
A_A^A]A\_^[]
t$ UWAVH
H9xHuXH
D$@H;rH
t$ WATAUAVAWH
A_A^A]A\_
D$pH9GH
@PH9BPuUH
@PH9BPu
L$ H+3M
t3H99t	H
I9q s<I
I;q s<I
@SAVAWH
UWATAVAWH
A_A^A\_]
D$@L;D$Hu
|$ UATAUAVAWH
|$0@v	H
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
H9y0t	H
{XH9{`u
t$ UWAVH
9\$(t	3
0L9D$(u%
*L9HHuGL
L$ USVWH
\$ UVWATAUAVAWH
A_A^A]A\_^]
@SUVWATAVAWH
A_A^A\_^][
l$ VWATAVAWH
A_A^A\_^
!""""""
VWATAVAWH
0A_A^A\_^
L$ USVWAVAWH
A_A^_^[]
\$ UVWH
@SUVWAVH
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
@UAVAWH
fffffff
] H;]`t^H
u"HcMHH
H(H9J(u
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\hlslvariables.g
__SET_BY_FEATURE__
S_TOOLS_ENABLED
S_SHADER_QUALITY
__FROM_ATTRIBUTE__
__FROM_ATTRIBUTE_OR_FEATURE__
D_FADE_COLOR
Unknown
Texture
VectorText
CheckBox
sampler1D
sampler2D
sampler3D
samplerCUBE
float3x3
float4x3
float4x4
cbuffer
samplerCUBEARRAY
sampler2DARRAY
__SetByArtist__
__Attribute__
__FeatureToInt__
__FeatureToBool__
__FeatureToFloat__
__RenderStateLiteral__
__Expression__
__SetByArtistAndExpression__
Viewport
InvViewportSize
TextureDim
InvTextureDim
TextureDimLog2
TextureSheetData
1:1: Tokens : ( T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 | T__44 | T__45 | T__46 | T__47 | T__48 | T__49 | T__50 | T__51 | T__52 | T__53 | T__54 | T__55 | T__56 | T__57 | T__58 | T__59 | T__60 | T__61 | T__62 | T__63 | T__64 | T__65 | T__66 | T__67 | T__68 | T__69 | T__70 | T__71 | T__72 | T__73 | T__74 | T__75 | T__76 | T__77 | T__78 | T__79 | T__80 | T__81 | T__82 | T__83 | T__84 | T__85 | T__86 | T__87 | T__88 | T__89 | T__90 | T__91 | T__92 | T__93 | T__94 | CONSTANT_REGISTER | PACK_OFFSET | VECTOR_TYPE | MATRIX_TYPE | STATIC | CBUFFER | ID | INTEGERLITERAL | FLOATLITERAL | STRINGLITERAL | WS | LINE | PRAGMA | UNKNOWN );
features
VFX_PROGRAM_MAX
Version
DevShader
CompileTargets
Description
Features
Vertex Shader
Pixel Shader
Geometry Shader
Hull Shader
Domain Shader
Dev Shader
Compile Targets
<invalid>
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\generated_antlr_code_gl\hlslvariableslexer.c
Early exit
Mismatched set
layout( std140, row_major ) uniform
CBUFFER
CONSTANT_REGISTER
PACK_OFFSET
INTEGERLITERAL
FLOATLITERAL
STRINGLITERAL
VECTOR_TYPE
MATRIX_TYPE
SCALAR_TYPE
EXPONENT
FLOATSUFFIX
UNKNOWN
'struct'
'typedef'
'tbuffer'
'packoffset'
'register'
'string'
'class'
'float'
'double'
'vector'
'matrix'
'sampler'
'sampler1D'
'sampler2D'
'sampler3D'
'samplerCUBE'
'samplerCube'
'SamplerState'
'SamplerComparisonState'
'sampler2DShadow'
'sampler2DMS'
'samplerCubeArray'
'sampler2DArray'
'sampler2DArrayShadow'
'texture1D'
'texture2D'
'texture3D'
'textureCUBE'
'textureCube'
'texture'
'Buffer'
'Texture1D'
'Texture1DArray'
'Texture2D'
'Texture2DArray'
'Texture3D'
'Texture3DArray'
'TextureCube'
'TextureCubeArray'
'Texture2DMS'
'Texture2DMSArray'
'const'
'row_major'
'column_major'
'extern'
'nointerpolation'
'precise'
'shared'
'groupshared'
'uniform'
'volatile'
'centroid'
'linear'
'noperspective'
'sample'
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\hlslvariables.g
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\generated_antlr_code_gl\hlslvariablesparser.c
float _dummyMemberToPreventEmptyStructForGlsl;
GLSL does not support multi-dimensional arrays (until GLSL v4.30 with GL_ARB_arrays_of_arrays). Currently only GLSL v4.00 + extensions is required.
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
MemAllocClassName
CUtlMemory::Grow
Unaccounted
CUtlMemory<struct VariableValue_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Release
vfx_gl.dll
memoverride MallocUnattributed
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier0\memoverride.cpp
memoverride ReallocUnattributed
purecall
invalid_parameter
#version 140
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_explicit_attrib_location : enable
#version 330
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#version 330
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_texture_cube_map_array : enable
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_viewport_array : enable
#version 410
#extension GL_ARB_shading_language_420pack : enable
#version 410
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_tessellation_shader : enable
#extension GL_ARB_gpu_shader5 : enable
#define mul(a, b) ((b) * (a))
#define lerp(a, b, c) mix(a, b, c)
#define float2	vec2
#define float3	vec3
#define float4	vec4
#define int2	ivec2
#define int3	ivec3
#define int4	ivec4
#define uint2	uvec2
#define uint3	uvec3
#define uint4	uvec4
#define float3x3	mat3x3
#define float4x3	mat4x3
#define float3x4	mat3x4
#define float4x4	mat4x4
#define float2x3	mat2x3
#define float2x4	mat2x4
#define float3x2	mat3x2
#define float3x4	mat3x4
#define float4x2	mat4x2
#define float4x3	mat4x3
SV_Depth
gl_FragDepth
SV_IsFrontFace
gl_FrontFacing
SV_Position
gl_Position
gl_FragCoord
SV_SampleIndex
gl_SampleID
SV_ViewportArrayIndex
gl_ViewportIndex
SV_InstanceID
uint( gl_InstanceID )
uint gl_InstanceID
SV_PrimitiveID
uint( gl_PrimitiveID )
uint gl_PrimitiveID
SV_VertexID
uint( gl_VertexID )
uint gl_VertexID
SV_ClipDistance0
gl_ClipDistance[0]
gl_ClipDistance
SV_ClipDistance1
gl_ClipDistance[1]
SV_ClipDistance2
gl_ClipDistance[2]
SV_ClipDistance3
gl_ClipDistance[3]
SV_ClipDistance4
gl_ClipDistance[4]
SV_ClipDistance5
gl_ClipDistance[5]
SV_InsideTessFactor
gl_TessLevelInner
SV_TessFactor
gl_TessLevelOuter
SV_RenderTargetArrayIndex
gl_Layer
POSITION
nointerpolation
noperspective
centroid
BLENDWEIGHT
BLENDINDICES
TEXCOORD
TANGENT
BINORMAL
POSITIONT
triangle
triangles
lineadj
lines_adjacency
triangleadj
triangles_adjacency
PontStream
LineStream
line_strip
TriangleStream
triangle_strip
fractional_odd
fractional_odd_spacing
fractional_even
fractional_even_spacing
integer
equal_spacing
point_mode
isolines
triangle_cw
triangle_ccw
generic
unknown error
iostream
iostream stream error
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\fmtstr.h
CVfxDx11Include::Open(128): Cannot use absolute paths for shader includes. Found %s
SHADER_SOURCE
\src\shaders\
CVfxDx11Include::Open(186): Cannot read file "%s"
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\vfx_compile_helpers_gl.cpp
CVfxDx11Include::Open(201): Cannot find include file %s
SHADER_MODEL
PROGRAM
CVfxGL::CreateGlobalMacrosAndNULLTerminate
( macroIndex - startIndex ) == CalcNumGlobalMacros( compileTarget )
IVfxShaderValidator::GetActiveUniforms failed.
IVfxShaderValidator::GetActiveUniformsBlocks failed.
Can't find shader constant %s in effect parameter list
CVfxGL::ConvertGLShaderParams
pFoundParam->m_nRegisterOffset == ( pUniformInfo->nUniformOffset / 4 )
pFoundParam->m_nRegisterCount == ( uint32 )( pUniformInfo->nUniformSize * pUniformInfo->nUniformNumElements )
pFoundParam->m_registerSet == pUniformInfo->nRegisterType
_Globals_
Can't find resource %s in effect parameter list
pFoundParam->m_registerSet == VFX_REGISTER_TEXTURE
pShaderReparserGL != NULL
nSamplerBinding >= 0
_sampler
Can't find sampler %s in effect parameter list
pMatchingSamplerParam->m_registerSet == VFX_REGISTER_SAMPLER_STATE
$Globals
Can't find constant buffer %s in constant buffer list
%s_gl_builtin
layout( location = %d ) %s 
gl_PointSize
SerializeBuiltinVaryingStructDeclToGLSLSM30
compileTarget == PC_SM_3_0_GL || compileTarget == PC_SM_3_0_VULKAN
programType == VFX_PROGRAM_VS
out float gl_ClipDistance[1];
SerializeBuiltinVaryingStructDeclToGLSL
programType != VFX_PROGRAM_PS
%s gl_PerVertex
float gl_ClipDistance[1];
 gl_in[gl_MaxPatchVertices]
 gl_in[]
 gl_out[]
gl_Position.y = -gl_Position.y; %s
gl_Position.z =  gl_Position.z * 2.0 - gl_Position.w; %s
%s.%s[%d] = %s[%d];
%s.%s = %s[%d];
%s.%s = %s;
%s[%d] = %s.%s[%d];
%s[%d] = %s.%s;
%s = %s.%s;
%s.%s = %s_%s[%d];
%s.%s = %s_%s;
%s_%s[gl_InvocationID] = %s.%s;
%s_%s = %s.%s;
layout( %s ) in;
Unable to translate Geometry Shader input primitive type '%s'
BuildMainEntryPointWrapper
layout( %s, max_vertices = %d ) out;
Unable to translate Geometry Shader output primitive type '%s'
void main()
%s mainIn[%d];
%s mainOut;
mainIn[%d]
%s( mainIn , mainOut );
layout( vertices = %d ) out;
pGLSLPartitioning && pGLSLPrimitive
Failed to translate partitioning or outputtoplogy HLSL attributes.
layout( %s, %s, %s ) in;
layout( %s, %s ) in;
gl_out[gl_InvocationID].gl_ClipDistance[0] = gl_in[gl_InvocationID].gl_ClipDistance[0];
gl_ClipDistance[0] = gl_in[0].gl_ClipDistance[0] * gl_TessCoord.x + gl_in[1].gl_ClipDistance[0] * gl_TessCoord.y +  gl_in[2].gl_ClipDistance[0] * gl_TessCoord.z;
mainOut = %s( mainIn, uint( gl_InvocationID ) );
pHSConstantOutputStruct
%s patchIn;
patchIn
mainOut = %s( patchIn, mainIn, gl_TessCoord );
mainOut
if ( gl_InvocationID == 0 )
%s patchOut;
patchOut = %s( mainIn );
%s outputPatch[%d];
outputPatch[%d] = %s( mainIn, %d );
patchOut = %s( outputPatch );
patchOut
void main()
%s mainIn;
%s mainOut;
gl_ClipDistance[0] = 0.0; // Initialize in case the shader does not write to it to avoid relying on undefined behavior.
mainOut = %s( mainIn );
#define GSAppendVertex( streamName, v ) \
streamName = v; \
%s_%s = streamName.%s; \
gl_Position = streamName.%s; \
gl_ClipDistance[0] = streamName.%s; \
gl_ViewportIndex = int( streamName.%s ); \
gl_PrimitiveID = int( streamName.%s ); \
gl_Layer = int( streamName.%s ); \
gl_ClipDistance[0] = 0.0; \
EmitVertex(); \
//ATTRIBMAP
BuildMetaDataComments
pInputStructDecl != NULL
nSemanticIndex <= 15
nSemanticHash >= 0 && nSemanticHash <= 0xFF
Failed to translate semantic '%s' BuildMetaDataComments(1752): 
maxvertexcount
patchconstantfunc
outputcontrolpoints
partitioning
outputtopology
flatten
fastopt
forcecase
allow_uav_condition
VFileSystem017
VFXGL: D3D shader preprocessor DLL not initialized properly. Can't compile shader.
Invalid shader program CVfxGL::CompileShaderAndGetVariables(1989): 
#line 1 "
Error opening vfx file CVfxGL::CompileShaderAndGetVariables(2035): 
Error masking unused parts for vfx file CVfxGL::CompileShaderAndGetVariables(2047): 
Calling D3DPreprocess()
Error while running preprocessor over shader code:
D3DXPreprocess() failed with no error message! CVfxGL::CompileShaderAndGetVariables(2083): 
-gl_driver_validate
Error parsing %s function signature
-gl_disable_optimize_glsl
Failed to optimize shader.
Compilation failed; CVfxShaderReparserGL failed to reparse shader source.
-gl_shader_hash_d3d
VFX_DLL_001
vfx_dx11
CVfxGL::CompileShaderAndGetVariables(2400): ERROR! Can't load vfx_dx11 dll!
vfx_dx9
CVfxGL::CompileShaderAndGetVariables(2413): ERROR! Can't load vfx_dx9 dll!
CVfxGL::CompileShaderAndGetVariables
pVfxD3D9 != NULL
pVfxD3D11 != NULL
CVfxGL::CompileShaderAndGetVariables(2483): ERROR! Failed to convert GLSL to SPIRV!
pBinaryIL
Error adding shader to cache
Invalid shader program for CVfxGL::GetAllShaderVariables()
D3DPreprocess() failed with no error message! CVfxGL::GetAllShaderVariables(2696): 
FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified! String: "%s"
CFmtStrN<256,0>::CFmtStrN
FmtStrVSNPrintf truncated without QUIET_TRUNCATION specified!
string too long
invalid string position
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlrbtree.h
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::Find
!!m_LessFunc
m_Root == InvalidIndex()
m_FirstFree == InvalidIndex()
m_NumElements == 0
Unaccounted
CUtlMemory<unsigned char,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class CVfxParsedShaderParam *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::RemoveAll
Unaccounted
CUtlMemory<class CVfxStructMember *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::RemoveAll
Unaccounted
CUtlMemory<class CUtlString,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<int,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct VfxShaderMacro_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
glAttachShader
glDetachShader
glCreateShader
glDeleteShader
glShaderSource
glGetShaderiv
glGetShaderInfoLog
glCompileShader
glGetProgramiv
glGetActiveUniform
glGetUniformLocation
glGetProgramInfoLog
glIsProgram
glCreateProgram
glDeleteProgram
glLinkProgram
CVfxContextMgrGL::CreateGLContext - missing OpenGL v2.0 entrypoints
glGetStringi
CVfxContextMgrGL::CreateGLContext - missing OpenGL v3.0 entrypoint 'glGetStringi'
glGetUniformIndices
glGetActiveUniformsiv
glGetUniformBlockIndex
glGetActiveUniformBlockiv
glGetActiveUniformBlockName
CVfxContextMgrGL::CreateGLContext - missing OpenGL v3.1 / GL_ARB_uniform_buffer_object extension entrypoints
glGenProgramPipelines
glDeleteProgramPipelines
glCreateShaderProgramv
glUseProgramStages
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.1 / GL_ARB_separate_shader_objects
glGetProgramBinary
glProgramBinary
glProgramParameteri
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.1 / GL_ARB_get_program_binary
glGetProgramResourceiv
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.3 / GL_ARB_program_interface_query extension entrypoints
CVfxContextMgrGL::CreateGLContext - Unable to initialize SDL.
CVfxEntrypointsGL::CreateGLContext
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\vfx_context_mgr_gl.cpp
vfx_opengl
CVfxContextMgrGL::CreateGLContext - Failed SDL_CreateWindow() for OpenGL dummy window
CVfxContextMgrGL::CreateGLContext - Failed SDL_GL_CreateContext() for OpenGL Device Context
CVfxContextMgrGL::GetGLEntrypointsForThread
pGL != NULL
CVfxContextMgrGL::GetGLEntrypointsForThread - Failed to Intialize OpenGL
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::SetLessFunc
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::Find
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::RemoveAll
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::FindInsertionPosition
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
m_Elements.IsValidIterator( m_LastAlloc ) || m_NumElements == 0
m_Elements.IsValidIterator( it )
m_Elements.IsValidIterator( m_LastAlloc )
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
d3dcompiler_43.dll
CVfxGL::Init() - fsFactory can't get '%s' interface.
CVfxGL::Init
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\vfx_gl.cpp
D3DPreprocess
Error loading D3D compiler DLL %s!
CVfxGL::GetDriverInfo
Unaccounted
CUtlMemory<enum VfxCompileTarget_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
bad locale name
ios_base::badbit set
ios_base::failbit set
ios_base::eofbit set
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\vfx_shader_reparser_gl.cpp
CVfxShaderReparserGL::Reparse
m_pShaderValidator != NULL
Too manu uniform blocks in shader.  Max (%d), Active (%d).
uniform
sampler
, binding = %d 
CVfxShaderReparserGL::ReparseSamplerDecl
nSamplerBinding < GLM_MAX_PIXEL_SAMPLERS_SM30
nSamplerBinding < GLM_MAX_VERTEX_SAMPLERS_SM30
nSamplerBinding < GLM_MAX_VERTEX_SAMPLERS
nSamplerBinding < GLM_MAX_GEOMETRY_SAMPLERS
nSamplerBinding < GLM_MAX_HULL_SAMPLERS
nSamplerBinding < GLM_MAX_DOMAIN_SAMPLERS
nSamplerBinding < GLM_MAX_PIXEL_SAMPLERS
layout( binding = %d ) 
bad cast
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::SetLessFunc
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::Find
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::RemoveAll
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::FindInsertionPosition
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\vfx_shader_validator_gl.cpp
CVfxShaderValidatorGL::CVfxShaderValidatorGL
m_pVfxGL != NULL
VFXGL: OpenGL missing required entrypoints. Can't compile shader.
%s_%s_%s
OpenGL: Compiling GLSL Shader
CVfxShaderValidatorGL::CompileShader
programType < VFX_PROGRAM_MAX
nProgramName != 0
Compilation failed; no code produced.  Log string from driver %s
VFXGL: OpenGL missing required entrypoints. Can't GetActiveUniforms.
Unaccounted
CUtlMemory<struct VfxUniformInfo_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct VfxUniformBlockInfo_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
gla.precision
gla.entrypoint
gla.noStaticUse
gla.shared
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\vfx_shader_validator_glslang.cpp
GetShLanguage
LunarGLASS unsupported functionality: %s
CVfxShaderValidatorGLslang::CVfxShaderValidatorGLslang
could not start LunarGLASS in multi-threaded mode
CVfxShaderValidatorGLslang::Initialize
CVfxShaderValidatorGLslang::CompileShader
m_pProgram == NULL
Link failed; no code produced.  Log string from glslang %s
glslang failed to build reflection information.
Compilation failed; no code produced.  Log string from glslang %s
CVfxShaderValidatorGLslang::GetActiveUniforms
m_pProgram
CVfxShaderValidatorGLslang::GetActiveUniformBlocks
CVfxShaderValidatorGLslang::GetOptimizedShader
GLSL optimization: attempting to optimize uninitialized shader
GLSL optimization: failed to get intermediate representation.
GLSL optimization: failed to generate optimized shader.
uniform _Globals_
pEndMaterialOwnedUniformBuffer > pStartMaterialOwnedUniformBuffer
SPVremapper error: %s
SPVRemapperErrorCallback
CVfxShaderValidatorGLslang::GetBinaryShader
ppBinaryOut
pBinarySizeOut
GLSL to BIL: attempting to get BIL for uninitialized shader
GLSL to BIL: failed to get intermediate representation.
-vulkan_disable_spvremapper
vector<T> too long
list<T> too long
map/set<T> too long
layout(std140, row_major) uniform _Globals_ 
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlstring.h
CUtlStringBuilder::PrepareBuffer
!pszString || pszString[nChars] == '\0'
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\hlsl_parser.cpp
VS_INPUT
CShaderParamBuilder::IsCurrentStructDeclEmpty
m_pCurrentStruct
Annotation %s doesn't have any values. Ignoring annotation.
Wrong number of items in value for annotation %s. Ignoring annotation.
Invalid value data type for annotation %s
Unsupported annotation data type
CShaderParamBuilder::AddAnnotation
PointStream
InputPatch
OutputPatch
 [ %s ] 
SV_OutputControlPointID
ParseHSFunctionDefinition
inputArrayString.nToken != 0
SV_DomainLocation
ParseDSFunctionDefinition
CFakeSamplerShaderParamBuilder::AddGlobalVariable
Unexpected sampler param type
g_vShared
 : register( c%d ) 
 : packoffset( c%d.%c ) 
float4 %s: register( c%d );
CStreamRewriter::RewriteTokenStream
nElemCount + nStartElem <= 4
#define %s (%s.%s)
float%dx%d
float%d
%s %s%s : register( c%d );
ANTLR - 
Expecting %s
CHlslParser::Parse c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\hlsl_parser.cpp
Preprocessed HLSL code
HLSL lexer encountered %d %s
HLSL parser encountered %d %s
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::FindInsertionPosition
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::FindInsertionPosition
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
Unaccounted
CUtlMemory<float,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class CVfxParsedConstantBuffer *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class CVfxStructDecl *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class VfxParsedInputSignatureElement_t *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
Unaccounted
CUtlMemory<struct ShaderParamInsertString_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct CStreamRewriter::RewriteCmd_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
shadercache
%s\%s%s_%08X%08X%08X%08X.vshadercache
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\vfx_compiled_shader_cache.cpp
Loading cached shader: %s
Adding cached shader: %s
shadercache\*.vshadercache
Deleting old shadercache file: %s
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\byteswap.h
CByteswap::SwapBufferToTargetEndian
count >= 0
outputBuffer
Unaccounted
CUtlMemory<char *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class CVfxShaderAttribute,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class CVfxVariableDescription,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<class CVfxTextureChannelProcessor,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct ConstantBufferDescription_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
LESS_EQUAL
GREATER
NOT_EQUAL
GREATER_EQUAL
USER_CONFIG
WIREFRAME
SUBTRACT
REV_SUBTRACT
SRC_COLOR
INV_SRC_COLOR
SRC_ALPHA
INV_SRC_ALPHA
DEST_ALPHA
INV_DEST_ALPHA
DEST_COLOR
INV_DEST_COLOR
SRC_ALPHA_SAT
BLEND_FACTOR
SRC1_COLOR
INV_SRC1_COLOR
SRC1_ALPHA
INV_SRC1_ALPHA
REPLACE
INCR_SAT
DECR_SAT
AUTOMATIC
MIN_MAG_MIP_POINT
MIN_MAG_POINT_MIP_LINEAR
MIN_POINT_MAG_LINEAR_MIP_POINT
MIN_POINT_MAG_MIP_LINEAR
MIN_LINEAR_MAG_MIP_POINT
MIN_LINEAR_MAG_POINT_MIP_LINEAR
MIN_MAG_LINEAR_MIP_POINT
MIN_MAG_MIP_LINEAR
ANISOTROPIC
COMPARISON_MIN_MAG_MIP_POINT
COMPARISON_MIN_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_POINT_MAG_MIP_LINEAR
COMPARISON_MIN_LINEAR_MAG_MIP_POINT
COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_MAG_MIP_LINEAR
COMPARISON_ANISOTROPIC
BILINEAR
TRILINEAR
NEAREST
MIRROR_ONCE
FillMode
CullMode
DepthBias
DepthBiasClamp
SlopeScaleDepthBias
DepthClipEnable
MultisampleEnable
SampleMask
DepthEnable
DepthWriteEnable
DepthFunc
HiZEnable
HiZWriteEnable
StencilEnable
StencilReadMask
StencilWriteMask
StencilFailOp
StencilDepthFailOp
StencilPassOp
StencilFunc
BackStencilFailOp
BackStencilDepthFailOp
BackStencilPassOp
BackStencilFunc
StencilRef
HiStencilEnable
HiStencilWriteEnable
HiStencilFunc
HighStencilRef
AlphaToCoverageEnable
BlendEnable
IndependentBlendEnable
SrcBlend
DstBlend
BlendOp
SrcBlendAlpha
DstBlendAlpha
BlendOpAlpha
ColorWriteEnable0
ColorWriteEnable1
ColorWriteEnable2
ColorWriteEnable3
SrgbWriteEnable0
SrgbWriteEnable1
SrgbWriteEnable2
SrgbWriteEnable3
BlendFactor
HighPrecisionBlendEnable
AlphaTestEnable
AlphaTestRef
AlphaTestFunc
AddressU
AddressV
AddressW
BorderColor
MipBias
MaxAniso
ComparisonFunc
Texture1D
Texture2D
Texture3D
TextureCube
Sampler
Sampler1D
Sampler2D
Sampler3D
SamplerCube
PixelShader
VertexShader
PixelFragment
VertexFragment
Texture1DArray
Texture2DArray
Texture3DArray
TextureCubeArray
Texture2DMS
Texture2DMSArray
UNSUPPORTED
SamplerCubeArray
Sampler2DArray
unknown
texture
renderstate
samplerstate
constbuffer
***Error! Variable %s is not an input texture
g_inputTexture2D_%s
g_inputTexture3D_%s
g_inputTextureCube_%s
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_dx\vfx_parse_helpers.cpp
CExpressionParserCallback::CExpressionParserCallback
m_pParamForVarBeingParsed
Error: Invalid shader variable reference in expression: %s can't be used in expression because it is not an artist-editable variable
CExpressionParserCallback::IsShaderVariableName
pParamForFoundVar
g_renderState_
DEFAULT
*** Error compiling expression for render state %s: %s
*** Expression in render state cannot use 'this'
*** Error! Invalid render state data type
*** Error! Compiled expression for render state %s is too long
*** Error! Unknown render state %s
*** Error! Render state %s is only allowed in %s
*** Error! Multiply defined render state "%s"
*** Error! Invalid render state definition for %s
*** Error! Value for "%s" cannot be parsed!
Unsupported render state type
VfxAddRenderStateVariableDescriptions
SamplerState_
*** Error! Invalid data type for sampler state annotation %s: Must be string
DefaultSamplerState
_SrgbRead
*** Error! SrgbRead value must be true or false
_UvScaleVar
*** Error! UvScaleVar( %s ) on texture %s isn't referencing an existing variable.
*** Error! Variable referenced by UvScaleVar( %s ) on texture %s must be a float or int or vector type.
ProcessUvScaleAnnotation
pParamForFoundUvScaleVar
=	 ();,
attribute
outputFormat
*** Error! Missing output texture format for texture %s. Texture variable must either have a Source()/Attribute() annotation or texture processing annotations.
*** Error! Texture %s must have only one Source(), Attribute() or Expression() annotation or texture processing annotations.
*** Error! Invalid output format %s in texture %s
channelMipAlgorithm_
*** Error! Too many channels in channel specification "%s" for texture %s
*** Error! Invalid channel name %c in texture %s
*** Error! Texture channel %c appears in multiple channel definitions in texture %s
*** Error! Too many input textures specified for %s
*** Error! Undeclared input texture %s referenced in texture %s
*** Error! Invalid Channel() annotation. Mip algorithm requires at least one input texture arg in texture %s
channelOutputColorSpace_%s
*** Error! Invalid Channel() annotation. Missing output color channel info for texture %s
*** Error! Invalid color channel %s in texture %s
*** Error! Missing or invalid Channel() annotation in texture %s
sourceArg
Missing SourceArg() annotation for variable %s with source type TextureDim
Variable %s with variable source TextureDim is referencing unknown texture %s
*** Error parsing annotations! Unknown register set for %s!
*** Error! Unknown variable type for %s!
*** Error! Variable type doesn't match register type for %s!
*** Error! Unknown UiType "%s" for %s!
uigroup
*** Feature source "%s" on bool variable "%s" must stay in the range 0..1!
*** Feature source "%s" on variable "%s" can only be set to an int, bool or float!
*** Unknown source "%s" on variable "%s"!
*** Error! Variable "%s" format must be %s with size %d to match the expected source format for source "%s"!
           Found size %d!
expression
*** Error! Variable "%s" has an annotation string "%s" this is longer than %d characters!
*** Error compiling expression for variable "%s": %s
*** Error! Compiled expression for variable "%s" is too long
*** Error! Variable "%s" uses too many register elements! Found %d but only supports %d!
default%d
*** Error! "%s" can only use Default%d!
*** Error! Default setting for "%s" cannot be parsed!
range%d
*** Error! "%s" can only use Range%d!
*** Error! Range setting for "%s" cannot be parsed!
ParamTypeToConstantBufferType
Unsupported constant type in external constant buffer
_X360InstanceCount
_X360TileOffset
*** Error! Only one basic data type allowed in external constant buffer %s (either all float, all int, or all bool)
g_inputTexture
g_inputTexture2D_
g_inputTexture3D_
g_inputTextureCube_
*** Error! Invalid input texture type for %s
inputColorSpace
*** Error! Invalid input texture definition for %s. Missing input color space annotation.
*** Error! Input color space for "%s" cannot be parsed!
*** Error! Unsupported input color space %s for texture "%s"
minPrecision
*** Error! Invalid input texture definition for %s. Missing minimum precision annotation.
*** Error! Minimum precision for "%s" cannot be parsed!
imageAlgorithm
fileExt
*** Error! Invalid file ending string definition for %s!
*** Error! Texture ending string for "%s" cannot be parsed!
*** Error! Texture ending string "%s" for "%s" does not start with the '_' character!
defaultFile
g_boolAttr_
g_intAttr_
g_floatAttr_
g_float2Attr_
g_float3Attr_
g_float4Attr_
g_texAttr_
GetAttributeNameAndType
pParamName
pOutName
pOutType
*** Error! Invalid render attribute definition for %s
*** Error! Value for attribute "%s" cannot be parsed!
*** Error! Texture attribute "%s": "%s" is not a shader variable!
*** Error! Attribute "%s": cannot bind to variable "%s" because it is dynamic!
*** Error! Attribute "%s": cannot bind to variable "%s" due to type mismatch!
*** Error compiling expression for attribute "%s": %s
*** Error compiling expression for attribute "%s": Expressions on attributes can't use 'this'
*** Error! Compiled expression for attribute "%s" is too long.
*** Error! Compiled expression for attribute "%s" is not constant at compile time.
VfxAddAttributes
Invalid shader attribute type
TessellationState_PatchSize
*** Error! PatchSize() specification missing in hull shader
*** Error! Invalid hull shader input patch size definition
*** Error! Value for hull shader input patch size cannot be parsed!
semantic
*** ERROR! VS input struct member "%s" is missing semantic annotation!
*** Error! VS input struct semantic annotation for "%s" cannot be parsed!
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::Find
Unaccounted
CUtlMemory<struct ConstantBufferVariable_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct LineInfo_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct VsInputSignatureElement_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
WARNING: 
ERROR: 
INTERNAL ERROR: 
UNIMPLEMENTED: 
UNKOWN ERROR: 
__bad__
Unable to parse built-ins
#version: versions 300 and 310 require specifying the 'es' profile
#version: versions before 150 do not allow a profile token
#version: versions 300 and 310 support only the es profile
#version: only version 300 and 310 support the es profile
#version: geometry shaders require non-es profile and version 150 or above
#version: tessellation shaders require non-es profile and version 150 or above
#version: compute shaders require es profile with version 310 or above, or non-es profile with version 430 or above
#version: statement must appear first in es-profile shader; before comments or newlines
Warning, version 
 is not yet complete; most version-specific features are present, but some are missing.
 is unknown.
#version
Illegal to have non-comment, non-whitespace tokens before #version
No errors.  No code generation or linking was requested.
 compilation errors.  No code generated.
4.20 glslang LunarG Khronos.25512 2014/02/24 14:36:08
Linked 
 stage:
GL_OES_texture_3D
GL_OES_standard_derivatives
GL_EXT_frag_depth
GL_OES_EGL_image_external
GL_EXT_shader_texture_lod
GL_ARB_texture_rectangle
GL_3DL_array_objects
GL_ARB_shading_language_420pack
GL_ARB_texture_gather
GL_ARB_gpu_shader5
GL_ARB_separate_shader_objects
GL_ARB_tessellation_shader
GL_ARB_enhanced_layouts
GL_ARB_texture_cube_map_array
GL_ARB_shader_texture_lod
GL_ARB_explicit_attrib_location
GL_ARB_shader_image_load_store
GL_ARB_shader_atomic_counters
GL_ARB_derivative_control
GL_ARB_shader_texture_image_samples
GL_ARB_viewport_array
#define GL_ES 1
#define GL_FRAGMENT_PRECISION_HIGH 1
#define GL_OES_texture_3D 1
#define GL_OES_standard_derivatives 1
#define GL_EXT_frag_depth 1
#define GL_OES_EGL_image_external 1
#define GL_EXT_shader_texture_lod 1
#define GL_FRAGMENT_PRECISION_HIGH 1
#define GL_ARB_texture_rectangle 1
#define GL_ARB_shading_language_420pack 1
#define GL_ARB_texture_gather 1
#define GL_ARB_gpu_shader5 1
#define GL_ARB_separate_shader_objects 1
#define GL_ARB_tessellation_shader 1
#define GL_ARB_enhanced_layouts 1
#define GL_ARB_texture_cube_map_array 1
#define GL_ARB_shader_texture_lod 1
#define GL_ARB_explicit_attrib_location 1
#define GL_ARB_shader_image_load_store 1
#define GL_ARB_shader_atomic_counters 1
#define GL_ARB_derivative_control 1
#define GL_ARB_shader_texture_image_samples 1
#define GL_ARB_viewport_array 1
compatibility
unknown profile
not supported with this profile:
tessellation control
tessellation evaluation
geometry
fragment
compute
unknown stage
 is being used for 
extension 
not supported for this version or the enabled extensions
not supported in this stage:
deprecated, may be removed in future release
; may be removed in future release
 deprecated in version 
%s profile; removed in version %d
no longer supported in
The following extension must be enabled to use this feature:
required extension not requested:
Possible extensions include:
require
disable
#extension
behavior not supported
extension 'all' cannot have 'require' or 'enable' behavior
extension not supported:
extension is only partially supported:
const (read only)
gl_VertexId
gl_InstanceId
gl_ClipVertex
gl_PointCoord
fragColor
unknown qualifier
ExternalOES
atomic_uint
sampler/image
structure
unknown type
struct-
anonymous member 
vector<bool> too long
gl_VertexID
gl_InstanceID
NumWorkGroups
WorkGroupSize
WorkGroupID
LocalInvocationID
GlobalInvocationID
LocalInvocationIndex
VertexId
InstanceId
Position
PointSize
ClipVertex
ClipDistance
CullDistance
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
FrontColor
BackColor
FrontSecondaryColor
BackSecondaryColor
TexCoord
FogFragCoord
InvocationID
PrimitiveID
ViewportIndex
PatchVertices
TessLevelOuter
TessLevelInner
TessCoord
SecondaryColor
FragCoord
PointCoord
FragColor
FragData
FragDepth
SampleId
SamplePosition
SampleMaskIn
HelperInvocation
unknown built-in variable
mediump
unknown precision qualifier
column_major
row_major
rgba32f
rgba16f
r11f_g11f_b10f
rgb10_a2
rgba16_snorm
rgba8_snorm
rg16_snorm
rg8_snorm
r16_snorm
r8_snorm
rgba32i
rgba16i
rgba32ui
rgba16ui
rgba8ui
rgb10a2ui
depth_any
depth_greater
depth_less
depth_unchanged
layout(
location=%d 
component=%d 
index=%d 
set=%d 
binding=%d 
stream=%d 
offset=%d 
align=%d 
xfb_buffer=%d 
xfb_offset=%d 
xfb_stride=%d 
invariant 
centroid 
smooth 
noperspective 
sample 
coherent 
volatile 
restrict 
readonly 
writeonly 
implicitly-sized array of 
%d-element array of 
%dX%d matrix of 
%d-component vector of 
move second child to first child
add second child into first child
subtract second child into first child
multiply second child into first child
matrix mult second child into first child
vector scale second child into first child
matrix scale second child into first child
divide second child into first child
mod second child into first child
and second child into first child
or second child into first child
exclusive or second child into first child
left shift second child into first child
right shift second child into first child
direct index
indirect index
: direct index for structure
vector swizzle
subtract
component-wise multiply
right-shift
left-shift
bitwise and
inclusive-or
exclusive-or
Compare Equal
Compare Not Equal
Compare Less Than
Compare Greater Than
Compare Less Than or Equal
Compare Greater Than or Equal
vector-scale
vector-times-matrix
matrix-times-vector
matrix-scale
matrix-multiply
logical-or
logical-xor
logical-and
<unknown op>
Negate value
Negate conditional
Bitwise not
Post-Increment
Post-Decrement
Pre-Increment
Pre-Decrement
Convert int to bool
Convert uint to bool
Convert float to bool
Convert double to bool
Convert int to float
Convert uint to float
Convert double to float
Convert bool to float
Convert uint to int
Convert float to int
Convert double to int
Convert bool to int
Convert int to uint
Convert float to uint
Convert double to uint
Convert bool to uint
Convert int to double
Convert uint to double
Convert float to double
Convert bool to double
radians
degrees
tangent
arc sine
arc cosine
arc tangent
hyp. sine
hyp. cosine
hyp. tangent
arc hyp. sine
arc hyp. cosine
arc hyp. tangent
inverse sqrt
Absolute value
roundEven
Ceiling
Fraction
floatBitsToInt
floatBitsToUint
intBitsToFloat
uintBitsToFloat
packSnorm2x16
unpackSnorm2x16
packUnorm2x16
unpackUnorm2x16
packHalf2x16
unpackHalf2x16
normalize
dPdxFine
dPdyFine
fwidthFine
dPdxCoarse
dPdyCoarse
fwidthCoarse
determinant
inverse
transpose
array length
EmitStreamVertex
EndStreamPrimitive
Bad unary op
node is still EOpNull!
Sequence
Linker Objects
Function Definition: 
Function Call: 
Function Parameters: 
Construct float
Construct double
Construct vec2
Construct vec3
Construct vec4
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct int
Construct ivec2
Construct ivec3
Construct ivec4
Construct uint
Construct uvec2
Construct uvec3
Construct uvec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3x2
Construct mat3
Construct mat3x4
Construct mat4x2
Construct mat4x3
Construct mat4
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3x2
Construct dmat3
Construct dmat3x4
Construct dmat4x2
Construct dmat4x3
Construct dmat4
Construct structure
NotEqual
smoothstep
distance
dot-product
cross-product
face-forward
reflect
refract
outer product
EmitVertex
EndPrimitive
Barrier
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
GroupMemoryBarrier
imageQuerySize
imageQuerySamples
imageLoad
imageStore
imageAtomicAdd
imageAtomicMin
imageAtomicMax
imageAtomicAnd
imageAtomicOr
imageAtomicXor
imageAtomicExchange
imageAtomicCompSwap
textureSize
textureQueryLod
textureQueryLevels
textureSamples
textureProj
textureLod
textureOffset
textureFetch
textureFetchOffset
textureProjOffset
textureLodOffset
textureProjLod
textureProjLodOffset
textureGrad
textureGradOffset
textureProjGrad
textureProjGradOffset
textureGather
textureGatherOffset
textureGatherOffsets
Bad aggregation op
Test condition and select
Condition
true case
true case is null
false case
const bool
const int
%d (%s)
const uint
%u (%s)
Unknown constant
Constant:
Loop with condition 
tested first
Loop Condition
No loop condition
Loop Body
No loop body
Loop Terminal Expression
Branch: Kill
Branch: Break
Branch: Continue
Branch: Return
default: 
Branch: Unknown Branch
 with expression
condition
Shader version: 
Requested 
in xfb mode
vertices = 
input primitive = 
vertex spacing = 
triangle order = 
using point mode
invocations = 
max_vertices = 
output primitive = 
gl_FragCoord pixel center is integer
gl_FragCoord origin is upper left
using early_fragment_tests
local_size = (
Linking 
 stage: 
Cannot mix ES profile with non-ES profile shaders
gl_FragCoord redeclarations must match across shaders
Contradictory depth layouts
Contradictory input layout primitives
Contradictory output layout primitives
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory input vertex spacing
Contradictory triangle ordering
Contradictory local size
Contradictory xfb_stride
Multiple function bodies in multiple compilation units for the same signature in the same stage:
Types must match:
Storage qualifiers must match:
Precision qualifiers must match:
Presence of invariant qualifier must match:
Interpolation and auxiliary storage qualifiers must match:
Memory qualifiers must match:
Layout qualification must match:
Initializers must match:
" versus "
Missing entry point: Each stage requires one "void main()" entry point
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred)
gl_FragColor
gl_FragData
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Cannot use both gl_FragColor and gl_FragData
xfb_stride is too small to hold all buffer entries:
    xfb_buffer 
, xfb_stride 
, minimum stride needed: 
xfb_stride must be multiple of 8 for buffer holding a double:
xfb_stride must be multiple of 4:
xfb_stride is too large:
, components (1/4 stride) needed are 
, gl_MaxTransformFeedbackInterleavedComponents is 
At least one shader must specify an output layout(vertices=...)
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify a layout(max_vertices = value)
Unknown Stage.
Recursion detected:
 calling 
when more than one fragment shader output, all must have location qualifiers
continue
default
discard
samplerCube
varying
coherent
restrict
readonly
writeonly
volatile
subroutine
precision
dmat2x2
dmat2x3
dmat2x4
dmat3x2
dmat3x3
dmat3x4
dmat4x2
dmat4x3
dmat4x4
image1D
iimage1D
uimage1D
image2D
iimage2D
uimage2D
image3D
iimage3D
uimage3D
image2DRect
iimage2DRect
uimage2DRect
imageCube
iimageCube
uimageCube
imageBuffer
iimageBuffer
uimageBuffer
image1DArray
iimage1DArray
uimage1DArray
image2DArray
iimage2DArray
uimage2DArray
imageCubeArray
iimageCubeArray
uimageCubeArray
image2DMS
iimage2DMS
uimage2DMS
image2DMSArray
iimage2DMSArray
uimage2DMSArray
samplerCubeArray
samplerCubeArrayShadow
isamplerCubeArray
usamplerCubeArray
sampler1DArrayShadow
isampler1DArray
usampler1D
isampler1D
usampler1DArray
samplerBuffer
samplerCubeShadow
sampler2DArray
sampler2DArrayShadow
isampler2D
isampler3D
isamplerCube
isampler2DArray
usampler2D
usampler3D
usamplerCube
usampler2DArray
isampler2DRect
usampler2DRect
isamplerBuffer
usamplerBuffer
sampler2DMS
isampler2DMS
usampler2DMS
sampler2DMSArray
isampler2DMSArray
usampler2DMSArray
sampler1DShadow
sampler2DShadow
sampler2DRect
sampler2DRectShadow
sampler1DArray
samplerExternalOES
precise
invariant
resource
partition
typedef
template
noinline
external
interface
unsigned
sampler3DRect
namespace
illegal use of escape character
unexpected token
texture-rectangle sampler keyword
Unknown glslang keyword
Reserved word.
using future reserved keyword
future reserved word in ES 300 and keyword in GLSL
using future keyword
using ES precision qualifier keyword
using future non-square matrix type keyword
using future type keyword
pre-mature EOF
optimize
#pragma
optimize pragma syntax is incorrect
"(" expected after 'optimize' keyword
"on" or "off" expected after '(' for 'optimize' pragma
")" expected to end 'optimize' pragma
debug pragma syntax is incorrect
"(" expected after 'debug' keyword
"on" or "off" expected after '(' for 'debug' pragma
")" expected to end 'debug' pragma
illegal vector field selection
vector field selection out of range
illegal - vector component fields not from the same set
member of nameless block was not redeclared
variable name expected
 left of '[' is not of type array, matrix, or vector 
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must be redeclared with a size before being indexed with a variable
variable indexing block array
variable indexing fragment shader ouput array
variable indexing sampler array
index out of range '%d'
array index out of range '%d'
vector index out of range '%d'
matrix index out of range '%d'
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
type must be an array:
vertices
inconsistent input primitive for array size of
inconsistent output number of vertices for array size of
.length
.length() on vectors and matrices
does not operate on this type:
cannot apply to an array:
scalar swizzle
no such field in structure
does not apply to this type:
local function declaration
redefinition of built-in function
multiple prototypes for same function
overloaded functions must have the same return type
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same parameter precision qualifiers for argument
array in function return type
function name is redeclaration of existing name
can't find function
function already has a body
function cannot take any parameter(s)
main function cannot return a value
redefinition
cannot construct with these arguments
Non-L-value cannot be passed for 'out' or 'inout' parameters.
argument cannot drop memory qualifier when passed to formal parameter
built in unary operator function.  Type: %s
Internal Error
 wrong operand type
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main()
tessellation control barrier() cannot be placed after a return from main()
method does not accept any arguments
array must first be sized by a redeclaration or layout qualifier
array must be declared with a size before using this method
unexpected use of .length()
.length()
tempReturn
tempArg
offsets argument
must be a compile-time constant:
component argument
must be 0, 1, 2, or 3:
texelFetchOffset
texel offset
argument must be compile-time constant
[gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
value is out of range:
imageSamples
textureSamples and imageSamples
imageAtomic
only supported on image with format r32i or r32ui
only supported on integer images
arrayed constructor
cannot construct this type
cannot convert from '%s' to '%s'
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion)
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion)
 wrong operand types:
undeclared identifier
 l-value of swizzle cannot have duplicate components
 l-value required
can't modify a const
can't modify shader input
can't modify gl_InstanceID
can't modify gl_VertexID
can't modify gl_FrontFace
can't modify gl_FragCoord
can't modify gl_PointCoord
can't modify a uniform
can't modify a readonly buffer
can't modify a sampler
can't modify an atomic_uint
can't modify void
"%s" (%s)
can't read from writeonly object: 
constant expression required
scalar integer expression required
not allowed in nested scope
identifiers starting with "gl_" are reserved
identifiers containing consecutive underscores ("__") are reserved
names beginning with "GL_" can't be (un)defined:
__LINE__
__FILE__
__VERSION__
predefined names can't be (un)defined:
names containing consecutive underscores are reserved:
line continuation
used at end of comment; the following line is still part of the comment
used at end of comment, but this version does not provide line continuation
not allowed in this version
constructor
array constructor needs one argument per array element
constructing from a non-dereferenced array
constructing matrix from matrix
matrix constructed from matrix can only have one argument
too many arguments
Number of constructor parameters does not match the number of structure fields
not enough data provided for construction
constructor argument does not have a type
cannot convert a sampler
cannot convert an atomic_uint
cannot convert a void
illegal use of type 'void'
boolean expression expected
non-uniform struct contains a sampler or image:
sampler/image types can only be used in uniform variables or function parameters:
non-uniform struct contains an atomic_uint:
atomic_uints can only be used in uniform variables or function parameters:
in for stage inputs
out for stage outputs
cannot use 'inout' at global scope
memory qualifiers cannot be used on this type
buffers can be declared only as blocks
cannot be bool
shader input/output
must be qualified as flat
cannot use interpolation qualifiers with patch
cannot be a structure or array
vertex input arrays
vertex input cannot be further qualified
can only use on output in tessellation-control shader
fragment-shader struct input
fragment-shader struct input containing structure
fragment-shader struct input containing an array
global storage input qualifier cannot be used in a compute shader
vertex-shader struct output
vertex-shader struct output containing structure
vertex-shader struct output containing an array
can only use on input in tessellation-evaluation shader
fragment shader output
cannot be a structure
cannot be a matrix
global storage output qualifier cannot be used in a compute shader
can only have one auxiliary qualifier (centroid, patch, and sample)
can only have one interpolation qualifier (flat, smooth, noperspective)
invariant qualifier must appear first
interpolation qualifiers must appear before storage and precision qualifiers
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
precision qualifier must appear as last qualifier
in/out must appear before const
too many storage qualifiers
only one precision qualifier allowed
replicated qualifiers
can only apply highp to atomic_uint
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
atomic counters can only be highp
substituting 'mediump'
type requires declaration of default precision qualifier
type cannot have precision qualifier
samplers and atomic_uints cannot be output parameters
array size must be a constant integer expression
array size must be a positive integer
const array
vertex-shader array-of-array output
vertex-shader array-of-struct output
fragment-shader array-of-array input
fragment-shader array-of-struct input
array size required
arrays of arrays
cannot redeclare a user-block member array
array variable name expected
redeclaring non-array as array
redeclaration of array with size
redeclaration of array with a different type
variables with qualifier 'const' must be initialized
gl_FogFragCoord
gl_FrontColor
gl_BackColor
gl_FrontSecondaryColor
gl_BackSecondaryColor
gl_SecondaryColor
gl_Color
gl_TexCoord
cannot redeclare after use
redeclaration
cannot apply layout qualifier to
cannot change storage, memory, or auxiliary qualification of
cannot change interpolation qualification of
cannot change qualification of
can only change layout qualification of
cannot change input storage qualification of
cannot redeclare with different qualification:
cannot change output storage qualification of
all redeclarations must use the same depth layout on
built-in block redeclaration
gl_PerVertex
gl_PerFragment
block declaration
cannot redeclare block: 
cannot redeclare a built-in block with a user name
no declaration found for redeclaration
can only redeclare a built-in block once, and before any use
cannot redeclare a non block as a block
cannot redeclare block member with a different type
cannot change arrayness of redeclared block member
cannot change array size of redeclared block member
cannot add memory qualifier to redeclared block member
cannot add layout to redeclared block member
cannot add patch to redeclared block member
block redeclaration has extra members
cannot change arrayness of redeclared block
block already declared with size, can't redeclare as implicitly-sized
cannot change array size of redeclared block
storage qualifier not allowed on function parameter
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use layout qualifiers on a function parameter
cannot use invariant qualifier on a function parameter
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
can't use with samplers or structs containing samplers
cannot use storage or interpolation qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use layout qualifiers on structure members
cannot use invariant qualifier on structure members
limitations
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression"
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression"
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression"
gl_TexCoord array size
gl_MaxTextureCoords
gl_ClipDistance array size
gl_MaxClipDistances
%s (%d)
must be less than
image load-store format
image load store
origin_upper_left
pixel_center_integer
early_fragment_tests
depth layout qualifier
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4)
layout-id value
non-literal layout-id value
cannot be negative
uniform offset
uniform buffer-member align
must be a power of 2
location
location is too large
set is too large
binding
binding is too large
component
component is too large
transform feedback qualifier
xfb_buffer
gl_MaxTransformFeedbackBuffers is %d
buffer is too large:
internal max is %d
xfb_offset
offset is too large:
xfb_stride
gl_MaxTransformFeedbackInterleavedComponents is %d
1/4 stride is too large:
stride is too large:
invocations
max_vertices
too large, must be less than gl_MaxGeometryOutputVertices
index layout qualifier on fragment output
local_size_x
local_size_y
local_size_z
there is no such layout identifier for this stage taking an assigned value
can only be used on variable declaration
cannot specify matrix layout on a variable declaration
cannot specify packing on a variable declaration
cannot specify on a variable declaration
too large for fragment output
type overflows the available 4 components
cannot apply to a matrix, structure, or block
location qualifier on in/out block
can only appy to uniform, buffer, in, or out storage qualifiers
overlapping use of location
fragment outputs sharing the same location must be the same basic type
offset %d in buffer %d
overlapping offsets at
type contains double; xfb_offset must be a multiple of 8
must be a multiple of size of first component
all stride settings must match for xfb buffer
requires block, or sampler/image, or atomic-counter type
(using array)
sampler binding not less than gl_MaxCombinedTextureImageUnits
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
layout(binding=X) is required
only applies to block members, not blocks
only apply to images
does not apply to floating point images
does not apply to signed integer images
does not apply to unsigned integer images
format requires readonly or writeonly memory qualifier
image variables not declared 'writeonly' must have a format layout qualifier
cannot apply layout qualifiers to a shared variable
must specify 'location' to use 'component'
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
can only be used on an output
can only be used with an explicit location
requires uniform or buffer storage qualifier
xfb layout qualifier
matrix or packing qualifiers can only be used on a uniform or buffer
offset/align can only be used on a uniform or buffer
can only apply to a standalone qualifier
local_size
atomic counters sharing the same offset:
can't use function syntax on variable
no matching overloaded function found
ambiguous function signature match: multiple signatures match under implicit type conversion
atomic_uint binding is too large
useless application of layout qualifier
initializer
layout qualifier
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply depth layout to gl_FragDepth
cannot change the type of
initializer requires a variable, not a member
 cannot initialize this type of qualifier 
array initializer
uniform initializers must be constant
global const initializers must be constant
non-constant initializer
non-constant global initializer
non-matching or non-convertible constant type for const initializer
initializer list
wrong number of structure members
wrong number of matrix columns:
wrong vector size (or rows in a matrix column):
unexpected initializer-list type:
unsupported construction
can't convert
cannot convert parameter %d from '%s' to '%s'
uniform block
buffer block
input block
cannot declare an input block in a vertex shader
output block
cannot declare an output block in a fragment shader
only uniform, buffer, in, or out blocks are supported
member storage qualifier cannot contradict block storage qualifier
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
only the last member of a buffer block can be run-time sized
implicitly-sized array in a block
offset on block member
member of block cannot be a sampler type
offset/align
can only be used with std140 or std430 layout packing
member cannot contradict block
member cannot contradict block (or what block inherited from global)
member of block cannot have a packing layout qualifier
location on block member
can only use in an in/out block
Cannot reuse block name within the same interface:
block name cannot redefine a non-block name
nameless block contains a member that already has a name at global scope
block instance name redefinition
either the block needs a location, or all members need a location, or no members have a location
cannot apply to a block
must be a multiple of the member's alignment
cannot lie in previous members
identifier not previously declared
cannot re-qualify a function name
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot change qualification after use
unknown requalification
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to 'out'
cannot change previously set layout value
can only apply to 'in'
cannot change previously set input primitive
cannot apply to input
cannot change previously set output primitive
cannot apply to 'out'
cannot apply to:
cannot change previously set vertex spacing
cannot change previously set vertex order
cannot change previously set size
too large; see gl_MaxComputeWorkGroupSize
gl_WorkGroupSize
qualifier
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type)
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type)
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
cannot declare a default, include a type or full declaration
location/component/index
cannot declare a default, use a full declaration
cannot have statements before first case/default label
duplicate label
duplicated value
switch statements
condition must be a scalar integer expression
last case/default label not followed by statements
float radians(float degrees);vec2  radians(vec2  degrees);vec3  radians(vec3  degrees);vec4  radians(vec4  degrees);float degrees(float radians);vec2  degrees(vec2  radians);vec3  degrees(vec3  radians);vec4  degrees(vec4  radians);float sin(float angle);vec2  sin(vec2  angle);vec3  sin(vec3  angle);vec4  sin(vec4  angle);float cos(float angle);vec2  cos(vec2  angle);vec3  cos(vec3  angle);vec4  cos(vec4  angle);float tan(float angle);vec2  tan(vec2  angle);vec3  tan(vec3  angle);vec4  tan(vec4  angle);float asin(float x);vec2  asin(vec2  x);vec3  asin(vec3  x);vec4  asin(vec4  x);float acos(float x);vec2  acos(vec2  x);vec3  acos(vec3  x);vec4  acos(vec4  x);float atan(float y, float x);vec2  atan(vec2  y, vec2  x);vec3  atan(vec3  y, vec3  x);vec4  atan(vec4  y, vec4  x);float atan(float y_over_x);vec2  atan(vec2  y_over_x);vec3  atan(vec3  y_over_x);vec4  atan(vec4  y_over_x);
float sinh(float angle);vec2  sinh(vec2  angle);vec3  sinh(vec3  angle);vec4  sinh(vec4  angle);float cosh(float angle);vec2  cosh(vec2  angle);vec3  cosh(vec3  angle);vec4  cosh(vec4  angle);float tanh(float angle);vec2  tanh(vec2  angle);vec3  tanh(vec3  angle);vec4  tanh(vec4  angle);float asinh(float x);vec2  asinh(vec2  x);vec3  asinh(vec3  x);vec4  asinh(vec4  x);float acosh(float x);vec2  acosh(vec2  x);vec3  acosh(vec3  x);vec4  acosh(vec4  x);float atanh(float y_over_x);vec2  atanh(vec2  y_over_x);vec3  atanh(vec3  y_over_x);vec4  atanh(vec4  y_over_x);
float pow(float x, float y);vec2  pow(vec2  x, vec2  y);vec3  pow(vec3  x, vec3  y);vec4  pow(vec4  x, vec4  y);float exp(float x);vec2  exp(vec2  x);vec3  exp(vec3  x);vec4  exp(vec4  x);float log(float x);vec2  log(vec2  x);vec3  log(vec3  x);vec4  log(vec4  x);float exp2(float x);vec2  exp2(vec2  x);vec3  exp2(vec3  x);vec4  exp2(vec4  x);float log2(float x);vec2  log2(vec2  x);vec3  log2(vec3  x);vec4  log2(vec4  x);float sqrt(float x);vec2  sqrt(vec2  x);vec3  sqrt(vec3  x);vec4  sqrt(vec4  x);float inversesqrt(float x);vec2  inversesqrt(vec2  x);vec3  inversesqrt(vec3  x);vec4  inversesqrt(vec4  x);
float abs(float x);vec2  abs(vec2  x);vec3  abs(vec3  x);vec4  abs(vec4  x);float sign(float x);vec2  sign(vec2  x);vec3  sign(vec3  x);vec4  sign(vec4  x);float floor(float x);vec2  floor(vec2  x);vec3  floor(vec3  x);vec4  floor(vec4  x);float ceil(float x);vec2  ceil(vec2  x);vec3  ceil(vec3  x);vec4  ceil(vec4  x);float fract(float x);vec2  fract(vec2  x);vec3  fract(vec3  x);vec4  fract(vec4  x);float mod(float x, float y);vec2  mod(vec2  x, float y);vec3  mod(vec3  x, float y);vec4  mod(vec4  x, float y);vec2  mod(vec2  x, vec2  y);vec3  mod(vec3  x, vec3  y);vec4  mod(vec4  x, vec4  y);float min(float x, float y);vec2  min(vec2  x, float y);vec3  min(vec3  x, float y);vec4  min(vec4  x, float y);vec2  min(vec2  x, vec2  y);vec3  min(vec3  x, vec3  y);vec4  min(vec4  x, vec4  y);float max(float x, float y);vec2  max(vec2  x, float y);vec3  max(vec3  x, float y);vec4  max(vec4  x, float y);vec2  max(vec2  x, vec2  y);vec3  max(vec3  x, vec3  y);vec4  max(vec4  x, vec4  y);float clamp(float x, float minVal, float maxVal);vec2  clamp(vec2  x, float minVal, float maxVal);vec3  clamp(vec3  x, float minVal, float maxVal);vec4  clamp(vec4  x, float minVal, float maxVal);vec2  clamp(vec2  x, vec2  minVal, vec2  maxVal);vec3  clamp(vec3  x, vec3  minVal, vec3  maxVal);vec4  clamp(vec4  x, vec4  minVal, vec4  maxVal);float mix(float x, float y, float a);vec2  mix(vec2  x, vec2  y, float a);vec3  mix(vec3  x, vec3  y, float a);vec4  mix(vec4  x, vec4  y, float a);vec2  mix(vec2  x, vec2  y, vec2  a);vec3  mix(vec3  x, vec3  y, vec3  a);vec4  mix(vec4  x, vec4  y, vec4  a);float step(float edge, float x);vec2  step(vec2  edge, vec2  x);vec3  step(vec3  edge, vec3  x);vec4  step(vec4  edge, vec4  x);vec2  step(float edge, vec2  x);vec3  step(float edge, vec3  x);vec4  step(float edge, vec4  x);float smoothstep(float edge0, float edge1, float x);vec2  smoothstep(vec2  edge0, vec2  edge1, vec2  x);vec3  smoothstep(vec3  edge0, vec3  edge1, vec3  x);vec4  smoothstep(vec4  edge0, vec4  edge1, vec4  x);vec2  smoothstep(float edge0, float edge1, vec2  x);vec3  smoothstep(float edge0, float edge1, vec3  x);vec4  smoothstep(float edge0, float edge1, vec4  x);
  int abs(  int x);ivec2 abs(ivec2 x);ivec3 abs(ivec3 x);ivec4 abs(ivec4 x);  int sign(  int x);ivec2 sign(ivec2 x);ivec3 sign(ivec3 x);ivec4 sign(ivec4 x);float trunc(float x);vec2  trunc(vec2  x);vec3  trunc(vec3  x);vec4  trunc(vec4  x);float round(float x);vec2  round(vec2  x);vec3  round(vec3  x);vec4  round(vec4  x);float roundEven(float x);vec2  roundEven(vec2  x);vec3  roundEven(vec3  x);vec4  roundEven(vec4  x);float modf(float, out float);vec2  modf(vec2,  out vec2 );vec3  modf(vec3,  out vec3 );vec4  modf(vec4,  out vec4 );  int min(int    x, int y);ivec2 min(ivec2  x, int y);ivec3 min(ivec3  x, int y);ivec4 min(ivec4  x, int y);ivec2 min(ivec2  x, ivec2  y);ivec3 min(ivec3  x, ivec3  y);ivec4 min(ivec4  x, ivec4  y); uint min(uint   x, uint y);uvec2 min(uvec2  x, uint y);uvec3 min(uvec3  x, uint y);uvec4 min(uvec4  x, uint y);uvec2 min(uvec2  x, uvec2  y);uvec3 min(uvec3  x, uvec3  y);uvec4 min(uvec4  x, uvec4  y);  int max(int    x, int y);ivec2 max(ivec2  x, int y);ivec3 max(ivec3  x, int y);ivec4 max(ivec4  x, int y);ivec2 max(ivec2  x, ivec2  y);ivec3 max(ivec3  x, ivec3  y);ivec4 max(ivec4  x, ivec4  y); uint max(uint   x, uint y);uvec2 max(uvec2  x, uint y);uvec3 max(uvec3  x, uint y);uvec4 max(uvec4  x, uint y);uvec2 max(uvec2  x, uvec2  y);uvec3 max(uvec3  x, uvec3  y);uvec4 max(uvec4  x, uvec4  y);int    clamp(int x, int minVal, int maxVal);ivec2  clamp(ivec2  x, int minVal, int maxVal);ivec3  clamp(ivec3  x, int minVal, int maxVal);ivec4  clamp(ivec4  x, int minVal, int maxVal);ivec2  clamp(ivec2  x, ivec2  minVal, ivec2  maxVal);ivec3  clamp(ivec3  x, ivec3  minVal, ivec3  maxVal);ivec4  clamp(ivec4  x, ivec4  minVal, ivec4  maxVal);uint   clamp(uint x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uint minVal, uint maxVal);uvec3  clamp(uvec3  x, uint minVal, uint maxVal);uvec4  clamp(uvec4  x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uvec2  minVal, uvec2  maxVal);uvec3  clamp(uvec3  x, uvec3  minVal, uvec3  maxVal);uvec4  clamp(uvec4  x, uvec4  minVal, uvec4  maxVal);float mix(float x, float y, bool  a);vec2  mix(vec2  x, vec2  y, bvec2 a);vec3  mix(vec3  x, vec3  y, bvec3 a);vec4  mix(vec4  x, vec4  y, bvec4 a);bool  isnan(float x);bvec2 isnan(vec2  x);bvec3 isnan(vec3  x);bvec4 isnan(vec4  x);bool  isinf(float x);bvec2 isinf(vec2  x);bvec3 isinf(vec3  x);bvec4 isinf(vec4  x);
uint atomicAdd(coherent volatile inout uint, uint); int atomicAdd(coherent volatile inout  int,  int);uint atomicMin(coherent volatile inout uint, uint); int atomicMin(coherent volatile inout  int,  int);uint atomicMax(coherent volatile inout uint, uint); int atomicMax(coherent volatile inout  int,  int);uint atomicAnd(coherent volatile inout uint, uint); int atomicAnd(coherent volatile inout  int,  int);uint atomicOr (coherent volatile inout uint, uint); int atomicOr (coherent volatile inout  int,  int);uint atomicXor(coherent volatile inout uint, uint); int atomicXor(coherent volatile inout  int,  int);uint atomicExchange(coherent volatile inout uint, uint); int atomicExchange(coherent volatile inout  int,  int);uint atomicCompSwap(coherent volatile inout uint, uint, uint); int atomicCompSwap(coherent volatile inout  int,  int,  int);
int    mix(int    x, int    y, bool  a);ivec2  mix(ivec2  x, ivec2  y, bvec2 a);ivec3  mix(ivec3  x, ivec3  y, bvec3 a);ivec4  mix(ivec4  x, ivec4  y, bvec4 a);uint   mix(uint   x, uint   y, bool  a);uvec2  mix(uvec2  x, uvec2  y, bvec2 a);uvec3  mix(uvec3  x, uvec3  y, bvec3 a);uvec4  mix(uvec4  x, uvec4  y, bvec4 a);bool   mix(bool   x, bool   y, bool  a);bvec2  mix(bvec2  x, bvec2  y, bvec2 a);bvec3  mix(bvec3  x, bvec3  y, bvec3 a);bvec4  mix(bvec4  x, bvec4  y, bvec4 a);
int   floatBitsToInt(float value);ivec2 floatBitsToInt(vec2  value);ivec3 floatBitsToInt(vec3  value);ivec4 floatBitsToInt(vec4  value);uint  floatBitsToUint(float value);uvec2 floatBitsToUint(vec2  value);uvec3 floatBitsToUint(vec3  value);uvec4 floatBitsToUint(vec4  value);float intBitsToFloat(int   value);vec2  intBitsToFloat(ivec2 value);vec3  intBitsToFloat(ivec3 value);vec4  intBitsToFloat(ivec4 value);float uintBitsToFloat(uint  value);vec2  uintBitsToFloat(uvec2 value);vec3  uintBitsToFloat(uvec3 value);vec4  uintBitsToFloat(uvec4 value);
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );
highp float frexp(highp float, out highp int);highp vec2  frexp(highp vec2,  out highp ivec2);highp vec3  frexp(highp vec3,  out highp ivec3);highp vec4  frexp(highp vec4,  out highp ivec4);highp float ldexp(highp float, highp int);highp vec2  ldexp(highp vec2,  highp ivec2);highp vec3  ldexp(highp vec3,  highp ivec3);highp vec4  ldexp(highp vec4,  highp ivec4);
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);
highp uint packUnorm2x16(vec2);highp vec2 unpackUnorm2x16(highp uint);
highp uint packSnorm2x16(vec2);highp vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(mediump vec2);mediump vec2 unpackHalf2x16(highp uint);
highp   uint packSnorm4x8  (mediump vec4);mediump vec4 unpackSnorm4x8(highp   uint);highp   uint packUnorm4x8  (mediump vec4);mediump vec4 unpackUnorm4x8(highp   uint);
float length(float x);float length(vec2  x);float length(vec3  x);float length(vec4  x);float distance(float p0, float p1);float distance(vec2  p0, vec2  p1);float distance(vec3  p0, vec3  p1);float distance(vec4  p0, vec4  p1);float dot(float x, float y);float dot(vec2  x, vec2  y);float dot(vec3  x, vec3  y);float dot(vec4  x, vec4  y);vec3 cross(vec3 x, vec3 y);float normalize(float x);vec2  normalize(vec2  x);vec3  normalize(vec3  x);vec4  normalize(vec4  x);float faceforward(float N, float I, float Nref);vec2  faceforward(vec2  N, vec2  I, vec2  Nref);vec3  faceforward(vec3  N, vec3  I, vec3  Nref);vec4  faceforward(vec4  N, vec4  I, vec4  Nref);float reflect(float I, float N);vec2  reflect(vec2  I, vec2  N);vec3  reflect(vec3  I, vec3  N);vec4  reflect(vec4  I, vec4  N);float refract(float I, float N, float eta);vec2  refract(vec2  I, vec2  N, float eta);vec3  refract(vec3  I, vec3  N, float eta);vec4  refract(vec4  I, vec4  N, float eta);
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);
bvec2 lessThan(vec2 x, vec2 y);bvec3 lessThan(vec3 x, vec3 y);bvec4 lessThan(vec4 x, vec4 y);bvec2 lessThan(ivec2 x, ivec2 y);bvec3 lessThan(ivec3 x, ivec3 y);bvec4 lessThan(ivec4 x, ivec4 y);bvec2 lessThanEqual(vec2 x, vec2 y);bvec3 lessThanEqual(vec3 x, vec3 y);bvec4 lessThanEqual(vec4 x, vec4 y);bvec2 lessThanEqual(ivec2 x, ivec2 y);bvec3 lessThanEqual(ivec3 x, ivec3 y);bvec4 lessThanEqual(ivec4 x, ivec4 y);bvec2 greaterThan(vec2 x, vec2 y);bvec3 greaterThan(vec3 x, vec3 y);bvec4 greaterThan(vec4 x, vec4 y);bvec2 greaterThan(ivec2 x, ivec2 y);bvec3 greaterThan(ivec3 x, ivec3 y);bvec4 greaterThan(ivec4 x, ivec4 y);bvec2 greaterThanEqual(vec2 x, vec2 y);bvec3 greaterThanEqual(vec3 x, vec3 y);bvec4 greaterThanEqual(vec4 x, vec4 y);bvec2 greaterThanEqual(ivec2 x, ivec2 y);bvec3 greaterThanEqual(ivec3 x, ivec3 y);bvec4 greaterThanEqual(ivec4 x, ivec4 y);bvec2 equal(vec2 x, vec2 y);bvec3 equal(vec3 x, vec3 y);bvec4 equal(vec4 x, vec4 y);bvec2 equal(ivec2 x, ivec2 y);bvec3 equal(ivec3 x, ivec3 y);bvec4 equal(ivec4 x, ivec4 y);bvec2 equal(bvec2 x, bvec2 y);bvec3 equal(bvec3 x, bvec3 y);bvec4 equal(bvec4 x, bvec4 y);bvec2 notEqual(vec2 x, vec2 y);bvec3 notEqual(vec3 x, vec3 y);bvec4 notEqual(vec4 x, vec4 y);bvec2 notEqual(ivec2 x, ivec2 y);bvec3 notEqual(ivec3 x, ivec3 y);bvec4 notEqual(ivec4 x, ivec4 y);bvec2 notEqual(bvec2 x, bvec2 y);bvec3 notEqual(bvec3 x, bvec3 y);bvec4 notEqual(bvec4 x, bvec4 y);bool any(bvec2 x);bool any(bvec3 x);bool any(bvec4 x);bool all(bvec2 x);bool all(bvec3 x);bool all(bvec4 x);bvec2 not(bvec2 x);bvec3 not(bvec3 x);bvec4 not(bvec4 x);
bvec2 lessThan(uvec2 x, uvec2 y);bvec3 lessThan(uvec3 x, uvec3 y);bvec4 lessThan(uvec4 x, uvec4 y);bvec2 lessThanEqual(uvec2 x, uvec2 y);bvec3 lessThanEqual(uvec3 x, uvec3 y);bvec4 lessThanEqual(uvec4 x, uvec4 y);bvec2 greaterThan(uvec2 x, uvec2 y);bvec3 greaterThan(uvec3 x, uvec3 y);bvec4 greaterThan(uvec4 x, uvec4 y);bvec2 greaterThanEqual(uvec2 x, uvec2 y);bvec3 greaterThanEqual(uvec3 x, uvec3 y);bvec4 greaterThanEqual(uvec4 x, uvec4 y);bvec2 equal(uvec2 x, uvec2 y);bvec3 equal(uvec3 x, uvec3 y);bvec4 equal(uvec4 x, uvec4 y);bvec2 notEqual(uvec2 x, uvec2 y);bvec3 notEqual(uvec3 x, uvec3 y);bvec4 notEqual(uvec4 x, uvec4 y);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);
uint atomicCounterIncrement(atomic_uint x);uint atomicCounterDecrement(atomic_uint x);uint atomicCounter(atomic_uint x);
 uint uaddCarry( uint,  uint, out  uint carry);uvec2 uaddCarry(uvec2, uvec2, out uvec2 carry);uvec3 uaddCarry(uvec3, uvec3, out uvec3 carry);uvec4 uaddCarry(uvec4, uvec4, out uvec4 carry); uint usubBorrow( uint,  uint, out  uint borrow);uvec2 usubBorrow(uvec2, uvec2, out uvec2 borrow);uvec3 usubBorrow(uvec3, uvec3, out uvec3 borrow);uvec4 usubBorrow(uvec4, uvec4, out uvec4 borrow);void umulExtended( uint,  uint, out  uint, out  uint lsb);void umulExtended(uvec2, uvec2, out uvec2, out uvec2 lsb);void umulExtended(uvec3, uvec3, out uvec3, out uvec3 lsb);void umulExtended(uvec4, uvec4, out uvec4, out uvec4 lsb);void imulExtended(  int,   int, out   int, out   int lsb);void imulExtended(ivec2, ivec2, out ivec2, out ivec2 lsb);void imulExtended(ivec3, ivec3, out ivec3, out ivec3 lsb);void imulExtended(ivec4, ivec4, out ivec4, out ivec4 lsb);  int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);  int bitfieldReverse(  int);ivec2 bitfieldReverse(ivec2);ivec3 bitfieldReverse(ivec3);ivec4 bitfieldReverse(ivec4); uint bitfieldReverse( uint);uvec2 bitfieldReverse(uvec2);uvec3 bitfieldReverse(uvec3);uvec4 bitfieldReverse(uvec4);  int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);  int findMSB(  int);ivec2 findMSB(ivec2);ivec3 findMSB(ivec3);ivec4 findMSB(ivec4);  int findMSB( uint);ivec2 findMSB(uvec2);ivec3 findMSB(uvec3);ivec4 findMSB(uvec4);
vec4 ftransform();
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);
void EmitStreamVertex(int);void EndStreamPrimitive(int);
void EmitVertex();void EndPrimitive();
void barrier();
void memoryBarrier();
void memoryBarrierAtomicCounter();void memoryBarrierBuffer();void memoryBarrierImage();
void memoryBarrierShared();void groupMemoryBarrier();
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);
float dFdx(float p);vec2  dFdx(vec2  p);vec3  dFdx(vec3  p);vec4  dFdx(vec4  p);float dFdy(float p);vec2  dFdy(vec2  p);vec3  dFdy(vec3  p);vec4  dFdy(vec4  p);float fwidth(float p);vec2  fwidth(vec2  p);vec3  fwidth(vec3  p);vec4  fwidth(vec4  p);
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);
float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p);
struct gl_DepthRangeParameters {
highp float near;highp float far;highp float diff;
float near;float far;float diff;
};uniform gl_DepthRangeParameters gl_DepthRange;
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;
in uvec3 gl_NumWorkGroups;const uvec3 gl_WorkGroupSize = uvec3(1,1,1);in uvec3 gl_WorkGroupID;in uvec3 gl_LocalInvocationID;in uvec3 gl_GlobalInvocationID;in uint gl_LocalInvocationIndex;
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;
        vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
    vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;
vec4 gl_Position;float gl_PointSize;
out float gl_ClipDistance[];
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord;
float gl_CullDistance[];
int gl_VertexID;
int gl_InstanceID;
highp   vec4  gl_Position;mediump float gl_PointSize;
highp int gl_VertexID;highp int gl_InstanceID;highp vec4  gl_Position;highp float gl_PointSize;
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
};out int gl_PrimitiveID;out int gl_Layer;
out vec4 gl_ClipVertex;
in int gl_InvocationID;
out int gl_ViewportIndex;
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth;
vec2 gl_PointCoord;
vec4 gl_FragColor;
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
in float gl_ClipDistance[];
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;};
flat in int gl_PrimitiveID;
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;flat in  int  gl_SampleMaskIn[];     out int  gl_SampleMask[];
flat in int gl_Layer;flat in int gl_ViewportIndex;
in float gl_CullDistance[];bool gl_HelperInvocation;
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth;
bool  gl_HelperInvocation;
highp float gl_FragDepthEXT;
 imageSize(readonly writeonly volatile coherent 
 textureSize(
imageSamples(readonly writeonly volatile coherent 
textureSamples(
vec4 imageLoad(readonly volatile coherent 
void imageStore(writeonly volatile coherent 
 imageAtomicAdd(volatile coherent 
 imageAtomicMin(volatile coherent 
 imageAtomicMax(volatile coherent 
 imageAtomicAnd(volatile coherent 
 imageAtomicOr(volatile coherent 
 imageAtomicXor(volatile coherent 
 imageAtomicExchange(volatile coherent 
 imageAtomicCompSwap(volatile coherent 
float imageAtomicExchange(volatile coherent 
, float);
,float,float
Offsets
const mediump int  gl_MaxVertexAttribs = %d;
const mediump int  gl_MaxVertexUniformVectors = %d;
const mediump int  gl_MaxVertexTextureImageUnits = %d;
const mediump int  gl_MaxCombinedTextureImageUnits = %d;
const mediump int  gl_MaxTextureImageUnits = %d;
const mediump int  gl_MaxFragmentUniformVectors = %d;
const mediump int  gl_MaxDrawBuffers = %d;
const mediump int  gl_MaxVaryingVectors = %d;
const mediump int  gl_MaxVertexOutputVectors = %d;
const mediump int  gl_MaxFragmentInputVectors = %d;
const mediump int  gl_MinProgramTexelOffset = %d;
const mediump int  gl_MaxProgramTexelOffset = %d;
const int  gl_MaxVertexAttribs = %d;
const int  gl_MaxVertexTextureImageUnits = %d;
const int  gl_MaxCombinedTextureImageUnits = %d;
const int  gl_MaxTextureImageUnits = %d;
const int  gl_MaxDrawBuffers = %d;
const int  gl_MaxLights = %d;
const int  gl_MaxClipPlanes = %d;
const int  gl_MaxTextureUnits = %d;
const int  gl_MaxTextureCoords = %d;
const int  gl_MaxVertexUniformComponents = %d;
const int  gl_MaxVaryingFloats = %d;
const int  gl_MaxFragmentUniformComponents = %d;
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords];
const int gl_MaxClipDistances = %d;
const int gl_MaxVaryingComponents = %d;
const int gl_MaxGeometryInputComponents = %d;
const int gl_MaxGeometryOutputComponents = %d;
const int gl_MaxGeometryTextureImageUnits = %d;
const int gl_MaxGeometryOutputVertices = %d;
const int gl_MaxGeometryTotalOutputComponents = %d;
const int gl_MaxGeometryUniformComponents = %d;
const int gl_MaxGeometryVaryingComponents = %d;
const int gl_MaxVertexOutputComponents = %d;
const int gl_MaxFragmentInputComponents = %d;
const int gl_MaxTessControlInputComponents = %d;
const int gl_MaxTessControlOutputComponents = %d;
const int gl_MaxTessControlTextureImageUnits = %d;
const int gl_MaxTessControlUniformComponents = %d;
const int gl_MaxTessControlTotalOutputComponents = %d;
const int gl_MaxTessEvaluationInputComponents = %d;
const int gl_MaxTessEvaluationOutputComponents = %d;
const int gl_MaxTessEvaluationTextureImageUnits = %d;
const int gl_MaxTessEvaluationUniformComponents = %d;
const int gl_MaxTessPatchComponents = %d;
const int gl_MaxTessGenLevel = %d;
const int gl_MaxPatchVertices = %d;
} gl_in[gl_MaxPatchVertices];
const int gl_MaxViewports = %d;
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d;
const int gl_MaxImageSamples = %d;
const int gl_MaxTessControlImageUniforms = %d;
const int gl_MaxTessEvaluationImageUniforms = %d;
const int gl_MaxGeometryImageUniforms = %d;
const int gl_MaxTransformFeedbackBuffers = %d;
const int gl_MaxTransformFeedbackInterleavedComponents = %d;
const int gl_MaxImageUnits = %d;
const int gl_MaxCombinedShaderOutputResources = %d;
const int gl_MaxVertexImageUniforms = %d;
const int gl_MaxFragmentImageUniforms = %d;
const int gl_MaxCombinedImageUniforms = %d;
const int gl_MaxVertexAtomicCounters = %d;
const int gl_MaxFragmentAtomicCounters = %d;
const int gl_MaxCombinedAtomicCounters = %d;
const int gl_MaxAtomicCounterBindings = %d;
const int gl_MaxVertexAtomicCounterBuffers = %d;
const int gl_MaxFragmentAtomicCounterBuffers = %d;
const int gl_MaxCombinedAtomicCounterBuffers = %d;
const int gl_MaxAtomicCounterBufferSize = %d;
const int gl_MaxTessControlAtomicCounters = %d;
const int gl_MaxTessEvaluationAtomicCounters = %d;
const int gl_MaxGeometryAtomicCounters = %d;
const int gl_MaxTessControlAtomicCounterBuffers = %d;
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d;
const int gl_MaxGeometryAtomicCounterBuffers = %d;
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d);
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d);
const int gl_MaxComputeUniformComponents = %d;
const int gl_MaxComputeTextureImageUnits = %d;
const int gl_MaxComputeImageUniforms = %d;
const int gl_MaxComputeAtomicCounters = %d;
const int gl_MaxComputeAtomicCounterBuffers = %d;
const int gl_MaxCullDistances = %d;
const int gl_MaxCombinedClipAndCullDistances = %d;
const int gl_MaxSamples = %d;
gl_Normal
gl_Vertex
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_FogCoord
gl_CullDistance
gl_PrimitiveIDIn
gl_PrimitiveID
gl_InvocationID
gl_PatchVerticesIn
gl_TessCoord
gl_FragDepthEXT
gl_HelperInvocation
gl_SamplePosition
gl_SampleMaskIn
gl_SampleMask
texture2DLodEXT
texture2DProjLodEXT
textureCubeLodEXT
texture1DLod
texture2DLod
texture3DLod
textureCubeLod
texture1DProjLod
texture2DProjLod
texture3DProjLod
shadow1DLod
shadow2DLod
shadow1DProjLod
shadow2DProjLod
texture1DGradARB
texture1DProjGradARB
texture2DGradARB
texture2DProjGradARB
texture3DGradARB
texture3DProjGradARB
textureCubeGradARB
shadow1DGradARB
shadow1DProjGradARB
shadow2DGradARB
shadow2DProjGradARB
texture2DRectGradARB
texture2DRectProjGradARB
shadow2DRectGradARB
shadow2DRectProjGradARB
texture2DGradEXT
texture2DProjGradEXT
textureCubeGradEXT
memoryBarrier
atomicCounterIncrement
atomicCounterDecrement
atomicCounter
dFdxFine
dFdyFine
dFdxCoarse
dFdyCoarse
gl_NumWorkGroups
gl_WorkGroupID
gl_LocalInvocationID
gl_GlobalInvocationID
gl_LocalInvocationIndex
matrixCompMult
outerProduct
notEqual
lessThan
greaterThan
lessThanEqual
greaterThanEqual
inversesqrt
faceforward
barrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
groupMemoryBarrier
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackInterleavedComponents
gl_MinProgramTexelOffset
gl_MaxProgramTexelOffset
gl_MaxViewports
float literal too long
bad character in float exponent
double floating-point suffix
float literal needs a decimal point or exponent
floating-point suffix
name too long
bad digit in hexidecimal literal
hexidecimal literal too big
numeric literal too long
octal literal digit too large
octal literal too big
numeric literal too big
comment
EOF in comment
end of line in string
preprocessor directive cannot be preceded by another token
string literals not supported
character literals not supported
missing #endif
inductive loop index modified
Non-constant-index-expression
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
	"	4	=	A	H	K	Q	Q	
$undefined
ATTRIBUTE
VARYING
CONTINUE
DISCARD
SUBROUTINE
CENTROID
UNIFORM
COHERENT
VOLATILE
RESTRICT
READONLY
WRITEONLY
NOPERSPECTIVE
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4X2
DMAT4X3
DMAT4X4
ATOMIC_UINT
SAMPLER1D
SAMPLER2D
SAMPLER3D
SAMPLERCUBE
SAMPLER1DSHADOW
SAMPLER2DSHADOW
SAMPLERCUBESHADOW
SAMPLER1DARRAY
SAMPLER2DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER2DARRAYSHADOW
ISAMPLER1D
ISAMPLER2D
ISAMPLER3D
ISAMPLERCUBE
ISAMPLER1DARRAY
ISAMPLER2DARRAY
USAMPLER1D
USAMPLER2D
USAMPLER3D
USAMPLERCUBE
USAMPLER1DARRAY
USAMPLER2DARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
ISAMPLER2DRECT
USAMPLER2DRECT
SAMPLERBUFFER
ISAMPLERBUFFER
USAMPLERBUFFER
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
ISAMPLERCUBEARRAY
USAMPLERCUBEARRAY
SAMPLER2DMS
ISAMPLER2DMS
USAMPLER2DMS
SAMPLER2DMSARRAY
ISAMPLER2DMSARRAY
USAMPLER2DMSARRAY
SAMPLEREXTERNALOES
IMAGE1D
IIMAGE1D
UIMAGE1D
IMAGE2D
IIMAGE2D
UIMAGE2D
IMAGE3D
IIMAGE3D
UIMAGE3D
IMAGE2DRECT
IIMAGE2DRECT
UIMAGE2DRECT
IMAGECUBE
IIMAGECUBE
UIMAGECUBE
IMAGEBUFFER
IIMAGEBUFFER
UIMAGEBUFFER
IMAGE1DARRAY
IIMAGE1DARRAY
UIMAGE1DARRAY
IMAGE2DARRAY
IIMAGE2DARRAY
UIMAGE2DARRAY
IMAGECUBEARRAY
IIMAGECUBEARRAY
UIMAGECUBEARRAY
IMAGE2DMS
IIMAGE2DMS
UIMAGE2DMS
IMAGE2DMSARRAY
IIMAGE2DMSARRAY
UIMAGE2DMSARRAY
IDENTIFIER
TYPE_NAME
FLOATCONSTANT
DOUBLECONSTANT
INTCONSTANT
UINTCONSTANT
BOOLCONSTANT
FIELD_SELECTION
LEFT_OP
RIGHT_OP
MUL_ASSIGN
DIV_ASSIGN
ADD_ASSIGN
MOD_ASSIGN
LEFT_ASSIGN
RIGHT_ASSIGN
AND_ASSIGN
XOR_ASSIGN
OR_ASSIGN
SUB_ASSIGN
LEFT_PAREN
RIGHT_PAREN
LEFT_BRACKET
RIGHT_BRACKET
LEFT_BRACE
RIGHT_BRACE
SEMICOLON
PERCENT
LEFT_ANGLE
RIGHT_ANGLE
VERTICAL_BAR
AMPERSAND
QUESTION
INVARIANT
PRECISE
HIGH_PRECISION
MEDIUM_PRECISION
LOW_PRECISION
PRECISION
RESOURCE
$accept
variable_identifier
primary_expression
postfix_expression
integer_expression
function_call
function_call_or_method
function_call_generic
function_call_header_no_parameters
function_call_header_with_parameters
function_call_header
function_identifier
unary_expression
unary_operator
multiplicative_expression
additive_expression
shift_expression
relational_expression
equality_expression
and_expression
exclusive_or_expression
inclusive_or_expression
logical_and_expression
logical_xor_expression
logical_or_expression
conditional_expression
assignment_expression
assignment_operator
constant_expression
declaration
block_structure
identifier_list
function_prototype
function_declarator
function_header_with_parameters
function_header
parameter_declarator
parameter_declaration
parameter_type_specifier
init_declarator_list
single_declaration
fully_specified_type
invariant_qualifier
interpolation_qualifier
layout_qualifier
layout_qualifier_id_list
layout_qualifier_id
precise_qualifier
type_qualifier
single_type_qualifier
storage_qualifier
type_name_list
type_specifier
array_specifier
type_specifier_nonarray
precision_qualifier
struct_specifier
struct_declaration_list
struct_declaration
struct_declarator_list
struct_declarator
initializer_list
declaration_statement
statement
simple_statement
compound_statement
statement_no_new_scope
statement_scoped
compound_statement_no_new_scope
statement_list
expression_statement
selection_statement
selection_rest_statement
condition
switch_statement
switch_statement_list
case_label
iteration_statement
for_init_statement
conditionopt
for_rest_statement
jump_statement
translation_unit
external_declaration
function_definition
token %s (
nterm %s (
Stack now
Reducing stack by rule %d (line %lu):
   $%d = 
Deleting
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
unsigned literal
double literal
function call, method, or subroutine call expected
incomplete method syntax
bitwise not
bit shift left
bit shift right
array comparison
bitwise exclusive or
bitwise inclusive or
array assignment
bit-shift left assign
bit-shift right assign
bitwise-and assign
bitwise-xor assign
bitwise-or assign
precision statement
cannot be an argument type except for '(void)'
no qualifiers allowed for function return
arrayed type
unsigned integer
double vector
unsigned integer vector
double matrix
expected type name
highp precision qualifier
mediump precision qualifier
lowp precision qualifier
duplicate member name:
{ } style initializers
cannot appear outside switch statement
cannot be nested inside control flow
limitation
while loops not available
do-while loops not available
continue statement only allowed in loops
break statement only allowed in switch and loops
non-void function must return a value
void function cannot return a value
type conversion on return values was not explicitly allowed until version 420
type does not match, or is not convertible to, the function's return type
function does not return a value:
-> $$ =
syntax error
Error: discarding
Error: popping
memory exhausted
Cleanup: discarding lookahead
Cleanup: popping
<null atom>
<invalid atom>
~!%^&*()-+=|,.<>/?;:[]{}#
defined
include
texunit
version
extension
#define
must be followed by macro name
bad argument
duplicate macro parameter
too many macro parameters
missing parenthesis
Macro redefined; different number of arguments:
Macro redefined; different argument names:
Macro redefined; different substitutions:
can only be followed by a single macro name
#elif after #else
#else after #else
unexpected tokens following directive
preprocessor evaluation
incorrect directive, expected identifier
expected ')'
bad expression
can't evaluate expression
undefined macro in expression not allowed in es profile
maximum nesting depth exceeded
#ifndef
unexpected tokens following #ifdef directive - expected a newline
must by followed by an integral literal
directive must end with a newline
must occur first in shader
must be followed by version number
bad profile name; use es, core, or compatibility
bad tokens following profile -- expected newline
extension name not specified
extension name expected
':' missing after extension name
behavior for extension not specified
extra tokens -- expected newline
mismatched statements
invalid directive:
invalid directive
macro expansion
expected '(' following
EOF in macro
end of line in macro substitution:
unexpected '#'
Too few args in Macro
Too many args in macro
token pasting (##)
token pasting not implemented (internal error)
token too long
GLSL stage
unknown glslang storage class
unknown sampler dimension
kind of block
uniform block layout
in/out block layout
block storage qualification
GLSL.std.450
createBinaryOperation
direct index without a constant node
block without member remapping
glslang binary operation
createBinaryOperation for unary
glslang unary
glslang function call
createBinaryOperation for aggregate
glslang aggregate
branch type
sampled type
array of void
basic type
Unsized array
ftransform(
ftransform()
glslang texture query
texel fetch
texture gather
built-in function call
binary operation on matrix
operation with no arguments
constant vector type
constant scalar type
deque<T> too long
unimplemented constant type
ID unused in module: 
ID already mapped: 
ID already used in module: 
Applying map: 
Remapping remainder: 
old ID not mapped: 
build local maps: 
nested function found
function end without function start
validating: 
file too short: 
bad magic number
bad schema, must be 0
spir instruction terminated too early
Removing Dead Functions: 
DCE Vars: 
type ID not found
unknown type opcode
Remapping Consts & Types: 
ID bound: 
invalid hash bucket count
TessellationControl
TessellationEvaluation
Geometry
Fragment
GLCompute
Logical
Physical32
Physical64
GLSL450
OpenCL1.2
OpenCL2.0
OpenCL2.1
Invocations
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
VertexOrderCw
VertexOrderCcw
PixelCenterInteger
OriginUpperLeft
EarlyFragmentTests
PointMode
DepthReplacing
DepthAny
DepthGreater
DepthLess
DepthUnchanged
LocalSize
LocalSizeHint
InputPoints
InputLines
InputLinesAdjacency
InputTriangles
InputTrianglesAdjacency
InputQuads
InputIsolines
OutputVertices
OutputPoints
OutputLineStrip
OutputTriangleStrip
VecTypeHint
ContractionOff
UniformConstant
Uniform
WorkgroupLocal
WorkgroupGlobal
PrivateGlobal
Function
Generic
Private
AtomicCounter
PrecisionLow
PrecisionMedium
PrecisionHigh
BufferBlock
RowMajor
ColMajor
GLSLShared
GLSLStd140
GLSLStd430
GLSLPacked
Noperspective
Centroid
Invariant
Restrict
Aliased
Volatile
Constant
Coherent
Nonwritable
Nonreadable
NoStaticUse
CPacked
SaturatedConversion
Location
Component
Binding
DescriptorSet
Alignment
XfbBuffer
BuiltIn
FuncParamAttr
FP Rounding Mode
FP Fast Math Mode
Linkage Attributes
PrimitiveId
InvocationId
FrontFacing
NumWorkgroups
WorkgroupSize
WorkgroupId
LocalInvocationId
GlobalInvocationId
WorkDim
GlobalSize
EnqueuedWorkgroupSize
GlobalOffset
GlobalLinearId
WorkgroupLinearId
SubgroupSize
SubgroupMaxSize
NumSubgroups
NumEnqueuedSubgroups
SubgroupId
SubgroupLocalInvocationId
ClampToEdge
RepeatMirrored
Nearest
AllowRecip
NoAlias
NoCapture
NoWrite
NoReadWrite
ReadOnly
WriteOnly
ReadWrite
Flatten
DontFlatten
DontUnroll
DontInline
Relaxed
SequentiallyConsistent
Acquire
UniformMemory
SubgroupMemory
WorkgroupLocalMemory
WorkgroupGlobalMemory
AtomicCounterMemory
ImageMemory
Aligned
CrossDevice
Workgroup
Subgroup
InclusiveScan
ExclusiveScan
WaitKernel
WaitWorkGroup
CmdExecTime
OpSource
OpSourceExtension
OpExtension
OpExtInstImport
OpMemoryModel
OpEntryPoint
OpExecutionMode
OpTypeVoid
OpTypeBool
OpTypeInt
OpTypeFloat
OpTypeVector
OpTypeMatrix
OpTypeSampler
OpTypeFilter
OpTypeArray
OpTypeRuntimeArray
OpTypeStruct
OpTypeOpaque
OpTypePointer
OpTypeFunction
OpTypeEvent
OpTypeDeviceEvent
OpTypeReserveId
OpTypeQueue
OpTypePipe
OpConstantTrue
OpConstantFalse
OpConstant
OpConstantComposite
OpConstantSampler
OpConstantNullPointer
OpConstantNullObject
OpSpecConstantTrue
OpSpecConstantFalse
OpSpecConstant
OpSpecConstantComposite
OpVariable
OpVariableArray
OpFunction
OpFunctionParameter
OpFunctionEnd
OpFunctionCall
OpExtInst
OpUndef
OpStore
OpDecorationGroup
OpDecorate
OpMemberDecorate
OpGroupDecorate
OpGroupMemberDecorate
OpMemberName
OpString
OpVectorExtractDynamic
OpVectorInsertDynamic
OpVectorShuffle
OpCompositeConstruct
OpCompositeExtract
OpCompositeInsert
OpCopyObject
OpCopyMemory
OpCopyMemorySized
OpSampler
OpTextureSample
OpTextureSampleDref
OpTextureSampleLod
OpTextureSampleProj
OpTextureSampleGrad
OpTextureSampleOffset
OpTextureSampleProjLod
OpTextureSampleProjGrad
OpTextureSampleLodOffset
OpTextureSampleProjOffset
OpTextureSampleGradOffset
OpTextureSampleProjLodOffset
OpTextureSampleProjGradOffset
OpTextureFetchTexelLod
OpTextureFetchTexelOffset
OpTextureFetchSample
OpTextureFetchTexel
OpTextureGather
OpTextureGatherOffset
OpTextureGatherOffsets
OpTextureQuerySizeLod
OpTextureQuerySize
OpTextureQueryLod
OpTextureQueryLevels
OpTextureQuerySamples
OpAccessChain
OpInBoundsAccessChain
OpSNegate
OpFNegate
OpConvertFToU
OpConvertFToS
OpConvertSToF
OpConvertUToF
OpUConvert
OpSConvert
OpFConvert
OpConvertPtrToU
OpConvertUToPtr
OpPtrCastToGeneric
OpGenericCastToPtr
OpBitcast
OpTranspose
OpIsNan
OpIsInf
OpIsFinite
OpIsNormal
OpSignBitSet
OpLessOrGreater
OpOrdered
OpUnordered
OpArrayLength
OpVectorTimesScalar
OpMatrixTimesScalar
OpVectorTimesMatrix
OpMatrixTimesVector
OpMatrixTimesMatrix
OpOuterProduct
OpShiftRightLogical
OpShiftRightArithmetic
OpShiftLeftLogical
OpLogicalOr
OpLogicalXor
OpLogicalAnd
OpBitwiseOr
OpBitwiseXor
OpBitwiseAnd
OpSelect
OpIEqual
OpFOrdEqual
OpFUnordEqual
OpINotEqual
OpFOrdNotEqual
OpFUnordNotEqual
OpULessThan
OpSLessThan
OpFOrdLessThan
OpFUnordLessThan
OpUGreaterThan
OpSGreaterThan
OpFOrdGreaterThan
OpFUnordGreaterThan
OpULessThanEqual
OpSLessThanEqual
OpFOrdLessThanEqual
OpFUnordLessThanEqual
OpUGreaterThanEqual
OpSGreaterThanEqual
OpFOrdGreaterThanEqual
OpFUnordGreaterThanEqual
OpFwidth
OpDPdxFine
OpDPdyFine
OpFwidthFine
OpDPdxCoarse
OpDPdyCoarse
OpFwidthCoarse
OpEmitVertex
OpEndPrimitive
OpEmitStreamVertex
OpEndStreamPrimitive
OpControlBarrier
OpMemoryBarrier
OpImagePointer
OpAtomicInit
OpAtomicLoad
OpAtomicStore
OpAtomicExchange
OpAtomicCompareExchange
OpAtomicCompareExchangeWeak
OpAtomicIIncrement
OpAtomicIDecrement
OpAtomicIAdd
OpAtomicISub
OpAtomicUMin
OpAtomicUMax
OpAtomicAnd
OpAtomicOr
OpAtomicXor
OpLoopMerge
OpSelectionMerge
OpLabel
OpBranch
OpBranchConditional
OpSwitch
OpReturn
OpReturnValue
OpUnreachable
OpLifetimeStart
OpLifetimeStop
OpCompileFlag
OpAsyncGroupCopy
OpWaitGroupEvents
OpGroupAll
OpGroupAny
OpGroupBroadcast
OpGroupIAdd
OpGroupFAdd
OpGroupFMin
OpGroupUMin
OpGroupSMin
OpGroupFMax
OpGroupUMax
OpGroupSMax
OpGenericCastToPtrExplicit
OpGenericPtrMemSemantics
OpReadPipe
OpWritePipe
OpReservedReadPipe
OpReservedWritePipe
OpReserveReadPipePackets
OpReserveWritePipePackets
OpCommitReadPipe
OpCommitWritePipe
OpIsValidReserveId
OpGetNumPipePackets
OpGetMaxPipePackets
OpGroupReserveReadPipePackets
OpGroupReserveWritePipePackets
OpGroupCommitReadPipe
OpGroupCommitWritePipe
OpEnqueueMarker
OpEnqueueKernel
OpGetKernelNDrangeSubGroupCount
OpGetKernelNDrangeMaxSubGroupSize
OpGetKernelWorkGroupSize
OpGetKernelPreferredWorkGroupSizeMultiple
OpRetainEvent
OpReleaseEvent
OpCreateUserEvent
OpIsValidEvent
OpSetUserEventStatus
OpCaptureEventProfilingInfo
OpGetDefaultQueue
OpBuildNDRange
OpSatConvertSToU
OpSatConvertUToS
OpAtomicIMin
OpAtomicIMax
Number of invocations
'x size'
'y size'
'z size'
Vertex count
Vector type
Stream number
Component within a vector
Binding point
Descriptor set
Byte offset
Declared alignment
XFB Buffer number
See <<BuiltIn,*BuiltIn*>>
floating-point rounding mode
fast-math mode
linkage type
function parameter attribute
Specialization Constant ID
'Version'
'Extension'
'Target'
'Member'
'String'
'Column'
'Entry Point'
See <<Execution Mode,Execution Mode>>
'Width'
'Signedness'
'Component type'
'Component count'
'Column type'
'Column count'
'Sampled Type'
'Content'
'Arrayed'
'Compare'
'Qualifier'
'Element type'
'Length'
'Member 0 type', +
'member 1 type', +
The name of the opaque type.
'Return Type'
'Parameter 0 Type', +
'Parameter 1 Type', +
'Value'
'Constituents'
'Param'
'Filter'
'Initializer'
'Function Type'
'Function'
'Argument 0', +
'Argument 1', +
'Instruction'
'Operand 1', +
'Operand 2', +
'Pointer'
'Memory Access'
'Object'
See <<Decoration,'Decoration'>>.
'Structure type'
'Decoration group'
'Target', 'Target', ...
'Vector'
'Index'
'Component'
'Vector 1'
'Vector 2'
'Components'
'Composite'
'Indexes'
'Operand'
'Source'
'Sampler'
'Coordinate'
['Bias']
'D~ref~'
'Level of Detail'
'Offset'
'Sample'
'Element'
'Offsets'
'Float Value'
'Signed Value'
'Unsigned value'
'Unsigned Value'
'Integer value'
'Source pointer'
'storage'
'Matrix'
'Structure'
'Array member'
'Operand 1'
'Operand 2'
'Scalar'
'LeftMatrix'
'RightMatrix'
'Condition'
'Object 1'
'Object 2'
'Stream'
'Scope'
'Semantics'
'Image'
'Comparator'
'Label'
'Target Label'
'True Label'
'False Label'
'Branch weights'
'Selector'
'Default'
'Destination'
'Num Elements'
'Stride'
'Event'
'Num Events'
'Events List'
'Predicate'
'LocalId'
'Operation'
'reserve_id'
'index'
'num_packets'
'GlobalWorkSize'
'LocalWorkSize'
'GlobalWorkOffset'
'event'
'value'
'status'
'Invoke'
'ND Range'
'flags'
'Wait Events'
'Ret Event'
'Param Size'
'Param Align'
'Local Size'
getMostBasicTypeClass
getNumTypeComponents on non bool/int/float/vector/matrix
getScalarTypeId
getContainedTypeId
Constant composite type in Builder
return value from main()
dummyReturn
storage class in createVariable
texture query dimensionality
Texture query op code
Composite comparison of non-vectors
aggregate in vector constructor
simultaneous l-value swizzle and dynamic component selection
indexable
Missing functionality: %s
tbaa.struct
invariant.load
///////////////
///////////
///////
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
zzzzzzz
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
zzzzJJJ,;JJ
JJJJJJJ
----<<<
zzzz{{{{||||
,,,,;;;
YYYYZZZZ,,,
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
rm.vcvtru.
rm.vcvtr.
rm.strex.
rm.neon.vst4lane.
rm.neon.vst4.
rm.neon.vst3lane.
rm.neon.vst3.
rm.neon.vst2lane.
rm.neon.vst2.
rm.neon.vst1.
rm.neon.vshiftu.
rm.neon.vshifts.
rm.neon.vshiftn.
rm.neon.vshiftlu.
rm.neon.vshiftls.
rm.neon.vshiftins.
rm.neon.vrsubhn.
rm.neon.vrsqrts.
rm.neon.vrsqrte.
rm.neon.vrshiftu.
rm.neon.vrshifts.
rm.neon.vrshiftn.
rm.neon.vrintz.
rm.neon.vrintx.
rm.neon.vrintp.
rm.neon.vrintn.
rm.neon.vrintm.
rm.neon.vrinta.
rm.neon.vrhaddu.
rm.neon.vrhadds.
rm.neon.vrecps.
rm.neon.vrecpe.
rm.neon.vraddhn.
rm.neon.vqsubu.
rm.neon.vqsubs.
rm.neon.vqshiftu.
rm.neon.vqshiftsu.
rm.neon.vqshifts.
rm.neon.vqshiftnu.
rm.neon.vqshiftnsu.
rm.neon.vqshiftns.
rm.neon.vqrshiftu.
rm.neon.vqrshifts.
rm.neon.vqrshiftnu.
rm.neon.vqrshiftnsu.
rm.neon.vqrshiftns.
rm.neon.vqrdmulh.
rm.neon.vqneg.
rm.neon.vqmovnu.
rm.neon.vqmovnsu.
rm.neon.vqmovns.
rm.neon.vqdmull.
rm.neon.vqdmulh.
rm.neon.vqaddu.
rm.neon.vqadds.
rm.neon.vqabs.
rm.neon.vpminu.
rm.neon.vpmins.
rm.neon.vpmaxu.
rm.neon.vpmaxs.
rm.neon.vpaddlu.
rm.neon.vpaddls.
rm.neon.vpadd.
rm.neon.vpadalu.
rm.neon.vpadals.
rm.neon.vmulp.
rm.neon.vmullu.
rm.neon.vmulls.
rm.neon.vmullp.
rm.neon.vminu.
rm.neon.vmins.
rm.neon.vminnm.
rm.neon.vmaxu.
rm.neon.vmaxs.
rm.neon.vmaxnm.
rm.neon.vld4lane.
rm.neon.vld4.
rm.neon.vld3lane.
rm.neon.vld3.
rm.neon.vld2lane.
rm.neon.vld2.
rm.neon.vld1.
rm.neon.vhsubu.
rm.neon.vhsubs.
rm.neon.vhaddu.
rm.neon.vhadds.
rm.neon.vcvtpu.
rm.neon.vcvtps.
rm.neon.vcvtnu.
rm.neon.vcvtns.
rm.neon.vcvtmu.
rm.neon.vcvtms.
rm.neon.vcvtfxu2fp.
rm.neon.vcvtfxs2fp.
rm.neon.vcvtfp2fxu.
rm.neon.vcvtfp2fxs.
rm.neon.vcvtau.
rm.neon.vcvtas.
rm.neon.vcnt.
rm.neon.vclz.
rm.neon.vcls.
rm.neon.vbsl.
rm.neon.vabs.
rm.neon.vabdu.
rm.neon.vabds.
rm.neon.sha256su1.
rm.neon.sha256su0.
rm.neon.sha256h2.
rm.neon.sha256h.
rm.neon.sha1su1.
rm.neon.sha1su0.
rm.neon.sha1p.
rm.neon.sha1m.
rm.neon.sha1h.
rm.neon.sha1c.
rm.neon.aesmc.
rm.neon.aesimc.
rm.neon.aese.
rm.neon.aesd.
rm.ldrex.
nnotation.
arch64.neon.xtn.
arch64.neon.vurshr.
arch64.neon.vuqshrn.
arch64.neon.vuqrshrn.
arch64.neon.vuqadd.
arch64.neon.vtstd.
arch64.neon.vtbx4.
arch64.neon.vtbx3.
arch64.neon.vtbx2.
arch64.neon.vtbx1.
arch64.neon.vtbl4.
arch64.neon.vtbl3.
arch64.neon.vtbl2.
arch64.neon.vtbl1.
arch64.neon.vst1x4.
arch64.neon.vst1x3.
arch64.neon.vst1x2.
arch64.neon.vsrshr.
arch64.neon.vsri.
arch64.neon.vsqshrun.
arch64.neon.vsqshrn.
arch64.neon.vsqshlu.
arch64.neon.vsqrshrun.
arch64.neon.vsqrshrn.
arch64.neon.vsqadd.
arch64.neon.vsli.
arch64.neon.vrshrn.
arch64.neon.vrecpx.
arch64.neon.vqshlus.n.
arch64.neon.vqshlu.n.
arch64.neon.vqshlu.
arch64.neon.vqshls.n.
arch64.neon.vqshls.
arch64.neon.vqrshlu.
arch64.neon.vqrshls.
arch64.neon.vqdmlsl.
arch64.neon.vqdmlal.
arch64.neon.vpminnm.
arch64.neon.vpmaxnm.
arch64.neon.vmulx.
arch64.neon.vminv.
arch64.neon.vminnmv.
arch64.neon.vminnm.
arch64.neon.vmaxv.
arch64.neon.vmaxnmv.
arch64.neon.vmaxnm.
arch64.neon.vld1x4.
arch64.neon.vld1x3.
arch64.neon.vld1x2.
arch64.neon.vcltz.
arch64.neon.vclez.
arch64.neon.vchs.
arch64.neon.vchi.
arch64.neon.vcgt.
arch64.neon.vcge.
arch64.neon.vceq.
arch64.neon.vcagt.
arch64.neon.vcage.
arch64.neon.vaddv.
arch64.neon.vabd.
arch64.neon.usqadd.
arch64.neon.uminv.
arch64.neon.umaxv.
arch64.neon.uaddlv.
arch64.neon.suqadd.
arch64.neon.sminv.
arch64.neon.smaxv.
arch64.neon.saddlv.
arch64.neon.rbit.
arch64.neon.fsqrt.
arch64.neon.frintn.
arch64.neon.fcvtzu.
arch64.neon.fcvtzs.
arch64.neon.fcvtxn.
arch64.neon.fcvtpu.
arch64.neon.fcvtps.
arch64.neon.fcvtnu.
arch64.neon.fcvtns.
arch64.neon.fcvtmu.
arch64.neon.fcvtms.
arch64.neon.fcvtau.
arch64.neon.fcvtas.
rm.crc32c
et.fpscr
rm.neon.vtb
rm.neon.vacg
rch64.neon.v
just.trampoline
rch64.neon.
eon.vcvt
hread.pointer
arch64.neon.v
arch64.neon.vcvtf
arch64.neon.vcvt
opysign.
onvertuu.
onvertus.
onvertuif.
onvertsu.
onvertss.
onvertsif.
onvertfui.
onvertfsi.
onvertff.
onvert.to.fp16
uda.syncthreads
onvert.from.fp16
g.value
bugtrap
nothing
bg.declare
warf.cfa
jlj.lsda
eturn.i
ypeid.for
jlj.setjmp
nwind.init
h.sjlj.longjmp
h.sjlj.callsite
xperimental.stackmap
h.sjlj.functioncontext
xperimental.patchpoint.i64
xperimental.patchpoint.void
muladd.
lt.rounds
rameaddress
la.writeData.
la.writeComponent.
la.umulExtended.
la.uMin.
la.uMax.
la.uFma.
la.uFindMSB.
la.uClamp.
la.uBitFieldExtract.
la.textureSampleLodRefZOffsetGrad.
la.textureSampleLodRefZOffset.
la.textureSampleLodRefZ.
la.textureSample.
la.texelGatherOffsets.
la.texelGatherOffset.
la.texelGather.
la.texelFetchOffset.
la.swizzle.
la.subBorrow.
la.smulExtended.
la.sign.
la.sMin.
la.sMax.
la.sFma.
la.sFindMSB.
la.sClamp.
la.sBitFieldExtract.
la.readInterpolantComponent.
la.readData.
la.readComponent.
la.rTextureSampleLodRefZOffsetGrad4.
la.rTextureSampleLodRefZOffsetGrad3.
la.rTextureSampleLodRefZOffsetGrad2.
la.rTextureSampleLodRefZOffsetGrad1.
la.rTextureSampleLodRefZOffset4.
la.rTextureSampleLodRefZOffset3.
la.rTextureSampleLodRefZOffset2.
la.rTextureSampleLodRefZOffset1.
la.rTextureSampleLodRefZ4.
la.rTextureSampleLodRefZ3.
la.rTextureSampleLodRefZ2.
la.rTextureSampleLodRefZ1.
la.rTextureSample4.
la.rTextureSample3.
la.rTextureSample2.
la.rTextureSample1.
la.queryTextureSizeNoLod.
la.queryTextureSize.
la.not.
la.multiInsert.
la.loadComponent.
la.imageStoreI.
la.imageStoreF.
la.imageOp.
la.imageLoad.
la.getInterpolant.
la.findLSB.
la.fbMix.
la.fWriteInterpolantComponent.
la.fWriteInterpolant.
la.fWriteData.
la.fWriteComponent.
la.fVectorTimesMatrix4.
la.fVectorTimesMatrix3.
la.fVectorTimesMatrix2.
la.fUnpackUnorm4x8.
la.fUnpackUnorm2x16.
la.fUnpackSnorm4x8.
la.fUnpackSnorm2x16.
la.fUnpackHalf2x16.
la.fUnpackDouble2x32.
la.fTextureSampleLodRefZOffsetGrad.
la.fTextureSampleLodRefZOffset.
la.fTextureSampleLodRefZ.
la.fTextureSample.
la.fTexelGatherOffsets.
la.fTexelGatherOffset.
la.fTexelGather.
la.fTexelFetchOffset.
la.fTanh.
la.fTan.
la.fSwizzle.
la.fStep.
la.fSqrt.
la.fSmoothStep.
la.fSinh.
la.fSin.
la.fSign.
la.fSaturate.
la.fSamplePosition.
la.fRoundZero.
la.fRoundFast.
la.fRoundEven.
la.fRefract.
la.fReflect.
la.fReadInterpolantSampleComponent.
la.fReadInterpolantSample.
la.fReadInterpolantOffsetComponent.
la.fReadInterpolantOffset.
la.fReadInterpolantComponent.
la.fReadInterpolant.
la.fReadData.
la.fReadComponent.
la.fRadians.
la.fRTextureSampleLodRefZOffsetGrad4.
la.fRTextureSampleLodRefZOffsetGrad3.
la.fRTextureSampleLodRefZOffsetGrad2.
la.fRTextureSampleLodRefZOffsetGrad1.
la.fRTextureSampleLodRefZOffset4.
la.fRTextureSampleLodRefZOffset3.
la.fRTextureSampleLodRefZOffset2.
la.fRTextureSampleLodRefZOffset1.
la.fRTextureSampleLodRefZ4.
la.fRTextureSampleLodRefZ3.
la.fRTextureSampleLodRefZ2.
la.fRTextureSampleLodRefZ1.
la.fRTextureSample4.
la.fRTextureSample3.
la.fRTextureSample2.
la.fRTextureSample1.
la.fQueryTextureLod.
la.fPowi.
la.fPow.
la.fPackUnorm4x8.
la.fPackUnorm2x16.
la.fPackSnorm4x8.
la.fPackSnorm2x16.
la.fPackHalf2x16.
la.fPackDouble2x32.
la.fNormalize3D.
la.fNormalize.
la.fMultiInsert.
la.fModF.
la.fMix.
la.fMin.
la.fMax.
la.fMatrix4TimesVector.
la.fMatrix4TimesMatrix4.
la.fMatrix4TimesMatrix3.
la.fMatrix4TimesMatrix2.
la.fMatrix3TimesVector.
la.fMatrix3TimesMatrix4.
la.fMatrix3TimesMatrix3.
la.fMatrix3TimesMatrix2.
la.fMatrix2TimesVector.
la.fMatrix2TimesMatrix4.
la.fMatrix2TimesMatrix3.
la.fMatrix2TimesMatrix2.
la.fLog2.
la.fLog10.
la.fLog.
la.fLoadComponent.
la.fLit.
la.fLength.
la.fLdexp.
la.fIsNan.
la.fIsInf.
la.fInverseSqrt.
la.fIntBitsTofloat.
la.fImageLoad.
la.fFrexp.
la.fFraction.
la.fFma.
la.fFloor.
la.fFloatBitsToInt.
la.fFixedTransform.
la.fFilterWidth.
la.fFaceForward.
la.fExp2.
la.fExp10.
la.fExp.
la.fDot4.
la.fDot3.
la.fDot2.
la.fDistance.
la.fDegrees.
la.fDFdy.
la.fDFdx.
la.fCross.
la.fCosh.
la.fCos.
la.fClamp.
la.fCeiling.
la.fAtanh.
la.fAtan2.
la.fAtan.
la.fAsinh.
la.fAsin.
la.fAcosh.
la.fAcos.
la.fAbs.
la.discardConditional.
la.bitReverse.
la.bitFieldInsert.
la.bitCount.
la.any.
la.all.
la.addCarry.
la.abs.
la.emitVertex
la.endPrimitive
la.memoryBarrier
la.emitStreamVertex
ndStreamPrimitive
roupMemoryBarrier
emoryBarrierImage
la.memoryBarrierAtomicCounter
exagon.
2.brevp
irc.ldd
ombinew
oundsat
itsplit
odwrapu
lbmatch
.vaddhubs
.bitsclri
nd.andn
mplteui
or.xacc
xtractu
xtractp
r.andix
ombineii
ddb.map
ubb.map
itspliti
.pxfer.map
.nbitsclri
mpyw.acc
xtractup
nsert.rp
tstbit.
crotate
.popcountp
2.combine.
2.conv.
mpyrsc.s
mpyrs.s
mpyh.acc
ertp.rp
erleave
rndpackwh
xtract.rp
ddsubhr
ubaddhr
.asrhub.sat
ddub.acc
adub.acc
oundscheck
cmpbeq.any
4.fastcorner9
dasl.rrri
xtractu.rp
ogglebit.
rndpackwhs
xtractp.rp
4.round.r
2.vrcmpys.s1rp
einterleave
xtractup.rp
p.s1.sat
mpy2s.s
c.up.s1.sat
yri.addr.u2
ac.up.s1.sat
b.nopack
h.nopack
.vrcrotate.acc
.to.SXTHI.asrh
c.s0.sat.
cmpys.acc.s1
h.acc.s
.svw.trun
ub.nopack
uh.nopack
16.sat.
4.fastcorner9.not
2.mpyud.
exagon.M2.mpy.
cc.sat.
ac.sat.
at.rnd.
exagon.S5.vasrhrnd.goodsyntax
exagon.S2.tableidx
.goodsyntax
exagon.S2.asr.i.
.rnd.goodsyntax
exagon.S5.asrhub.rnd.sat.goodsyntax
nvariant.end
t.trampoline
ariant.start
ifetime.end
ifetime.start
emmove.
xtr.rs.w
ackrl.ph
addu.w.qb
aq.s.w.ph
qx.s.w.ph
aq.sa.w.ph
q.qb.ph
qx.sa.w.ph
q.s.w.ph
receu.ph.qb
uleu.s.ph.qb
u.ph.qb
sra.ph.w
.rs.ph.w
ips.prec
qu.ph.qb
qu.s.qb.ph
ips.precr.sra.r.ph.w
vvm.ptr.shared.to.gen.
vvm.ptr.local.to.gen.
vvm.ptr.global.to.gen.
vvm.ptr.gen.to.shared.
vvm.ptr.gen.to.param.
vvm.ptr.gen.to.local.
vvm.ptr.gen.to.global.
vvm.ptr.gen.to.constant.
vvm.ptr.constant.to.gen.
vvm.move.ptr.
vvm.ldu.global.p.
vvm.ldu.global.i.
vvm.ldu.global.f.
vvm.ldg.global.p.
vvm.ldg.global.i.
vvm.ldg.global.f.
vvm.compiler.warn.
vvm.compiler.error.
vvm.atomic.load.inc.32.
vvm.atomic.load.dec.32.
vvm.atomic.load.add.f32.
earbyint.
vvm.h2f
vvm.prmt
arrier0
ohi.i2d
mbar.gl
lhi.ull
eil.ftz.f
.rn.ftz
bs.ftz.f
x.ftz.f
n.ftz.f
ve.float
aturate.
rrier0.or
oor.ftz.f
ove.double
ound.ftz.f
runc.ftz.f
rrier0.and
os.approx.f
pprox.f
x2.approx.
g2.approx.
in.approx.f
arrier0.popc
sqrt.approx.
aturate.ftz.f
os.approx.ftz.f
iv.approx.ftz.f
x2.approx.ftz.f
g2.approx.ftz.f
cp.approx.ftz.d
in.approx.ftz.f
vvm.sqrt.approx.ftz.f
vvm.rsqrt.approx.ftz.f
vvm.read.ptx.sreg.tid.
vvm.read.ptx.sreg.ntid.
vvm.read.ptx.sreg.ctaid.
vvm.read.ptx.sreg.
arpsize
bjectsize.
tr.annotation.
pc.mtctr.
pc.dcbtst
ar.sync
tx.read.smid
tx.read.
c.altivec.
x.read.
x.read.nctaid.
pc.altivec.
pc.altivec.v
c.altivec.v
x.read.lanemask.
mpbfp.p
sqrtefp
hraddshs
pc.is.decremented.ctr.nonzero
eturnaddress
00.read.tgid.
adcyclecounter
600.read.tidig.
600.read.ngroups.
600.read.local.size.
600.read.global.size.
sub.with.overflow.
mul.with.overflow.
add.with.overflow.
gsetjmp
acksave
iglongjmp
tackrestore
tackprotector
tackprotectorcheck
a_start
ar.annotation
core.testwct.
core.testct.
core.syncr.
core.setv.
core.settw.
core.setrdy.
core.setpt.
core.setpsc.
core.setev.
core.setd.
core.setclk.
core.setc.
core.peek.
core.outt.
core.outshr.
core.outct.
core.out.
core.msync.
core.mjoin.
core.int.
core.inshr.
core.initsp.
core.initpc.
core.initlr.
core.initdp.
core.initcp.
core.inct.
core.in.
core.getts.
core.getst.
core.getr.
core.freer.
core.endin.
core.eeu.
core.chkct.
86.xend
86.xtest
6.mmx.por
ore.bitrev
or.v16i1
clmulqdq
vx2.permd
d.v16i1
ot.v16i1
a256msg
ndn.v16i1
nor.v16i1
a256rnds2
.ldu.dq
a.extrq
ore.waitevent
sni.aes
vzeroall
mi.bextr.
unpck.v16i1
.extrqi
e3.pabs.
ore.checkevent
p.ps.256
ovntdqa
12.and.pi
lignr.b
ovmsk.ps
toreu.ps
.insertq
.pfpnacc
du.dq.256
cp.ps.256
zeroupper
ma.vfnm
nt2mask.v16i1
ask2int.v16i1
mineq.ss
ovmsk.pd
.addsub.p
nsertps
nsertqi
bm.bextri.u
mov.256
askload.p
testnzc.p
askload.
ul.hr.sw
l.dq.bs
perm2i128
vttss2si64
comineq.ss
mineq.sd
1.extractps
askstore.p
testnzc.256
qrt.ps.256
askstore.
add.ub.sw
v.d.256
inserti128
ddsub.p
ubadd.p
vttsd2si64
askmov.dqu
comineq.sd
.phminposuw
.crc32.32.8
op.vfrcz.p
lendv.p
2dq.256
ovmsk.p
roadcast.ss
ermilvar.p
.vextracti128
swb.128
ovmskb.128
2.crc32.
uf.b.128
2.ps.256
2.pd.256
ndscale.s
42.pcmp
dd.sw.128
ub.sw.128
op.vpermil2p
broadcasti128
peq.pi.512
se42.pcmp
maskstore.p
broadcast
ps2dq.512
q2.ps.512
2ps.512
2ph.512
sse3.pmul.hr.sw.128
sni.aeskeygenassist
roadcast.s
.vbroadcast.ss.ps
onflict.
skblend.
sse3.pmadd.ub.sw.128
vinsertf128.
skblend.p
ndscale.p
catter.
86.avx.vextractf128.
86.avx512.vbroadcast.s
vbroadcastf128.p
.vbroadcast.s
.pd.256
.ps.256
86.avx512.
.mask.512
.i32.512
.i64.512
.maskz.512
broadcast.s
.pd.512
.ps.512
not_intrinsic
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.frintn
llvm.aarch64.neon.fsqrt
llvm.aarch64.neon.rbit
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.sha1c
llvm.aarch64.neon.sha1m
llvm.aarch64.neon.sha1p
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.sminv
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.uminv
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vabd
llvm.aarch64.neon.vabs
llvm.aarch64.neon.vacgeq
llvm.aarch64.neon.vacgtq
llvm.aarch64.neon.vaddds
llvm.aarch64.neon.vadddu
llvm.aarch64.neon.vaddv
llvm.aarch64.neon.vcage
llvm.aarch64.neon.vcagt
llvm.aarch64.neon.vceq
llvm.aarch64.neon.vcge
llvm.aarch64.neon.vcgt
llvm.aarch64.neon.vchi
llvm.aarch64.neon.vchs
llvm.aarch64.neon.vclez
llvm.aarch64.neon.vcltz
llvm.aarch64.neon.vcvtd.n.s64.f64
llvm.aarch64.neon.vcvtd.n.u64.f64
llvm.aarch64.neon.vcvtf32.n.s32
llvm.aarch64.neon.vcvtf32.n.u32
llvm.aarch64.neon.vcvtf32.s32
llvm.aarch64.neon.vcvtf32.u32
llvm.aarch64.neon.vcvtf64.n.s64
llvm.aarch64.neon.vcvtf64.n.u64
llvm.aarch64.neon.vcvtf64.s64
llvm.aarch64.neon.vcvtf64.u64
llvm.aarch64.neon.vcvts.n.s32.f32
llvm.aarch64.neon.vcvts.n.u32.f32
llvm.aarch64.neon.vld1x2
llvm.aarch64.neon.vld1x3
llvm.aarch64.neon.vld1x4
llvm.aarch64.neon.vmaxnm
llvm.aarch64.neon.vmaxnmv
llvm.aarch64.neon.vmaxv
llvm.aarch64.neon.vminnm
llvm.aarch64.neon.vminnmv
llvm.aarch64.neon.vminv
llvm.aarch64.neon.vmulx
llvm.aarch64.neon.vneg
llvm.aarch64.neon.vpadd
llvm.aarch64.neon.vpfadd
llvm.aarch64.neon.vpfaddq
llvm.aarch64.neon.vpfmaxnm
llvm.aarch64.neon.vpfmaxnmq
llvm.aarch64.neon.vpfminnm
llvm.aarch64.neon.vpfminnmq
llvm.aarch64.neon.vpmax
llvm.aarch64.neon.vpmaxnm
llvm.aarch64.neon.vpmaxq
llvm.aarch64.neon.vpmin
llvm.aarch64.neon.vpminnm
llvm.aarch64.neon.vpminq
llvm.aarch64.neon.vqdmlal
llvm.aarch64.neon.vqdmlsl
llvm.aarch64.neon.vqrshls
llvm.aarch64.neon.vqrshlu
llvm.aarch64.neon.vqshls
llvm.aarch64.neon.vqshls.n
llvm.aarch64.neon.vqshlu
llvm.aarch64.neon.vqshlu.n
llvm.aarch64.neon.vqshlus.n
llvm.aarch64.neon.vrecpx
llvm.aarch64.neon.vrshlds
llvm.aarch64.neon.vrshldu
llvm.aarch64.neon.vrshrn
llvm.aarch64.neon.vrsrads.n
llvm.aarch64.neon.vrsradu.n
llvm.aarch64.neon.vshld.n
llvm.aarch64.neon.vshlds
llvm.aarch64.neon.vshldu
llvm.aarch64.neon.vshrds.n
llvm.aarch64.neon.vshrdu.n
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsqadd
llvm.aarch64.neon.vsqrshrn
llvm.aarch64.neon.vsqrshrun
llvm.aarch64.neon.vsqshlu
llvm.aarch64.neon.vsqshrn
llvm.aarch64.neon.vsqshrun
llvm.aarch64.neon.vsrads.n
llvm.aarch64.neon.vsradu.n
llvm.aarch64.neon.vsri
llvm.aarch64.neon.vsrshr
llvm.aarch64.neon.vst1x2
llvm.aarch64.neon.vst1x3
llvm.aarch64.neon.vst1x4
llvm.aarch64.neon.vsubds
llvm.aarch64.neon.vsubdu
llvm.aarch64.neon.vtbl1
llvm.aarch64.neon.vtbl2
llvm.aarch64.neon.vtbl3
llvm.aarch64.neon.vtbl4
llvm.aarch64.neon.vtbx1
llvm.aarch64.neon.vtbx2
llvm.aarch64.neon.vtbx3
llvm.aarch64.neon.vtbx4
llvm.aarch64.neon.vtstd
llvm.aarch64.neon.vuqadd
llvm.aarch64.neon.vuqrshrn
llvm.aarch64.neon.vuqshrn
llvm.aarch64.neon.vurshr
llvm.aarch64.neon.xtn
llvm.adjust.trampoline
llvm.annotation
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacged
llvm.arm.neon.vacgeq
llvm.arm.neon.vacgtd
llvm.arm.neon.vacgtq
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vclz
llvm.arm.neon.vcnt
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshiftls
llvm.arm.neon.vshiftlu
llvm.arm.neon.vshiftn
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qsub
llvm.arm.set.fpscr
llvm.arm.sevl
llvm.arm.ssat
llvm.arm.strex
llvm.arm.strexd
llvm.arm.thread.pointer
llvm.arm.usat
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bswap
llvm.ceil
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.dbg.declare
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.gla.abs
llvm.gla.addCarry
llvm.gla.all
llvm.gla.any
llvm.gla.barrier
llvm.gla.bitCount
llvm.gla.bitFieldInsert
llvm.gla.bitReverse
llvm.gla.discard
llvm.gla.discardConditional
llvm.gla.emitStreamVertex
llvm.gla.emitVertex
llvm.gla.endPrimitive
llvm.gla.endStreamPrimitive
llvm.gla.fAbs
llvm.gla.fAcos
llvm.gla.fAcosh
llvm.gla.fAsin
llvm.gla.fAsinh
llvm.gla.fAtan
llvm.gla.fAtan2
llvm.gla.fAtanh
llvm.gla.fCeiling
llvm.gla.fClamp
llvm.gla.fCos
llvm.gla.fCosh
llvm.gla.fCross
llvm.gla.fDFdx
llvm.gla.fDFdy
llvm.gla.fDegrees
llvm.gla.fDistance
llvm.gla.fDot2
llvm.gla.fDot3
llvm.gla.fDot4
llvm.gla.fExp
llvm.gla.fExp10
llvm.gla.fExp2
llvm.gla.fFaceForward
llvm.gla.fFilterWidth
llvm.gla.fFixedTransform
llvm.gla.fFloatBitsToInt
llvm.gla.fFloor
llvm.gla.fFma
llvm.gla.fFraction
llvm.gla.fFrexp
llvm.gla.fImageLoad
llvm.gla.fIntBitsTofloat
llvm.gla.fInverseSqrt
llvm.gla.fIsInf
llvm.gla.fIsNan
llvm.gla.fLdexp
llvm.gla.fLength
llvm.gla.fLit
llvm.gla.fLoadComponent
llvm.gla.fLog
llvm.gla.fLog10
llvm.gla.fLog2
llvm.gla.fMatrix2TimesMatrix2
llvm.gla.fMatrix2TimesMatrix3
llvm.gla.fMatrix2TimesMatrix4
llvm.gla.fMatrix2TimesVector
llvm.gla.fMatrix3TimesMatrix2
llvm.gla.fMatrix3TimesMatrix3
llvm.gla.fMatrix3TimesMatrix4
llvm.gla.fMatrix3TimesVector
llvm.gla.fMatrix4TimesMatrix2
llvm.gla.fMatrix4TimesMatrix3
llvm.gla.fMatrix4TimesMatrix4
llvm.gla.fMatrix4TimesVector
llvm.gla.fMax
llvm.gla.fMin
llvm.gla.fMix
llvm.gla.fModF
llvm.gla.fMultiInsert
llvm.gla.fNormalize
llvm.gla.fNormalize3D
llvm.gla.fPackDouble2x32
llvm.gla.fPackHalf2x16
llvm.gla.fPackSnorm2x16
llvm.gla.fPackSnorm4x8
llvm.gla.fPackUnorm2x16
llvm.gla.fPackUnorm4x8
llvm.gla.fPow
llvm.gla.fPowi
llvm.gla.fQueryTextureLod
llvm.gla.fRTextureSample1
llvm.gla.fRTextureSample2
llvm.gla.fRTextureSample3
llvm.gla.fRTextureSample4
llvm.gla.fRTextureSampleLodRefZ1
llvm.gla.fRTextureSampleLodRefZ2
llvm.gla.fRTextureSampleLodRefZ3
llvm.gla.fRTextureSampleLodRefZ4
llvm.gla.fRTextureSampleLodRefZOffset1
llvm.gla.fRTextureSampleLodRefZOffset2
llvm.gla.fRTextureSampleLodRefZOffset3
llvm.gla.fRTextureSampleLodRefZOffset4
llvm.gla.fRTextureSampleLodRefZOffsetGrad1
llvm.gla.fRTextureSampleLodRefZOffsetGrad2
llvm.gla.fRTextureSampleLodRefZOffsetGrad3
llvm.gla.fRTextureSampleLodRefZOffsetGrad4
llvm.gla.fRadians
llvm.gla.fReadComponent
llvm.gla.fReadData
llvm.gla.fReadInterpolant
llvm.gla.fReadInterpolantComponent
llvm.gla.fReadInterpolantOffset
llvm.gla.fReadInterpolantOffsetComponent
llvm.gla.fReadInterpolantSample
llvm.gla.fReadInterpolantSampleComponent
llvm.gla.fReflect
llvm.gla.fRefract
llvm.gla.fRoundEven
llvm.gla.fRoundFast
llvm.gla.fRoundZero
llvm.gla.fSamplePosition
llvm.gla.fSaturate
llvm.gla.fSign
llvm.gla.fSin
llvm.gla.fSinh
llvm.gla.fSmoothStep
llvm.gla.fSqrt
llvm.gla.fStep
llvm.gla.fSwizzle
llvm.gla.fTan
llvm.gla.fTanh
llvm.gla.fTexelFetchOffset
llvm.gla.fTexelGather
llvm.gla.fTexelGatherOffset
llvm.gla.fTexelGatherOffsets
llvm.gla.fTextureSample
llvm.gla.fTextureSampleLodRefZ
llvm.gla.fTextureSampleLodRefZOffset
llvm.gla.fTextureSampleLodRefZOffsetGrad
llvm.gla.fUnpackDouble2x32
llvm.gla.fUnpackHalf2x16
llvm.gla.fUnpackSnorm2x16
llvm.gla.fUnpackSnorm4x8
llvm.gla.fUnpackUnorm2x16
llvm.gla.fUnpackUnorm4x8
llvm.gla.fVectorTimesMatrix2
llvm.gla.fVectorTimesMatrix3
llvm.gla.fVectorTimesMatrix4
llvm.gla.fWriteComponent
llvm.gla.fWriteData
llvm.gla.fWriteInterpolant
llvm.gla.fWriteInterpolantComponent
llvm.gla.fbMix
llvm.gla.findLSB
llvm.gla.getInterpolant
llvm.gla.groupMemoryBarrier
llvm.gla.imageLoad
llvm.gla.imageOp
llvm.gla.imageStoreF
llvm.gla.imageStoreI
llvm.gla.loadComponent
llvm.gla.memoryBarrier
llvm.gla.memoryBarrierAtomicCounter
llvm.gla.memoryBarrierBuffer
llvm.gla.memoryBarrierImage
llvm.gla.memoryBarrierShared
llvm.gla.multiInsert
llvm.gla.not
llvm.gla.queryTextureSize
llvm.gla.queryTextureSizeNoLod
llvm.gla.rTextureSample1
llvm.gla.rTextureSample2
llvm.gla.rTextureSample3
llvm.gla.rTextureSample4
llvm.gla.rTextureSampleLodRefZ1
llvm.gla.rTextureSampleLodRefZ2
llvm.gla.rTextureSampleLodRefZ3
llvm.gla.rTextureSampleLodRefZ4
llvm.gla.rTextureSampleLodRefZOffset1
llvm.gla.rTextureSampleLodRefZOffset2
llvm.gla.rTextureSampleLodRefZOffset3
llvm.gla.rTextureSampleLodRefZOffset4
llvm.gla.rTextureSampleLodRefZOffsetGrad1
llvm.gla.rTextureSampleLodRefZOffsetGrad2
llvm.gla.rTextureSampleLodRefZOffsetGrad3
llvm.gla.rTextureSampleLodRefZOffsetGrad4
llvm.gla.readComponent
llvm.gla.readData
llvm.gla.readInterpolantComponent
llvm.gla.sBitFieldExtract
llvm.gla.sClamp
llvm.gla.sFindMSB
llvm.gla.sFma
llvm.gla.sMax
llvm.gla.sMin
llvm.gla.sign
llvm.gla.smulExtended
llvm.gla.subBorrow
llvm.gla.swizzle
llvm.gla.texelFetchOffset
llvm.gla.texelGather
llvm.gla.texelGatherOffset
llvm.gla.texelGatherOffsets
llvm.gla.textureSample
llvm.gla.textureSampleLodRefZ
llvm.gla.textureSampleLodRefZOffset
llvm.gla.textureSampleLodRefZOffsetGrad
llvm.gla.uBitFieldExtract
llvm.gla.uClamp
llvm.gla.uFindMSB
llvm.gla.uFma
llvm.gla.uMax
llvm.gla.uMin
llvm.gla.umulExtended
llvm.gla.writeComponent
llvm.gla.writeData
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dffixupd
llvm.hexagon.F2.dffixupn
llvm.hexagon.F2.dffixupr
llvm.hexagon.F2.dffma
llvm.hexagon.F2.dffma.lib
llvm.hexagon.F2.dffma.sc
llvm.hexagon.F2.dffms
llvm.hexagon.F2.dffms.lib
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpy
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.circ.ldd
llvm.init.trampoline
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.memcpy
llvm.memmove
llvm.memset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.mtctr
llvm.ppc.sync
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.var.annotation
llvm.va_start
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx2.pblendvb
llvm.x86.avx2.pblendw
llvm.x86.avx2.pbroadcastb.128
llvm.x86.avx2.pbroadcastb.256
llvm.x86.avx2.pbroadcastd.128
llvm.x86.avx2.pbroadcastd.256
llvm.x86.avx2.pbroadcastq.128
llvm.x86.avx2.pbroadcastq.256
llvm.x86.avx2.pbroadcastw.128
llvm.x86.avx2.pbroadcastw.256
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.dq
llvm.x86.avx2.psrl.dq.bs
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vbroadcast.sd.pd.256
llvm.x86.avx2.vbroadcast.ss.ps
llvm.x86.avx2.vbroadcast.ss.ps.256
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.vextracti128
llvm.x86.avx2.vinserti128
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.and.pi
llvm.x86.avx512.cmpeq.pi.512
llvm.x86.avx512.conflict.d.512
llvm.x86.avx512.conflict.d.mask.512
llvm.x86.avx512.conflict.d.maskz.512
llvm.x86.avx512.conflict.q.512
llvm.x86.avx512.conflict.q.mask.512
llvm.x86.avx512.conflict.q.maskz.512
llvm.x86.avx512.cvt.ps2dq.512
llvm.x86.avx512.cvtdq2.ps.512
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpd.mask.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpi.mask.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dpq.mask.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.dps.mask.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpd.mask.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpi.mask.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qpq.mask.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather.qps.mask.512
llvm.x86.avx512.kortestc
llvm.x86.avx512.kortestz
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mskblend.d.512
llvm.x86.avx512.mskblend.pd.512
llvm.x86.avx512.mskblend.ps.512
llvm.x86.avx512.mskblend.q.512
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmaxs.d
llvm.x86.avx512.pmaxs.q
llvm.x86.avx512.pmaxu.d
llvm.x86.avx512.pmaxu.q
llvm.x86.avx512.pmins.d
llvm.x86.avx512.pmins.q
llvm.x86.avx512.pminu.d
llvm.x86.avx512.pminu.q
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.psll.dq
llvm.x86.avx512.psll.dq.bs
llvm.x86.avx512.psrl.dq
llvm.x86.avx512.psrl.dq.bs
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd.512
llvm.x86.avx512.rcp28.ps.512
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rndscale.pd.512
llvm.x86.avx512.rndscale.ps.512
llvm.x86.avx512.rndscale.sd
llvm.x86.avx512.rndscale.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd.512
llvm.x86.avx512.rsqrt28.ps.512
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpd.mask.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpi.mask.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dpq.mask.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.dps.mask.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpd.mask.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpi.mask.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qpq.mask.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatter.qps.mask.512
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.avx512.vcvtph2ps.512
llvm.x86.avx512.vcvtps2ph.512
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcast.sd.256
llvm.x86.avx.vbroadcast.ss
llvm.x86.avx.vbroadcast.ss.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.pd.512
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.ps.512
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.pd.512
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmaddsub.ps.512
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.pd.512
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.ps.512
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.pd.512
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfmsubadd.ps.512
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.pd.512
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.ps.512
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.pd.512
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.ps.512
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.int
llvm.x86.int2mask.v16i1
llvm.x86.kadd.v16i1
llvm.x86.kand.v16i1
llvm.x86.kandn.v16i1
llvm.x86.knot.v16i1
llvm.x86.kor.v16i1
llvm.x86.kunpck.v16i1
llvm.x86.kxnor.v16i1
llvm.x86.kxor.v16i1
llvm.x86.mask2int.v16i1
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.dq
llvm.x86.sse2.psrl.dq.bs
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pblendw
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
hexagon
webkit_jscc
anyregcc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
ptx_kernel
ptx_device
x86_64_sysvcc
x86_64_win64cc
x86_fp80
ppc_fp128
metadata
x86_mmx
%"type 
 addrspace(
<unrecognized-type>
 <unknown operation 
 inbounds
zeroinitializer
blockaddress(
<placeholder or erroneous Constant>
sideeffect 
alignstack 
inteldialect 
<badref>
<null operand!>
 singlethread
 <bad ordering 
 unordered
 monotonic
 acquire
 release
 acq_rel
 seq_cst
; ModuleID = '
target datalayout = "
target triple = "
module asm "
<empty name> 
private 
linker_private 
linker_private_weak 
internal 
linkonce 
linkonce_odr 
weak_odr 
common 
appending 
dllimport 
dllexport 
extern_weak 
available_externally 
hidden 
protected 
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
; Materializable
external 
addrspace(
unnamed_addr 
externally_initialized 
constant 
global 
, section "
, align 
<<nameless>> = 
 <<NULL ALIASEE>>
 = type 
; Function Attrs: 
declare 
define 
 unnamed_addr
 section "
 align 
 prefix 
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
<badref> = 
 atomic
 volatile
 personality 
          cleanup
          catch 
          filter 
          to 
 unwind 
, !<unknown kind #
; [ DW_TAG_user_base ]
 = metadata 
attributes #
<null Type>
printing a <null> value
sanitize_address
alwaysinline
builtin
inlinehint
minsize
noalias
nobuiltin
nocapture
noduplicate
noimplicitfloat
nonlazybind
noredzone
noreturn
nounwind
optnone
optsize
readnone
returned
returns_twice
signext
sspstrong
sanitize_thread
sanitize_memory
uwtable
zeroext
alignstack
invalid bitset<N> position
datalayout
Data Layout
Bad DataLayout ctor used.  Tool did not specify a DataLayout to use?
mallocsize
malloccall
ccccccccc
ppcf128
Metadata
Untyped
indirectbr
unreachable
cmpxchg
atomicrmw
getelementptr
fptrunc
inttoptr
ptrtoint
bitcast
addrspacecast
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
<Invalid operator> 
 [unbounded]
lang 0x
 [line 
, size 
, offset 
 [private]
 [protected]
 [artificial]
 [decl]
 [vector]
 [static]
 [from 
 elements]
 [local]
 [scope 
, properties 
Two passes with the same argument (-
) attempted to be registered!
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Function Pass Manager
print pass details when it is executed
Details
print pass name before it is executed
Executions
print pass structure before run()
Structure
print pass arguments to pass to 'opt'
Arguments
disable debug output
Disabled
Print PassManager debugging information
debug-pass
Print IR before specified passes
print-before
Print IR after specified passes
print-after
Print IR before each pass
print-before-all
Print IR after each pass
print-after-all
Releasing pass '
Running pass '
 on module '
function
basic block
Module Pass Manager
ModulePass Manager
... Pass execution timing report ...
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
*** IR Dump After 
Pass Arguments: 
' is not preserving '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
Error reading bitcode file: 
FunctionPass Manager
Time each pass, printing elapsed time for each on exit
time-passes
Cannot find option named '
-0.000000e+00
                                                                                
Error opening output file '
IO failure on output stream.
Unknown error
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789abcdef0
0123456789ABCDEF0
infinity
INFINITY
-INFINITY
InitializeSRWLock
AcquireSRWLockExclusive
AcquireSRWLockShared
ReleaseSRWLockExclusive
ReleaseSRWLockShared
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_lo_user
DW_TAG_hi_user
DW_TAG_auto_variable
DW_TAG_arg_variable
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_MIPS_loop
DW_TAG_type_unit
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_APPLE_property
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_UTF
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_lo_user
DW_ATE_hi_user
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_lo_user
DW_LANG_hi_user
LLVM ERROR: 
General options
: CommandLine Error: Argument '
' defined more than once!
Cannot specify more than one option with cl::ConsumeAfter!
: for the -
 option: 
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
OVERVIEW: 
USAGE: 
 [options]
OPTIONS:
  This option category has no options.
Display list of available options (-help-list-hidden for more)
help-list
Display list of all available options
help-list-hidden
Display available options (-help-hidden for more)
Display all available options
help-hidden
Print non-default options after command line parsing
print-options
Print all option values after command line parsing
print-all-options
LLVM (http://llvm.org/):
 version 
DEBUG build
(unknown)
  Built 
Jun 10 2015
14:40:25
  Default target: 
  Host CPU: 
Display the version of this program
Enable -time-passes memory tracking (this may be slow)
track-memory
File to append -stats and -timer output to
filename
info-output-file
Error opening info-output-file '
 for appending!
        -----     
  %7.4f (%5.1f%%)
%9I64d  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
CreateSymbolicLinkW
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
x86_64-pc-win32
GenuineIntel
pentium
pentium-mmx
pentiumpro
pentium2
pentium3
pentium-m
corei7-avx
core-avx-i
core-avx2
pentium4
prescott
AuthenticAMD
athlon-tbird
athlon-mp
athlon-xp
k8-sse3
opteron
athlon-fx
athlon64
amdfam10
aarch64
mips64el
powerpc64
powerpc64le
powerpc
sparcv9
nvptx64
auroraux
dragonfly
freebsd
kfreebsd
mingw32
openbsd
solaris
gnueabihf
gnueabi
android
x86_64h
mipsallegrex
mipsallegrexel
mips64eb
sparc64
Glslang
gla.uniform
gla.inputs
gla.outputs
gla.uniforms
gla.invariant
gla.inputPrimitive
gla.outputPrimitive
gla.xfbMode
gla.numVertices
gla.vertexSpacing
gla.vertexOrder
gla.pointMode
gla.invocations
gla.pixelCenterInteger
gla.originUpperLeft
unknown image format
base type of sampler return type
built in variable
mainBody
constructed
ternary
glslang qualifier
basic type: double
implicitly-sized array
gl_Vertex_sim
gl_ModelViewProjectionMatrix_sim
sampler type
AtomicAdd
AtomicMin
AtomicMax
AtomicAnd
AtomicOr
AtomicXor
AtomicExchange
AtomicCompSwap
image access
double conversion
arrayed IO in physical IO mode (use logical IO instead)
complex I/O type; use new glslang C++ interface
scalar or vector element type
_typeProxy
sampler_typeProxy
gla.input
gla.output
EMdBuiltIn input value
gl_EmbNormal
gl_EmbVertex
gl_EmbMultiTexCoord0
gl_EmbMultiTexCoord1
gl_EmbMultiTexCoord2
gl_EmbMultiTexCoord3
gl_EmbMultiTexCoord4
gl_EmbMultiTexCoord5
gl_EmbMultiTexCoord6
gl_EmbMultiTexCoord7
gl_EmbFrontColor
gl_EmbBackColor
gl_EmbFrontSecondaryColor
gl_EmbBackSecondaryColor
gl_EmbTexCoord
gl_EmbFogFragCoord
EMdBuiltIn output value
layout(vertices = 
tess eval input ordering
tess eval input primitive
tess eval vertex spacing
layout(point_mode) in;
geometry input primitive
layout(invocations = 
geometry output primitive
layout(max_vertices = 
layout(pixel_center_integer) in;
layout(origin_upper_left) in;
shader stage
conversion wrapper
Address Space in Bottom IR: 
Unknown EVariableQualifier
image format
missing name in aggregate
Can only compare integers and floats
Comparison Operator in Bottom IR: 
int(uint
ivec2(uvec2
ivec3(uvec3
ivec4(uvec4
Can only convert scalars and vectors
unknown op to invert
shared 
shift for version 
bit-wise OR in version 
bit-wise AND in version 
return;
return 
intrinsic without valid intrinsic ID
Can only compare scalars and vectors
Comparison Vector Operator in Bottom IR: 
BitCast applied to a non-pointer
Opcode in Bottom IR: 
GLSL back end phi alias of non-mapped source
switch (
default:
unary op for simple conditional loops
while (
for ( ; 
loop predicate
while (true) 
continue;
discard;
#version 
 compatibility
profile
// LunarGOO output
 obuscated
 : enable
#extension 
precision mediump float; // this will be almost entirely overridden by individual declarations
struct 
missing sampler base type
GLSL back end gep missing value->string mapping
missing base expression for uniform makePointerExpression
missing metadata for makePointerExpression
 = textureSize(
 = textureQueryLod(
offsets_
 = ivec2[4](
const ivec2[4] 
) * mat
addCarry
subBorrow
umulExtended
smulExtended
bitFieldExtract
bitFieldInsert
bitFieldReverse
bitCount
findLSB
findMSB
packUnorm4x8
packSnorm4x8
unpackUnorm4x8
unpackSnorm4x8
packDouble2x32
unpackDouble2x32
.member0
.member1
Intrinsic in Bottom IR
unknownIntrinsic(
, 0.0, 1.0
image op
texelFetch
Texturing in Bottom IR: 
variable declaration qualifier
Basic Type in Bottom IR
IO metadata for type
aggregate metadata for type
base type of sampler
kind of sampler
sampler metadata
unknown interpolation method
location=
Partially defined aggregate type
couldn't get metadata for input instruction
IO Intrinsic
not enough mdAggregate operands
stage-epilogue
stage-exit
post-return
post-discard
_shadow
non-pointer in setActiveOutput()
Pipeline write using non-integer index
element
mat2vec
mat3vec
mat4vec
matrix size
product
dotProduct
vec2mat
vec3mat
vec4mat
leftColumn
rightColumn
resultMatrix
lcolumn
rcolumn
memberColumn
tempColumn
leftComp
rightComp
Texture intrinsic: 
Texture query intrinsic
Unknown type to take reciprocal of: 
element1
element2
unary intrinsic
ifmerge
switch-segment
switch-merge
post-switch-break
loop-header
loop-merge
post-loop-continue
unknown type in inductive variable
post-loop-break
SoA in middle end: 
AoS other than size 4 or 1 in middle end: 
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64
discard from non-main function with no discard op in back end
complex loop exits (two exit branches from same block)
switch topology
Non-supported terminator
complex loop exits (shared exit block)
explicit masking in middle end
control flow: not all blocks were translated
bottom-transl
LunarGLASS bottom translator pass
***Unsupported functionality: 
non-simple constant
decomposition of gla_fAsin
decomposition of gla_fAtan
decomposition of gla_fAtan2
decomposition of gla_fCosh
decomposition of gla_fSinh
decomposition of gla_fTanh
decomposition of gla_fACosh
decomposition of gla_fASinh
decomposition of gla_fATanh
decomposition of gla_fPowi
decomposition of gla_fFraction
decomposition of gla_fSign
decomposition of gla_fModF
numerator
denominator
quotient
decomposition of gla_fIsNan
decomposition of gla_Fma
decomposition of gla_fPackUnorm2x16
decomposition of gla_fPackUnorm4x8
decomposition of gla_fPackSnorm4x8
decomposition of gla_fUnpackUnorm2x16
decomposition of gla_fUnpackUnorm4x8
decomposition of gla_fUnpackSnorm4x8
decomposition of gla_fPackDouble2x32
decomposition of gla_fUnpackDouble2x32
decomposition of gla_fLit
decomposition of gla_fFaceForward
decomposition of gla_fRefract
decomposition of gla_fFixedTransform
any() on a scalar
all() on a scalar
not() on a scalar
projection with cube sampler
projection with arrayed sampler
decompose-insts
Decompose instructions for LunarGLASS
coalesce-inserts
Construct multiInserts out of multiple insert/extracts
flatten-conditional-assignments
Flatten conditional assignments into select instructions
general-case cross edges (requires artificial loop)
canonicalize-cfg
Canonicalize the CFG for LunarGLASS
gla_constGEP
gla_globalAgg
aggregate
canonicalize-insts
Canonicalize instructions for LunarGLASS
Bad BackEndPointer ctor used.
back-end-pointer
Exposes backend queries
multiple post-dominance frontier entries for a discarding block
multiInsert with a non-scalar non-vector source
intrinsic-combine
Combine intrinsics for LunarGLASS
Scalarize instruction on a non-per-component intrinsic
Currently unsupported instruction: 
Scalarizing struct/array ops
Scalarizing stores/geps
Currently unhandled instruction 
Vector shuffle with all don't-care values
Variably referenced vector components
Unhandled tex op: 
Unhandled intrinsic: 
scalarize
Scalarize the IR
Signed addCarry
Signed subBorrow
extended binOp of a constant
fMin should get constant-folded
fMax should get constant-folded
gather-instructions
Gather instructions for LunarGLASS
identify-structures
Identify the structures in a structured-cfg
unable to remove the dup-merge block
dup-merge
ATI_DST16
ATI_DST24
X360_DST16
X360_DST24
X360_DST24F
LINEAR_BGRX8888
LINEAR_RGBA8888
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGRA8888
LINEAR_RGB888
LINEAR_BGR888
LINEAR_BGRX5551
LINEAR_I8
LINEAR_RGBA16161616
LE_BGRX8888
LE_BGRA8888
RG1616F
RG3232F
RGBX8888
NV_NULL
RGBA1010102
BGRA1010102
LINEAR_D24S8
D24X4S4
D16_SHADOW
D24X8_SHADOW
RGBA16161616_EDRAM
RGBA1010102F_EDRAM
R16F_EXPAND
RG1616F_EXPAND
RGBA16161616F_EXPAND
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
RGBA16161616_EDRAM_RGBA16161616
DXT5_NM
RGBA8888_LINEAR
BGRA8888_LINEAR
BGRX8888_LINEAR
RGBX555
RGBA8888
ABGR8888
RGB888_BLUESCREEN
BGR888_BLUESCREEN
ARGB8888
BGRA8888
BGRX8888
BGRX5551
BGRA4444
DXT1_ONEBITALPHA
BGRA5551
UVWQ8888
RGBA16161616F
RGBA16161616
UVLX8888
RGB323232F
RGBA32323232F
NV_DST16
NV_DST24
NV_INTZ
NV_RAWZ
c:\buildslave\vrgdc2015_staging_win64\build\src\bitmap\imageformat.cpp
ImageLoader::ImageFormatInfo
fmt >= IMAGE_FORMAT_UNKNOWN && fmt < NUM_IMAGE_FORMATS
VApplication001
VEngineCvar007
VStringTokenSystem001
EventSystem001
TestScriptMgr001
VProcessUtils002
Physics2 Interface Old v0.5
VPhysX Interface ResourceMgr v0.1
VBaseFileSystem011
VNewAsyncFileSystem001
ResourceSystem009
ResourceSystemTools001
ResourceManifestRegistry001
ResourceHandleUtils001
SchemaSystem_001
ResourceCompilerSystem001
VMaterialSystem2_001
PostProcessingSystem_001
InputSystemVersion001
InputStackSystemVersion001
RenderDeviceMgr001
RenderUtils_001
SoundSystem001
SoundMixGroupSystem001
SoundOpSystemEdit001
SoundOpSystem001
DebugTextureInfo001
VBAllocTracker001
COLORCORRECTION_VERSION_1
VMDLLIB001
QueuedLoaderVersion001
VGUI_ivgui008
VGUI_Input005
VGUI_Panel010
VGUI_Surface032
VGUI_Scheme010
VGUI_System010
Localize_001
VDataCache003
VMediaFoundation001
VAvi001
VBik001
IQuickTime001
VDmeMakeFileUtils001
MeshSystem001
MeshUtils001
RenderDevice002
VRenderDeviceSetupV001
RenderHardwareConfig002
SceneSystem_002
SceneUtils_001
WorldRendererMgr001
RenderSystemSurface001
AssetSystem001
AssetSystemTest001
ParticleSystemMgr002
VScriptManager010
ToolScriptManager001
PropertyEditorSystem_001
ModelProcessingSystem001
MATCHFRAMEWORK_001
PanoramaUIEngine001
PanoramaUIClient001
ToolFramework2_001
WorldRendererBuilderMgr001
LightingBuilderMgr001
PhysicsBuilderMgr001
VisBuilder_001
EnvironmentMapBuilder_001
BakedLODBuilderMgr001
DotaCardGameClient_001
HelpSystem_001
ToolSceneNodeFactory_001
ToolGameSimulationSystem_001
ToolGameSimulationDispatcher_001
SchemaTestExternal_Two_001
SchemaTestExternal_One_001
AnimationSystem_001
AnimationSystemUtils_001
HammerMapLoader001
MaterialUtils_001
FontManager_001
TextLayout_001
AssetPreviewSystem_001
AssetBrowserSystem_001
VConComm001
ConfigurationSystem_001
NetworkSystemVersion001
NetworkSystemUtilsVersion001
NetworkMessagesVersion001
FlattenedSerializersVersion001
Source2Client001
Source2ClientPrediction001
Source2Server001
Source2ServerSerializers001
Source2Host001
Source2GameClients001
Source2GameEntities001
EngineServiceMgr001
HostStateMgr001
NetworkService_001
NetworkClientService_001
NetworkP2PService_001
NetworkServerService_001
TextMessageMgr_001
ToolService_001
RenderService_001
StatsService_001
UserInfoChangeService_001
VProfService_001
InputService_001
MapListService_001
GameUIService_001
SoundService_001
BenchmarkService001
VDebugService_001
KeyValueCache001
GameResourceServiceClientV001
GameResourceServiceServerV001
Source2EngineToClient001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2EngineToClientStringTable001
VPhysics2_Interface_001
VPhysics2_Handle_Interface_001
ServerUploadGameStats001
ScaleformUI001
WorkshopSetup001
NavSystem001
lexer->mTokens(): Error: No lexer rules were added to the lexer yet!
-unknown source-(
: lexer error %d :
	%s at offset %d, 
near '%c' :
near char(%#02X) :
(end of input).
	 This indicates a poorly specified lexer RULE
	 or unterminated input element such as: "STRING["]
	 The lexer was matching from line %d, offset %d, which
looks like this:
is also the end of the line, so you must check your lexer rules
Mismatched Token Exception
Base recognizer function antlr3RecognitionExceptionNew called by unknown parser type - provide override for this function
Recognition Exception
Unexpected character
Unexpected token
-unknown source-
Unexpected node
Base recognizer function 'match' called by unknown parser type - provide override for this function
Base recognizer function 'matchAny' called by unknown parser type - provide override for this function
Base recognizer function 'mismatch' called by unknown parser type - provide override for this function
Extraneous token
Missing token
-end of input-(
 : error %d : %s
, at offset %d
, at <EOF>
<no text for the token>
    near %s
, near %s
Base recognizer function displayRecognitionError called by unknown parser type - provide override for this function
 : Extraneous input...
 : Extraneous input - expected <EOF>
 : Extraneous input - expected %s ...
 : Missing token (%d)...
 : Missing <EOF>
 : Missing %s 
 : syntax error...
 : expected <EOF>
 : expected %s ...
 : cannot match to any predicted input...
 : unexpected input...
  expected one of : 
Actually dude, we didn't seem to be expecting anything here, or at least
I could not work out what I was expecting, like so many of us these days!
 : missing elements...
 : syntax not recognized...
Base recognizer function recover called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedToken called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedSet called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntil' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntilSet' called by unknown parser type - provide override for this function
Base recognizer function 'alreadyParsedRule' called by unknown parser type - provide override for this function
Base recognizer function consumeUntilSet called by unknown parser type - provide override for this function
Base recognizer function 'synPred' called by unknown parser type - provide override for this function
<missing 
-memory-
[Index: 
 (Start: 
-Stop: 
', type<
(channel = 
 LinePos:
ANTLR3_EXCEPTION number %d (%08X).
ANTLR3_EXCEPTION: %s
@fff>fff>fff>fff>
c:\buildslave\vrgdc2015_staging_win64\build\src\mathlib\mathlib_base.cpp
_VectorNormalizeFast
fabs( vec.LengthSqr() - 1.0f ) < 1e-3
MathLib_Init
SSE and SSE2 are required.
&trade;
&ndash;
&mdash;
&iexcl;
&pound;
&curren;
&brvbar;
&laquo;
&plusmn;
&acute;
&micro;
&middot;
&cedil;
&raquo;
&frac14;
&frac12;
&frac34;
&iquest;
&times;
&divide;
&Agrave;
&Aacute;
&Acirc;
&Atilde;
&Aring;
&AElig;
&Ccedil;
&Egrave;
&Eacute;
&Ecirc;
&Igrave;
&Iacute;
&Icirc;
&Ntilde;
&Ograve;
&Oacute;
&Ocirc;
&Otilde;
&Oslash;
&Ugrave;
&Uacute;
&Ucirc;
&Yacute;
&THORN;
&szlig;
&agrave;
&aacute;
&acirc;
&atilde;
&aring;
&aelig;
&ccedil;
&egrave;
&eacute;
&ecirc;
&igrave;
&iacute;
&icirc;
&ntilde;
&ograve;
&oacute;
&ocirc;
&otilde;
&oslash;
&ugrave;
&uacute;
&ucirc;
&yacute;
&thorn;
[/code]
[/list]
<img src="
"></img>
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\strtools.cpp
_V_strncmp
Unaccounted
_V_strncmp
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\strtools.cpp
V_strcmp
V_strncasecmp
Unaccounted
V_strncasecmp
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\strtools.cpp
V_atoi64
V_stristr
pSearch
_V_strncpy
maxLen >= sizeof( *pDest )
maxLen > 0
V_snprintf
V_vsnprintf
V_vsnprintfRet
_V_strncat
destBufferSize >= 0
V_StripTrailingSlash
_V_AppendSlash
V_AppendSlash: ran out of space on %s.
V_SplitString2
outStrings.Count() == 0
@X@()$^.*+?[]|\-{},:=!
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlstring.cpp
CUtlString::SetDirect
nChars == Q_strlen(m_pString)
CUtlString::SetDirect does not support resizing strings in place.
nChars <= MIN( V_strnlen(pValue, nChars) + 1, nChars )
CUtlStringBuilder::InternalPrepareBuffer
nMinCapacity > Capacity()
nMinCapacity >= nChars
nMinCapacity <= k_nMaxStringSize
CUtlStringBuilder::Data::SetError
Error State on string being set.
VALVE-MODULE-DEBUG-%08X
%s/bin/%s
BuiltDebug
-allowdebug
Module %s is a debug build
Sys_LoadModule
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\interface.cpp
CreateInterface
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlbuffer.cpp
CUtlCharConversion::CUtlCharConversion
info.m_pReplacementString == 0
CUtlBuffer::Get
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + size - 1 )
CUtlBuffer::GetString
nMaxChars > 0
(GetChar()) == (0)
CUtlBuffer::Put
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlBuffer::VaPrintf
CUtlBuffer::AddNullTermination
m_Memory.IsIdxValid( Index )
UPDATE_STRING_TOKEN_DATABASE
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlstackmachine.cpp
CUtlStackMachineBuilder::AddOperator
op != INVALID_OPERATOR
CUtlStackMachineBuilder::GetLocationForTempVariable
nIdx < 256
nTop >= 2
nTop >= 1
CUtlStreamBuffer does not support TEXT_BUFFER's use CUtlBuffer
c:\buildslave\vrgdc2015_staging_win64\build\src\tier2\utlstreambuffer.cpp
CUtlStreamBuffer::CUtlStreamBuffer
CUtlStreamBuffer::Close
CUtlStreamBuffer::Close() Unable to open file %s!
CUtlStreamBuffer::Close() Write %s failed %d != %d.
CUtlStreamBuffer::StreamPutOverflow
File has not been opened!
CUtlStreamBuffer::ReadBytesFromFile
Unable to read file %s!
CUtlStreamBuffer::StreamGetOverflow
_feature
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_common.cpp
*** Error masking unused parts! Equal sign not found after token "%s"! (line %d)
FEATURES
struct VS_INPUT
struct PS_INPUT
struct GS_INPUT
struct HS_INPUT
struct DS_INPUT
struct HS_OUTPUT
struct DS_PATCH_CONSTANT_INPUT
struct HS_PATCH_CONSTANTS
*** Error masking unused parts! Unknown text found. This is usually caused by a '{' or '}' not tabbed properly or an invalid declaration at the global scope. (line %d):
system.fxc
*** VfxReadAndPrepForDynamicShaderCompileMaterialEditor(1002): Error opening file "%s"!
*** VfxReadAndPrepForDynamicShaderCompileMaterialEditor(1012): Error masking unused parts for "%s"!
#include
PC_SM_3_0
PC SM 3.0
PC_SM_4_0
PC SM 4.0 (D3D10)
PC_SM_4_1
PC SM 4.1 (D3D10.1)
PC_SM_5_0
PC SM 5.0 (D3D11)
PC_SM_3_0_GL
PC SM 3.0 (GLSL)
PC_SM_4_0_GL
PC SM 4.0 (GLSL)
PC_SM_4_1_GL
PC SM 4.1 (GLSL)
PC_SM_5_0_GL
PC SM 5.0 (GLSL)
PC_SM_3_0_VULKAN
PC SM 3.0 (VULKAN)
PC_SM_4_0_VULKAN
PC SM 4.0 (VULKAN)
PC_SM_4_1_VULKAN
PC SM 4.1 (VULKAN)
PC_SM_5_0_VULKAN
PC SM 5.0 (VULKAN)
Vfx Error: attribute unsupported or requires a parameter binding.
Vfx Error: attribute type does not exist or does not support attribute literals.
CVfxShaderAttribute::SetExpressionBuffer
pBufferData != m_pCompiledExpressionBuffer
Shader file version mismatch.  Expected (%d), Got (%d).
CVfxShaderFile::Unserialize
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_shader_file.cpp
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_render_state.cpp
VfxSetStateInRasterizerDesc
VfxIsDefaultRasterizerState
VfxSetStateInDepthStencilDesc
VfxIsDefaultDepthStencilState
VfxSetStateInBlendDesc
VfxIsDefaultBlendState
VfxGetDefaultRenderState
Unknown render state
saturate
SrgbLinearToGamma
SrgbGammaToLinear
TextureSize
c:\buildslave\vrgdc2015_staging_win64\build\src\common\vfx\vfx_param.h
m_pBuffer
CVfxParam::GetDynamicVector4DValue
CVfxParam::GetDynamicTextureHandle
VfxParseAndCompileExpression c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_expression_parser.cpp
Expression
VfxParseAndCompileExpression(366): : Failed to create input stream from "%s"
VfxParseAndCompileExpression(374): : Failed to create lexer from "%s"
VfxParseAndCompileExpression(382): : Failed to create token stream from "%s"
VfxParseAndCompileExpression(390): : Failed to create parser from "%s"
Expression Parser - 
%s[line %d:%d] 
Feature combo %s referenced in expression doesn't exist.
Static combo %s referenced in expression doesn't exist.
Dynamic combo %s referenced in expression doesn't exist.
Shader variable %s is illegal to use in expression. Only artist-editable variables are usable.
Unknown variable name %s.
Function %s() expects %d arguments. Found %d.
%s() isn't a known function.
Swizzle operation only supports up to four channels.
Invalid character '%c' in swizzle operation. Only xyzw or rgba are allowed.
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_expression_parser.cpp
VfxEval
Wrong number of args left on stack!
VfxStaticAnalyzeConstness
Unknown operator in expression
Unaccounted
CUtlMemory<struct CVfxStackMachineBuilder::Constant_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfxexpr.g
1:1: Tokens : ( T__18 | T__19 | T__20 | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | BOOLLITERAL | ID | INTEGERLITERAL | HEXINTEGERLITERAL | FLOATLITERAL | COMMENT | WS );
HEXINTEGERLITERAL
BOOLLITERAL
HEX_DIGIT
COMMENT
UNICODE_ESC
OCTAL_ESC
ESC_SEQ
'return'
'exists'
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfxexpr.g
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\generated_antlr_code\vfxexprparser.c
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\compiletargetexpr.g
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\generated_antlr_code\compiletargetexprparser.c
bad allocation
bad function call
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
0123456789abcdefghijklmnopqrstuvwxyz
0123456789abcdefABCDEF
Unknown exception
_nextafter
2]fQ	?5!
GrJoq>@
?8UUUUU
?UUUUUU
"e?<<<<<<l?
Il?333333c?
d?000000`?
L?UUUUUUU?
&?PPPPPPP?
qS>g?h3
c?FA@s}
?UUUUUU
CorExitProcess
?atan2f
?UUUUUU
AUUUUUU
?E=$% B
?49HoKC
bad exception
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
InitializeCriticalSectionEx
CreateEventExW
CreateSemaphoreExW
SetThreadStackGuarantee
CreateThreadpoolTimer
SetThreadpoolTimer
WaitForThreadpoolTimerCallbacks
CloseThreadpoolTimer
CreateThreadpoolWait
SetThreadpoolWait
CloseThreadpoolWait
FlushProcessWriteBuffers
FreeLibraryWhenCallbackReturns
GetCurrentProcessorNumber
GetLogicalProcessorInformation
SetDefaultDllDirectories
EnumSystemLocalesEx
CompareStringEx
GetDateFormatEx
GetLocaleInfoEx
GetTimeFormatEx
GetUserDefaultLocaleName
IsValidLocaleName
LCMapStringEx
GetCurrentPackageId
GetTickCount64
GetFileInformationByHandleExW
SetFileInformationByHandleW
Tuesday
Wednesday
Thursday
Saturday
January
February
September
October
November
December
MM/dd/yy
dddd, MMMM dd, yyyy
HH:mm:ss
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
@^8U)zj
?8bunz8
?@En[vP
[*ncd>0
S>$hkDh$h>[2
UA>N0Wl
Q5rHg,>
.>PJ;I:qE>
/2GG>!B
zY;>u:m	
0><[cZUg^>
?UUUUUU
No error
Operation not permitted
No such file or directory
No such process
Interrupted function call
Input/output error
No such device or address
Arg list too long
Exec format error
Bad file descriptor
No child processes
Resource temporarily unavailable
Not enough space
Permission denied
Bad address
Resource device
File exists
Improper link
No such device
Not a directory
Is a directory
Invalid argument
Too many open files in system
Too many open files
Inappropriate I/O control operation
File too large
No space left on device
Invalid seek
Read-only file system
Too many links
Broken pipe
Domain error
Result too large
Resource deadlock avoided
Filename too long
No locks available
Function not implemented
Directory not empty
Illegal byte sequence
SunMonTueWedThuFriSat
JanFebMarAprMayJunJulAugSepOctNovDec
-9D	/9a
?3ScR.>
?gibQ^AX>
WR_l%2>
)2STud>
J\;5yTb
<8bunz8
<@En[vP
X 843"8
5m8>8=t
UTF-16LE
UNICODE
__based(
__cdecl
__pascal
__stdcall
__thiscall
__fastcall
__vectorcall
__clrcall
__ptr64
__restrict
__unaligned
restrict(
 delete
operator
`vftable'
`vbtable'
`vcall'
`typeof'
`local static guard'
`string'
`vbase destructor'
`vector deleting destructor'
`default constructor closure'
`scalar deleting destructor'
`vector constructor iterator'
`vector destructor iterator'
`vector vbase constructor iterator'
`virtual displacement map'
`eh vector constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`copy constructor closure'
`udt returning'
`local vftable'
`local vftable constructor closure'
 delete[]
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`managed vector constructor iterator'
`managed vector destructor iterator'
`eh vector copy constructor iterator'
`eh vector vbase copy constructor iterator'
`dynamic initializer for '
`dynamic atexit destructor for '
`vector copy constructor iterator'
`vector vbase copy constructor iterator'
`managed vector copy constructor iterator'
`local static thread guard'
 Type Descriptor'
 Base Class Descriptor at (
 Base Class Array'
 Class Hierarchy Descriptor'
 Complete Object Locator'
template-parameter-
generic-type-
`anonymous namespace'
`non-type-template-parameter
`template-parameter
`vtordispex{
`vtordisp{
`adjustor{
`local static destructor helper'
`template static data member constructor helper'
`template static data member destructor helper'
static 
virtual 
private: 
protected: 
public: 
[thunk]:
extern "C" 
unsigned 
std::nullptr_t
<ellipsis>
,<ellipsis>
 throw(
__int16
__int32
__int64
__int128
<unknown>
wchar_t
signed 
`unknown ecsu'
coclass 
cointerface 
cli::array<
cli::pin_ptr<
MessageBoxW
GetActiveWindow
GetLastActivePopup
GetUserObjectInformationW
GetProcessWindowStation
constmerge
Number of global constants merged
Merge Duplicate Global Constants
llvm.used
llvm.compiler.used
globalopt
Number of globals marked constant
Number of globals marked unnamed_addr
Number of aggregate globals broken into scalars
Number of heap objects SRA'd
Number of globals with initializers stored into them
Number of globals deleted
Number of functions deleted
Number of global uses devirtualized
Number of globals localized
Number of global vars shrunk to booleans
Number of functions converted to fastcc
Number of static ctors evaluated
Number of nest attributes removed
Number of global aliases resolved
Number of global aliases eliminated
Number of global C++ destructors removed
Global Variable Optimizer
notinit
malloc_cont
malloc_ret_null
free_it
llvm.global_ctors
llvm.metadata
always-inline
Inliner for always_inline functions
strip-dead-prototypes
Number of dead prototypes removed
Strip Unused Function Prototypes
Number of functions inlined
Number of call sites deleted, not inlined
Number of functions deleted because all callers found
Number of allocas merged together
Number of caller-callers analyzed
Control the amount of inlining to perform (default = 225)
inline-threshold
Threshold for inlining functions with inline hint
inlinehint-threshold
Number of instructions removed
Number of basic blocks unreachable
Number of instructions removed by IPSCCP
Number of arguments constant propagated by IPSCCP
Number of globals found to be constant by IPSCCP
SCCP: Don't know how to handle: 
Sparse Conditional Constant Propagation
Interprocedural Sparse Conditional Constant Propagation
Number of stores deleted
Number of other instrs removed
Dead Store Elimination
Aggressive Dead Code Elimination
scalarrepl
Number of allocas broken up
Number of allocas promoted
Number of scalar allocas adjusted to allow promotion
Number of aggregates converted to scalar
Scalar Replacement of Aggregates (DT)
scalarrepl-ssa
Scalar Replacement of Aggregates (SSAUp)
dyn.offset
sroa.store.elt
sroa.load.elt
indvars
Number of indvars widened
Number of exit values replaced
Number of loop exit tests replaced
Number of IV sign/zero extends eliminated
Number of congruent IVs eliminated
Verify the ScalarEvolution result after running indvars
verify-indvars
Induction Variable Simplification
indvar.conv
lftr.limit
lftr.wideiv
exitcond
Number of instructions sunk out of loop
Number of instructions hoisted out of loop
Number of load insts hoisted or sunk
Number of call insts hoisted or sunk
Number of memory locations promoted to registers
Disable memory promotion in LICM pass
disable-licm-promotion
scalar-evolution
Loop Invariant Code Motion
.promoted
Enable LSR phi elimination
enable-lsr-phielim
IV.S.next.
.termcond
lsr.chain
loop-reduce
Loop Strength Reduction
3333333333333333UUUUUUUUUUUUUUUU
The cut-off point for automatic loop unrolling
unroll-threshold
Use this unroll count for all loops, for testing purposes
unroll-count
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-partial
Unroll loops with run-time trip counts
unroll-runtime
loop-unroll
Unroll loops
loop-rotate
Number of loops rotated
Rotate Loops
reg2mem
Number of registers demoted
Number of phi-nodes demoted
Demote all values to stack slots
reg2mem alloca point
reassociate
Number of insts reassociated
Number of expr tree annihilated
Number of multiplies factored
Reassociate expressions
simplifycfg
Number of blocks simplified
Simplify the CFG
early-cse
Number of instructions simplified or DCE'd
Number of instructions CSE'd
Number of load instructions CSE'd
Number of call instructions CSE'd
Number of trivial dead stores removed
Early CSE
Number of instructions deleted
Number of loads deleted
Number of instructions PRE'd
Number of blocks merged
Number of instructions simplified
Number of equalities propagated
Number of loads PRE'd
enable-pre
enable-load-pre
Max recurse depth (default = 1000)
max-recurse-depth
Global Value Numbering
.pre-phi
correlated-value-propagation
Number of phis propagated
Number of selects propagated
Number of memory access targets propagated
Number of comparisons propagated
Number of switch cases removed
correlated-propagation
Value Propagation
codegenprepare
Number of blocks eliminated
Number of trivial PHIs eliminated
Number of GEPs converted to casts
Number of uses of Cmp expressions replaced with uses of sunken Cmps
Number of uses of Cast expressions replaced with uses of sunken Casts
Number of memory instructions whose address computations were sunk
Number of [s|z]ext instructions combined with loads
Number of uses of [s|z]ext instructions optimized
Number of return instructions duplicated
Number of debug value instructions moved
Number of selects turned into branches
Disable branch optimizations in CodeGenPrepare
disable-cgp-branch-opts
Disable select to branch conversion.
disable-cgp-select2branch
instcombine
Number of insts combined
Number of constant folds
Number of dead inst eliminated
Number of instructions sunk
Number of expansions
Number of factorizations
Number of reassociations
Enable unsafe double to float shrinking for math lib calls
enable-double-float-shrink
Combine redundant instructions
__gnat_eh_personality
__gxx_personality_v0
__objc_personality_v0
addconv
diff.neg
.masked
and.shrunk
.demorgan
bitfield
sadd.result
sadd.overflow
uadd.overflow
.unshifted
tmpcast
sqrtfcall
Number of library calls simplified
umul_with_overflow
extract
extract.t
Number of dead stores eliminated
Number of allocas copied from constant global
storemerge
mem2reg
Number of alloca's promoted
Promote Memory to Register
loop-simplify
Number of pre-header or exit blocks inserted
Number of nested loops split out
Canonicalize natural loops
.preheader
.split-lp
.nonloopexit
.loopexit
.backedge
instsimplify
Number of redundant instructions removed
Remove redundant instructions
lpad.phi
Number of unreachable basic blocks removed
branch_weights
.lpad-body
eh.lpad-body
savedstack
Number of alloca's promoted within one block
Number of alloca's promoted with a single store
Number of dead alloca's removed
Number of PHI nodes inserted
Number of live out of a loop variables
Loop-Closed SSA Form Pass
Number of IV identities eliminated
Number of IV operands folded into a use
Number of IV remainder operations eliminated
Number of IV comparisons eliminated
break-crit-edges
Number of blocks inserted
Break critical edges in CFG
_crit_edge
.split2
.split1
Number of loops completely unrolled
Number of loops unrolled (completely or otherwise)
.reg2mem
.reload
Number of switch instructions turned into bitmaps
Number of switch instructions turned into lookup tables
Number of common instructions sunk down to the end block
Number of speculative executed instructions
Control the amount of phi node folding to perform (default = 1)
phi-node-folding-threshold
Duplicate return instructions into unconditional branches
simplifycfg-dup-ret
Sink common instructions down to the end block
simplifycfg-sink-common
Hoist conditional stores if an unconditional store preceeds
simplifycfg-hoist-cond-stores
infloop
or.cond
not.cond
and.cond
brmerge
switch.table
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.gep
switch.load
switch.lookup
switch.tableidx
strnlen
strncmp
strncpy
__memcpy_chk
putchar
__memmove_chk
__memset_chk
__strcpy_chk
__stpcpy_chk
__strncpy_chk
__stpncpy_chk
Treat error-reporting calls as cold
error-reporting-is-cold
strrchr
strcmpload
strlenfirst
strpbrk
chardiff
powrecip
__sincospi_stretf
__sincospi_stret
sincospi
isdigittmp
isdigit
isascii
iprintf
siprintf
fiprintf
lowerinvoke
Number of invokes replaced
Number of registers live across unwind edges
Make the -lowerinvoke pass insert expensive, but correct, EH code
enable-correct-eh-support
Number of loops unrolled with run-time trip counts
.unr-lcssa
.unr2-lcssa
.unr1-lcssa
xtraiter
unr.cmp
basiccg
CallGraph Construction
CallGraph Root is: 
<<null function: 0x
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
> calls 
function '
external node
inline-cost
Number of call sites analyzed
Inline Cost Analysis
cgscc-passmgr
Maximum CGSCCPassMgr iterations on one SCC
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
basicaa
Basic Alias Analysis (stateless AA impl)
memset_pattern16
enable-tbaa
Type-Based Alias Analysis
domfrontier
Dominance Frontier Construction
  DomFrontier for BB 
 <<exit node>>
<<exit node>>
Number of trip counts computed with array length
Number of loops with predictable loop counts
Number of loops without predictable loop counts
Number of loops with trip counts computed by force
Maximum number of iterations SCEV will symbolically execute a constant derived loop
scalar-evolution-max-iterations
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev
Scalar Evolution Analysis
(trunc 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
max backedge-taken count is 
Unpredictable max backedge-taken count. 
Classifying expressions for: 
  -->  
		Exits: 
<<Unknown>>
Determining loop execution counts for: 
SCEVValidator: SCEV for loop '
' changed from '
llvm.loop
Verify loop info (time consuming)
verify-loop-info
Natural Loop Information
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
postdomtree
Post-Dominator Tree Construction
=============================--------------------------------
Inorder PostDominator Tree: 
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
memory-builtins
Number of arguments with unsolved size and offset
Number of load instructions with unsolved size and offset
Alias Analysis
Number of fully cached non-local responses
Number of dirty cached non-local responses
Number of uncached non-local responses
Number of fully cached non-local ptr responses
Number of cached, but dirty, non-local ptr responses
Number of uncached non-local ptr responses
Number of block queries that were completely cached
Memory Dependence Analysis
Loop Pass Manager
<deleted>
Loop Pass Manager
uglygep
scevgep
.iv.next
indvar.next
iv-users
Induction Variable Users
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
Target Information
copysign
copysignf
copysignl
No target information
.phi.trans.insert
lazy-value-info
Lazy Value Information Analysis
Array pairs tested
Separable subscript pairs
Coupled subscript pairs
Nonlinear subscript pairs
ZIV applications
ZIV independence
Strong SIV applications
Strong SIV successes
Strong SIV independence
Weak-Crossing SIV applications
Weak-Crossing SIV successes
Weak-Crossing SIV independence
Exact SIV applications
Exact SIV successes
Exact SIV independence
Weak-Zero SIV applications
Weak-Zero SIV successes
Weak-Zero SIV independence
Exact RDIV applications
Exact RDIV independence
Symbolic RDIV applications
Symbolic RDIV independence
Delta applications
Delta successes
Delta independence
Delta propagations
GCD applications
GCD successes
GCD independence
Banerjee applications
Banerjee independence
Banerjee successes
Try to delinearize array references.
da-delinearize
No Alias Analysis (always returns 'may' alias)
_IO_getc
_IO_putc
_ZdaPvRKSt9nothrow_t
_ZdlPvRKSt9nothrow_t
_ZnajRKSt9nothrow_t
_ZnamRKSt9nothrow_t
_ZnwjRKSt9nothrow_t
_ZnwmRKSt9nothrow_t
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__isoc99_scanf
__isoc99_sscanf
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__strdup
__strndup
__strtok_r
clearerr
closedir
ctermid
fgetpos
flockfile
fopen64
fprintf
fseeko64
fsetpos
fstat64
fstatvfs
fstatvfs64
ftello64
ftrylockfile
funlockfile
getc_unlocked
getchar
getitimer
getlogin_r
getpwnam
gettimeofday
lstat64
memalign
memccpy
memmove
memrchr
nearbyint
nearbyintf
nearbyintl
opendir
posix_memalign
readlink
realloc
reallocf
realpath
setitimer
setvbuf
snprintf
sprintf
statvfs
statvfs64
stpncpy
strcasecmp
strcoll
strcspn
strncasecmp
strncat
strndup
strtok_r
strtold
strtoll
strtoul
strtoull
strxfrm
tmpfile
tmpfile64
toascii
unsetenv
vfprintf
vfscanf
vprintf
vsnprintf
vsprintf
vsscanf
targetlibinfo
Target Library Information
fwrite$UNIX2003
fputs$UNIX2003
_copysign
Verify dominator info (time consuming)
verify-dom-info
domtree
Dominator Tree Construction
DominatorTree is not up to date!
Computed:
Actual:
disable-debug-info-verifier
							
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlsymbol.cpp
CUtlSymbol::Find
Unaccounted
CUtlSymbolTable::Find
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlsymbol.cpp
CUtlSymbol::AddString
Unaccounted
CUtlSymbolTable::AddString
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlsymbol.cpp
CUtlSymbolTable::AddString
pPool->m_SpaceUsed < 0xFFFF
CUtlRBTree<class CUtlSymbolTable::CStringPoolIndex,unsigned short,class CUtlSymbolTable::CLess,class CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short> >::Insert
!"Allowing insert of dupe without explicit dupe insertion. Fix code callpoint to allow dupes."
CUtlRBTree<class CUtlSymbolTable::CStringPoolIndex,unsigned short,class CUtlSymbolTable::CLess,class CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short> >::RemoveAll
CUtlRBTree<class CUtlSymbolTable::CStringPoolIndex,unsigned short,class CUtlSymbolTable::CLess,class CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short> >::NewNode
Unaccounted
CUtlMemory<struct CUtlSymbolTable::StringPool_t *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
[*ncd>TQ
\>$hkDh$h>
>+>ZQ"v
?N]TUUU
?UUUUUU
,HR><y5
<?WUUUUU
?WUUUUU
>+>ZQ"v
[*ncd>TQ
\>$hkDh$h>
[*ncd>TQ
\>$hkDh$h>
1<.	/>:
r	Vr.>T
*StO9>T
K~Je#>!
bp(=>?g
BC?>6t9^	c:>
c [1>H'
	kE>fvw
V6E>`"(5
RSDS	qXZ
c:\buildslave\vrgdc2015_staging_win64\build\src\vfx\vfx_gl\Releasegl\win64\vfx_gl.pdb
vfx_gl.dll
BinaryProperties_GetValue
CreateInterface
__crt_debugger_hook
antlr3BaseRecognizerNew
antlr3BitsetCopy
antlr3BitsetList
antlr3BitsetLoad
antlr3BitsetNew
antlr3BitsetOf
antlr3BitsetSetAPI
antlr3CommonTokenDebugStreamSourceNew
antlr3CommonTokenNew
antlr3CommonTokenStreamNew
antlr3CommonTokenStreamSourceNew
antlr3EnumNew
antlr3ExceptionNew
antlr3Hash
antlr3HashTableNew
antlr3IntStreamNew
antlr3IntTrieNew
antlr3LexerNew
antlr3LexerNewStream
antlr3ListNew
antlr3MTExceptionNew
antlr3NewAsciiStringCopyStream
antlr3NewAsciiStringInPlaceStream
antlr3NewUCS2StringInPlaceStream
antlr3ParserNew
antlr3ParserNewStream
antlr3ParserNewStreamDbg
antlr3RecognitionExceptionNew
antlr3SetTokenAPI
antlr3SetVectorApi
antlr3StackNew
antlr3StringFactoryNew
antlr3TokenFactoryNew
antlr3TokenStreamNew
antlr3UCS2StringFactoryNew
antlr3VectorFactoryNew
antlr3VectorNew
antlr3dfapredict
antlr3dfaspecialStateTransition
antlr3dfaspecialTransition
compiletargetexprLexerNew
compiletargetexprLexerNewSSD
compiletargetexprParserNew
compiletargetexprParserNewSSD
fillBufferExt
hlslvariablesLexerNew
hlslvariablesLexerNewSSD
hlslvariablesParserNew
hlslvariablesParserNewSSD
vfxexprLexerNew
vfxexprLexerNewSSD
vfxexprParserNew
vfxexprParserNewSSD
glGetString
OPENGL32.dll
SDL_CreateWindow
SDL_DestroyWindow
SDL_GL_GetProcAddress
SDL_GL_SetAttribute
SDL_GL_CreateContext
SDL_GL_MakeCurrent
SDL_GL_DeleteContext
SDL_InitSubSystem
SDL_QuitSubSystem
SDL_WasInit
SDL2.dll
AssertMsg_ConditionFailed
g_pMemAlloc
CMemAllocSystemInitialize
PushMiniProfilerTS
PopMiniProfilerTS
AppendMiniProfilerToList
RemoveMiniProfilerFromList
g_pGlobalMiniProfilers
Plat_IsInDebugSession
Plat_ExitProcess
LoggingSystem_RegisterLoggingChannel
GetDefaultMiniDumpTypeFlags
InvokeMiniDumpHandler
CommandLine
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@VColor@@PEBDZZ
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@AEBULeafCodeInfo_t@@PEBDZZ
Warning
HangWatchdogInternal_BeginScope
HangWatchdogInternal_EndScope
Plat_ShouldCollectMiniDumpsForFatalErrors
?Lock@CThreadFastMutex@@AECAXII@Z
LOG_GENERAL
Plat_GetModuleFilename
Plat_GetModuleProcAddress
Plat_LoadModule
Plat_UnloadModule
Plat_GetTime
GetCPUInformation
tier0.dll
RegisterStringToken
RandomFloat
vstdlib.dll
GetCurrentThreadId
ReleaseMutex
WaitForSingleObject
CreateMutexA
TlsAlloc
TlsGetValue
TlsSetValue
TlsFree
CloseHandle
LocalFree
FormatMessageA
InitializeCriticalSection
EnterCriticalSection
LeaveCriticalSection
DeleteCriticalSection
GetModuleHandleW
GetProcAddress
GetCurrentDirectoryW
CreateFileW
DeleteFileW
GetFileAttributesW
GetFileInformationByHandle
GetFileType
ReadFile
RemoveDirectoryW
GetLastError
GetModuleFileNameW
MultiByteToWideChar
WideCharToMultiByte
GetStdHandle
GetProcessTimes
GetCurrentProcess
GetCurrentProcessId
GetConsoleScreenBufferInfo
SetConsoleTextAttribute
GetConsoleMode
SetLastError
TerminateProcess
SetUnhandledExceptionFilter
GetSystemTimeAsFileTime
LCMapStringW
FreeLibrary
LoadLibraryExA
CreateFileMappingA
EncodePointer
DecodePointer
GetStringTypeW
IsDebuggerPresent
IsProcessorFeaturePresent
RtlPcToFileHeader
RaiseException
RtlLookupFunctionEntry
RtlUnwindEx
GetCommandLineA
LoadLibraryExW
ExitProcess
GetModuleHandleExW
SetStdHandle
GetDriveTypeW
GetFullPathNameA
GetCPInfo
RtlCaptureContext
RtlVirtualUnwind
UnhandledExceptionFilter
InitializeCriticalSectionAndSpinCount
GetStartupInfoW
GetLocaleInfoW
IsValidLocale
GetUserDefaultLCID
EnumSystemLocalesW
IsValidCodePage
GetOEMCP
GetModuleFileNameA
QueryPerformanceCounter
GetEnvironmentStringsW
FreeEnvironmentStringsW
FlushFileBuffers
WriteFile
GetConsoleCP
SetFilePointerEx
ReadConsoleW
WriteConsoleW
OutputDebugStringW
KERNEL32.dll
?DevWarning@@YAXPEBDZZ
CreateSimpleThread
ReleaseThreadHandle
GetThreadedLoadLibraryFunc
StackToolsNotify_LoadedModule
StackToolsNotify_BeginLoadingModule
StackToolsNotify_EndLoadingModule
Plat_GetEnv
g_Telemetry
Plat_FloatTime
<premain>
DXT1DXT3DXT5
INTZRAWZDF16DF24ATI2ATI1
0'>0c*>
pb>pAf>
-?[`/?291?
RD?4KF?=GH?9FJ?8HL?
a?y#c?sIe?
0123456789ABCDEF
Copyright (c) 1992-2004 by P.J. Plauger, licensed by Dinkumware, Ltd. ALL RIGHTS RESERVED.
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
.?AV?$CUtlMemory@HH@@
.?AV?$CUtlMemory@UShaderParamInsertString_t@@H@@
.?AV?$CUtlVectorBase@UVariableValue_t@@V?$CUtlMemory@UVariableValue_t@@H@@@@
.?AV?$CUtlMemory@UVariableValue_t@@H@@
.?AV?$CUtlMemory@PEADH@@
.?AV?$CUtlMemory@EH@@
.?AV?$CUtlMemory@VCUtlString@@H@@
.?AV?$CUtlMemory@UVsInputSignatureElement_t@@H@@
.?AV?$CUtlVectorBase@EV?$CUtlMemory@EH@@@@
.?AV?$CUtlMemory@VCVfxShaderAttribute@@H@@
.?AV?$CUtlMemory@VCVfxVariableDescription@@H@@
.?AV?$CUtlMemory@VCVfxTextureChannelProcessor@@H@@
.?AV?$CUtlMemory@UConstantBufferDescription_t@@H@@
.?AV?$CUtlVectorBase@PEAVCVfxParsedShaderParam@@V?$CUtlMemory@PEAVCVfxParsedShaderParam@@H@@@@
.?AV?$CUtlMemory@PEAVCVfxParsedShaderParam@@H@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@VCUtlString@@VCVfxAnnotation@@GP6A_NAEBV1@0@Z@@G@@G@@
.?AV?$CUtlVectorBase@PEAVCVfxStructMember@@V?$CUtlMemory@PEAVCVfxStructMember@@H@@@@
.?AV?$CUtlMemory@PEAVCVfxStructMember@@H@@
.?AV?$CUtlMemory@UVfxShaderMacro_t@@H@@
.?AV?$CUtlMemory@UVfxUniformInfo_t@@H@@
.?AV?$CUtlMemory@UVfxUniformBlockInfo_t@@H@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@VCUtlString@@PEAVCVfxParsedShaderParam@@GP6A_NAEBV1@0@Z@@G@@G@@
.?AV?$CUtlMemory@PEAVCVfxParsedConstantBuffer@@H@@
.?AV?$CUtlMemory@PEAVCVfxStructDecl@@H@@
.?AV?$CUtlMemory@PEAVVfxParsedInputSignatureElement_t@@H@@
.?AV?$CUtlVectorBase@VCUtlString@@V?$CUtlMemory@VCUtlString@@H@@@@
.?AV?$CUtlVectorBase@HV?$CUtlMemory@HH@@@@
.?AV?$CUtlVectorBase@UVfxShaderMacro_t@@V?$CUtlMemory@UVfxShaderMacro_t@@H@@@@
.?AUID3DInclude@@
.?AVCVfxDx11Include@@
.?AVerror_category@std@@
.?AV_Generic_error_category@std@@
.?AV_Iostream_error_category@std@@
.?AV_System_error_category@std@@
.?AV?$CFmtStrN@$0BAA@$0A@@@
.?AVCFakeSamplerShaderParamBuilder@@
.?AVCShaderParamBuilder@@
.?AVIHlslParserCallbacks@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@IPEAVCVfxEntrypointsGL@@GP6A_NAEBI0@Z@@G@@G@@
.?AV?$CUtlRBTree@UNode_t@?$CUtlMap@IPEAVCVfxEntrypointsGL@@GP6A_NAEBI0@Z@@GVCKeyLess@2@V?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@IPEAVCVfxEntrypointsGL@@GP6A_NAEBI0@Z@@G@@G@@@@
.?AVCVfxEntrypointsGL@@
.?AVCVfxContextMgrGL@@
.?AV?$CUtlVectorBase@W4VfxCompileTarget_t@@V?$CUtlMemory@W4VfxCompileTarget_t@@H@@@@
.?AV?$CUtlMemory@W4VfxCompileTarget_t@@H@@
.?AVIVfx@@
.?AVCVfxGL@@
.?AVruntime_error@std@@
.?AVexception@std@@
.?AVfailure@ios_base@std@@
.?AVsystem_error@std@@
.?AV_System_error@std@@
.?AVbad_cast@std@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@VCUtlString@@HGP6A_NAEBV1@0@Z@@G@@G@@
.?AV?$CUtlRBTree@UNode_t@?$CUtlMap@VCUtlString@@HGP6A_NAEBV1@0@Z@@GVCKeyLess@2@V?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@VCUtlString@@HGP6A_NAEBV1@0@Z@@G@@G@@@@
.?AVios_base@std@@
.?AV?$_Iosb@H@std@@
.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV_Facet_base@std@@
.?AVfacet@locale@std@@
.?AUctype_base@std@@
.?AV?$ctype@D@std@@
.?AVCVfxShaderReparserGL@@
.?AV?$CUtlVectorBase@UVfxUniformInfo_t@@V?$CUtlMemory@UVfxUniformInfo_t@@H@@@@
.?AV?$CUtlVectorBase@UVfxUniformBlockInfo_t@@V?$CUtlMemory@UVfxUniformBlockInfo_t@@H@@@@
.?AVIVfxShaderValidator@@
.?AVCVfxShaderValidatorGL@@
.P6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
.?AVCVfxShaderValidatorGLslang@@
.?AVTCompiler@@
.?AVTShHandleBase@@
.?AVPrivateManager@gla@@
.?AVManager@gla@@
.?AVGlslManager@gla@@
.?AVspirvbin_t@spv@@
.?AVspirvbin_base_t@spv@@
.?AV?$_Func_base@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@P6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0A@@std@@V?$allocator@V?$_Func_class@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@
.?AV?$CUtlMemory@MH@@
.?AV?$CUtlVectorBase@MV?$CUtlMemory@MH@@@@
.?AV?$CUtlVectorBase@PEAVCVfxParsedConstantBuffer@@V?$CUtlMemory@PEAVCVfxParsedConstantBuffer@@H@@@@
.?AV?$CUtlVectorBase@PEAVCVfxStructDecl@@V?$CUtlMemory@PEAVCVfxStructDecl@@H@@@@
.?AV?$CUtlVectorBase@PEAVVfxParsedInputSignatureElement_t@@V?$CUtlMemory@PEAVVfxParsedInputSignatureElement_t@@H@@@@
.?AV?$CUtlVectorBase@UShaderParamInsertString_t@@V?$CUtlMemory@UShaderParamInsertString_t@@H@@@@
.?AV?$CUtlVectorBase@URewriteCmd_t@CStreamRewriter@@V?$CUtlMemory@URewriteCmd_t@CStreamRewriter@@H@@@@
.?AV?$CUtlMemory@URewriteCmd_t@CStreamRewriter@@H@@
.?AV?$CUtlRBTree@UNode_t@?$CUtlMap@VCUtlString@@VCVfxAnnotation@@GP6A_NAEBV1@0@Z@@GVCKeyLess@2@V?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@VCUtlString@@VCVfxAnnotation@@GP6A_NAEBV1@0@Z@@G@@G@@@@
.?AV?$CUtlRBTree@UNode_t@?$CUtlMap@VCUtlString@@PEAVCVfxParsedShaderParam@@GP6A_NAEBV1@0@Z@@GVCKeyLess@2@V?$CUtlMemory@U?$UtlRBTreeNode_t@UNode_t@?$CUtlMap@VCUtlString@@PEAVCVfxParsedShaderParam@@GP6A_NAEBV1@0@Z@@G@@G@@@@
.?AVCHlslParser@@
.?AVIStreamRewriter@@
.?AVCStreamRewriter@@
.?AV?$CUtlVectorBase@PEADV?$CUtlMemory@PEADH@@@@
.?AV?$CUtlMemory@UConstantBufferVariable_t@@H@@
.?AV?$CUtlVectorBase@VCVfxShaderAttribute@@V?$CUtlMemory@VCVfxShaderAttribute@@H@@@@
.?AV?$CUtlVectorBase@VCVfxVariableDescription@@V?$CUtlMemory@VCVfxVariableDescription@@H@@@@
.?AV?$CUtlVectorBase@VCVfxTextureChannelProcessor@@V?$CUtlMemory@VCVfxTextureChannelProcessor@@H@@@@
.?AV?$CUtlVectorBase@UConstantBufferDescription_t@@V?$CUtlMemory@UConstantBufferDescription_t@@H@@@@
.?AV?$CUtlMemory@V?$CUtlHashtableEntry@IH@@H@@
.?AV?$CUtlVectorBase@UConstantBufferVariable_t@@V?$CUtlMemory@UConstantBufferVariable_t@@H@@@@
.?AV?$CUtlMemory@UConstant_t@CVfxStackMachineBuilder@@H@@
.?AV?$CUtlVectorBase@ULineInfo_t@@V?$CUtlMemory@ULineInfo_t@@H@@@@
.?AV?$CUtlMemory@ULineInfo_t@@H@@
.?AV?$CUtlVectorBase@UVsInputSignatureElement_t@@V?$CUtlMemory@UVsInputSignatureElement_t@@H@@@@
.?AVCUtlStackMachineBuilder@@
.?AVIExpressionShaderVariableCallback@@
.?AVCVfxStackMachineBuilder@@
.?AVCExpressionParserCallback@@
.?AVTProgram@glslang@@
.?AVTShader@glslang@@
.?AVTReflection@glslang@@
.?AVTInputScanner@glslang@@
.?AVTScanContext@glslang@@
.?AVTDeferredCompiler@glslang@@
.?AVTType@glslang@@
.?AVTConstUnionArray@glslang@@
.?AVTVariable@glslang@@
.?AVTSymbol@glslang@@
.?AVTFunction@glslang@@
.?AVTAnonMember@glslang@@
.?AVTIntermOperator@glslang@@
.?AVTIntermTyped@glslang@@
.?AVTIntermNode@@
.?AVTIntermAggregate@glslang@@
.?AVTIntermUnary@glslang@@
.?AVTIntermBinary@glslang@@
.?AVTIntermConstantUnion@glslang@@
.?AVTIntermSelection@glslang@@
.?AVTIntermBranch@glslang@@
.?AVTIntermMethod@glslang@@
.?AVTIntermSymbol@glslang@@
.?AVTIntermLoop@glslang@@
.?AVTIntermTraverser@glslang@@
.?AVTOutputTraverser@glslang@@
.?AVTFinalLinkTraverser@?CN@??finalCheck@TIntermediate@glslang@@QEAAXAEAVTInfoSink@@@Z@
.?AVTIntermSwitch@glslang@@
.?AVTParseContext@glslang@@
.?AVTPpContext@glslang@@
.?AVtInput@TPpContext@glslang@@
.?AVtStringInput@TPpContext@glslang@@
.?AVTLiveTraverser@glslang@@
.?AVTBuiltIns@glslang@@
.?AVTInductiveTraverser@glslang@@
.?AVTIndexTraverser@glslang@@
.?AVTConstTraverser@glslang@@
.?AVtMacroInput@TPpContext@glslang@@
.?AVtMarkerInput@TPpContext@glslang@@
.?AVtZeroInput@TPpContext@glslang@@
.?AVtTokenInput@TPpContext@glslang@@
.?AVtUngotTokenInput@TPpContext@glslang@@
.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@
.?AVcodecvt_base@std@@
.?AVTGlslangToSpvTraverser@?A0xcb73d7f1@@
.?AV?$codecvt@DDH@std@@
.?AV<lambda_6f719c6c199eaddc0e49fecaee674211>@@
.?AV<lambda_7e28b0378303a505c1ffba36e8587fa6>@@
.?AV<lambda_94b4714f6949fca7d909baebfb92c313>@@
.?AV<lambda_fdaac718e765a8e67b236884d586ea0e>@@
.?AV<lambda_a31d918dcffdae02e933ddf6fc641430>@@
.?AV<lambda_e25315ee7c57c4c02ad7230b5d3f821a>@@
.?AV<lambda_df97597251f0127efdd719302cb9004d>@@
.?AV<lambda_fac224239e0e3f6903be2e2a1b2a22e4>@@
.?AV<lambda_3cd8e62bfc1ecc53b00d7538103511b3>@@
.?AV<lambda_0620b2ba79f697fc3633ffd688e6d609>@@
.?AV<lambda_986383f984d9642bbab48a14b2269d48>@@
.?AV<lambda_ebac2e3389fe7382b65a2059a1915cff>@@
.?AV<lambda_6c8a8abf124582da7504ebf13d6de603>@@
.?AV<lambda_55865c3babdeb92ec9b2649be15e3260>@@
.?AV<lambda_2585712c8f4e79045bff2bb5898b442b>@@
.?AV<lambda_48796c9a818ada77c8caff50cf46d9a6>@@
.?AV<lambda_b91bfaf7a3167512ff3d1144d70039d3>@@
.?AV<lambda_763fc98a5ff01765ac719ddefb175722>@@
.?AV<lambda_f10f71a264c608907481a946f7159d33>@@
.?AV<lambda_af7fd08ce7cece44652dfdfc60125ac4>@@
.?AV<lambda_ca71678a2218766ce90e293cf7389a60>@@
.?AV<lambda_70f1012cadff2d71e3e710e2161de444>@@
.?AV<lambda_5b346afe106d347b2fa6d00deda0c034>@@
.?AV<lambda_1d56295990b797f73cca864be96a8792>@@
.?AV?$_Func_base@_NW4Op@spv@@I@std@@
.?AV?$_Func_base@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_6f719c6c199eaddc0e49fecaee674211>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_7e28b0378303a505c1ffba36e8587fa6>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_94b4714f6949fca7d909baebfb92c313>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_fdaac718e765a8e67b236884d586ea0e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_a31d918dcffdae02e933ddf6fc641430>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_e25315ee7c57c4c02ad7230b5d3f821a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_df97597251f0127efdd719302cb9004d>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_fac224239e0e3f6903be2e2a1b2a22e4>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_3cd8e62bfc1ecc53b00d7538103511b3>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0620b2ba79f697fc3633ffd688e6d609>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_986383f984d9642bbab48a14b2269d48>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_ebac2e3389fe7382b65a2059a1915cff>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_6c8a8abf124582da7504ebf13d6de603>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_55865c3babdeb92ec9b2649be15e3260>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2585712c8f4e79045bff2bb5898b442b>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_48796c9a818ada77c8caff50cf46d9a6>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_b91bfaf7a3167512ff3d1144d70039d3>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_763fc98a5ff01765ac719ddefb175722>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_f10f71a264c608907481a946f7159d33>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_af7fd08ce7cece44652dfdfc60125ac4>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_ca71678a2218766ce90e293cf7389a60>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_70f1012cadff2d71e3e710e2161de444>@@$0A@@std@@V?$allocator@V?$_Func_class@_NW4Op@spv@@I@std@@@2@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b346afe106d347b2fa6d00deda0c034>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1d56295990b797f73cca864be96a8792>@@$0A@@std@@V?$allocator@V?$_Func_class@XAEAI@std@@@2@XAEAI@std@@
.?AVFunction@spv@@
.?AVModule@spv@@
.?AVInstruction@spv@@
.?AVBlock@spv@@
.?AVBuilder@spv@@
.?AVUser@llvm@@
.?AVValue@llvm@@
.?AVInstruction@llvm@@
.?AV?$ilist_node@VInstruction@llvm@@@llvm@@
.?AV?$ilist_half_node@VInstruction@llvm@@@llvm@@
.?AVUnaryInstruction@llvm@@
.?AVICmpInst@llvm@@
.?AVCmpInst@llvm@@
.?AVFCmpInst@llvm@@
.?AVCallInst@llvm@@
.?AVExtractValueInst@llvm@@
.?AVTGlslangToTopTraverser@@
.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@
.?AV?$numpunct@D@std@@
.?AVBackEndTranslator@gla@@
.?AVBackEnd@gla@@
.?AVGlslTranslator@gla@@
.?AVGlslBackEnd@@
.?AVGlslTarget@gla@@
.?AVAssignment@@
.?AVGetElementPtrInst@llvm@@
.?AVInsertValueInst@llvm@@
.?AVPass@llvm@@
.?AVModulePass@llvm@@
.?AVDataLayout@llvm@@
.?AVImmutablePass@llvm@@
.?AVBottomTranslator@?A0x02c5db27@@
.?AVSelectInst@llvm@@
.?AVFunctionPass@llvm@@
.?AVDecomposeInsts@?A0x3149359b@@
.?AVCoalesceInserts@?A0xae19cbfb@@
.?AVFlattenCondAssn@?A0x3eeae16d@@
.?AVCanonicalizeCFG@?A0xb3143475@@
.?AVCanonicalizeInsts@?A0x1dc5eb0d@@
.?AVBackEndPointer@gla_llvm@@
.?AVIntrinsicCombine@?A0x76e7eea2@@
.?AVPHINode@llvm@@
.?AVScalarize@?A0x9bbb7adf@@
.?AVGatherInsts@?A0x7c841de7@@
.?AVIdentifyStructures@gla_llvm@@
.?AVCallbackVH@llvm@@
.?AVValueHandleBase@llvm@@
.?AV?$ValueMapCallbackVH@PEBVValue@llvm@@VWeakVH@2@U?$ValueMapConfig@PEBVValue@llvm@@@2@@llvm@@
.?AVCUtlCharConversion@@
.?AVCUtlCStringConversion@@
.?AVCUtlNoEscConversion@@
.?AVCVfxShaderFile@@
.?AVCVfxShaderFileVulkan@@
.?AV?$CUtlVectorBase@UConstant_t@CVfxStackMachineBuilder@@V?$CUtlMemory@UConstant_t@CVfxStackMachineBuilder@@H@@@@
.?AVbad_alloc@std@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVbad_function_call@std@@
.?AV_Locimp@locale@std@@
.?AVtype_info@@
.?AVbad_exception@std@@
.?AVDNameNode@@
.?AVcharNode@@
.?AVpcharNode@@
.?AVpDNameNode@@
.?AVDNameStatusNode@@
.?AVpairNode@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@VCStringPoolIndex@CUtlSymbolTable@@G@@G@@
.?AV?$CUtlVectorBase@PEAUStringPool_t@CUtlSymbolTable@@V?$CUtlMemory@PEAUStringPool_t@CUtlSymbolTable@@H@@@@
.?AV?$CUtlMemory@PEAUStringPool_t@CUtlSymbolTable@@H@@
.?AV?$CUtlRBTree@VCStringPoolIndex@CUtlSymbolTable@@GVCLess@2@V?$CUtlMemory@U?$UtlRBTreeNode_t@VCStringPoolIndex@CUtlSymbolTable@@G@@G@@@@
?UUUUUU
?bXM`8q
?v]37:1
?*!=7FX
?+uigR5
?0E/M()
?f_Fa,N
?/1u73;
?d*{3,Z
