!This program cannot be run in DOS mode.
`.rdata
@_RDATA
@.reloc
|$ ATAVAWH
 A_A^A\
L$ SVWH
\$0f	48H
s WATAVH
UVWAUAVH
A^A]_^]
UVWAUAVH
A^A]_^]
UVWAUAVH
A^A]_^]
UWAUAVAWH
A_A^A]_]
UWATAVAWH
t,Ic~`A;~pu
A_A^A\_]
@USVWATAVH
tuHc^`;^pu
A^A\_^[]
SUVWATAUAVAWH
HA_A^A]A\_^][
WATAUAVAWH
 A_A^A]A\_
@USVWATAVAWH
A_A^A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAVAWH
A_A^A\_^[]
F A9F@u
D9Q@~@E
UATAUAVAWH
A_A^A]A\]
@UVAUAWH
HA_A]^]
UATAUAVAWH
A_A^A]A\]
L$(D9i@
L$ D;h@
D9A@~$E
{ A9G@u
D$HA;^@
UWATAUAVI
|$,D9q@
A^A]A\_]
D;A`}1H
D;A@}1H
T$`H;T$p
USVWATAWH
)L$`L9A(
Ic_p9^@t
A_A\_^[]
l$@9{`~&H
t$ ATAVAWH
@A_A^A\H
|$ ATAVAWH
D9u$~yH
@A_A^A\H
D9A@~,E
ATAUAWH
0A_A]A\
UVWATAUAVAWH
A_A^A]A\_^]
ATAUAWH
E(Lc`pE3
0A_A]A\
D9A@~'E
Q(E;B@|
D9A@~,E
D9A@~ E
l$@;F@suH
D$(D9W@~k
E9AX~13
9w@~iE3
@USVWATAVAWH
A_A^A\_^[]
USVWATAUAVAWH
A_A^A]A\_^[]
UATAUAVAWH
LcfXD;fhu
fXLcn0A
LcfXD;fhu
N0HcN0H
LcfXD;fhu
Lc~XD;~hu
A_A^A]A\]
WATAUAVAWH
nhI+~PE3
0A_A^A]A\_
UVWATAUAVAWH
Hc{X;{hu
PXHcK0H
D;khuJH
EH;C@uMH
D;khuJH
LckXD;khuJH
D;khuJH
Hc{X;{hu
PA_A^A]A\_^]
oHHcw0;w@u
D$8;{hu
D$(fD9p
ATAVAWH
0A_A^A\
` UAVAWH
L$ SUVWATAUAWH
PA_A]A\_^][
USATAVI
@SUWATAVAWH
xA_A^A\_][
@UAVAWH
t$`JcT(dH
@USWATH
AhHcQdH
@USVWAWH
t(LcK E3
Hc{ ;{0u
H9Y u+IcH@3
@SATAWH
)D$ Hc{
UWATAUAVH
A^A]A\_]
X UWATAUAWH
A_A]A\_]
F4LcupD;
@UAVAWH
F4Mc~pE;
C4Hcwp;
@USVWAVH
AxHcApLcR4M
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
Ic^,Ic~$
IcN$Ic^,Ic~
UVATAUAVI
A^A]A\^]
uuLc{HD;{XuTH
t1Hck(H
t(LcJ@E3
UVWATAUAVAWH
mPA9}dt$IcE`
A9}htWIcUh
@89t1IcUh
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
@SVWAUH
E A9E$|	I
@UAVAWH
.H9D$ t
)D$ Hc{
@UWAVAWH
(A_A^_]
@UATAUAVAWH
A_A^A]A\]
|$ AVHc
@USVWATAUAVAWH
hA_A^A]A\_^[]
\$ WATAWH
UVWATAUAVAWH
A_A^A]A\_^]
|$ ATAVAWH
 A_A^A\
ATAUAVH
L$PD;h,
 A^A]A\
USVWATAUAVAWH
A_A^A]A\_^[]
AUAVAWH
@A_A^A]
d$ UAVAWH
LcfPMcwPI
VATAUAWH
XA_A]A\^
D9G(~9E
G\HcGXH
@UATAUAVH
(A^A]A\]
@UATAUAVH
(A^A]A\]
@UWATAUH
(A]A\_]
@USVWAVH
l$ VAUAWH
|$ ATAVAWH
 A_A^A\
|$ ATAVAWH
 A_A^A\
|$ ATAVAWH
 A_A^A\
|$ ATAVAWH
 A_A^A\
@USATAVAWH
A_A^A\[]
UVAUAVH
@SVWAWH
USVWATAVH
A^A\_^[]
VWATAVAWH
 A_A^A\_^
WATAUAVAWH
@A_A^A]A\_
H9w0u%H
vpcft	H
@USVWATAWH
A_A\_^[]
L$ SWAVH
C09C rAH
t$XHc{ E3
WATAUAVAWH
@A_A^A]A\_
D;A0s Ic
UVWAVAWH
A_A^_^]
|$8;q(u
@USAVAWH
UVWATAUAVAWI
A_A^A]A\_^]
D$L9YX~6H
t=McQ@E3
D$T9YX~>I
HcnX;nhu
D$d9iX~YI
s UWATI
UVATAUAWI
A_A]A\^]
UATAUAVAWI
A_A^A]A\]
UVATAUAVI
A^A]A\^]
UATAUAVAWI
A_A^A]A\]
UATAUAVAWI
A_A^A]A\]
UVATAUAVI
A^A]A\^]
UATAUAVAWI
A_A^A]A\]
\$ UVAVH
\$ WATAVH
D9qX~4I
|$ UATAUAVAWH
A_A^A]A\]
|$ ATAVAWH
s WATAUAVAWH
A_A^A]A\_
k VWATAVAWH
A_A^A\_^
@USVAVAWH
A_A^^[]
@SUAVAWH
@USVWAVAWH
A_A^_^[]
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
E9wX~p3
USATAWH
@USVWATAVAWH
A_A^A\_^[]
@USVWAVAWH
A_A^_^[]
D$hA;E(
l$8A;E(sBI
H9A@u!I
UVWATAUAVAWH
pA_A^A]A\_^]
@UATAUAVAWH
e A_A^A]A\]
UVWATAUAVAWH
D$hH9E(
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UAUAVAWI
A_A^A]]
USVWATAVAWH
A_A^A\_^[]
|$ UATAUAVAWH
A_A^A]A\]
t$ WAVAWH
A;G$~^A
t'HcA$HcQ H
t/E9P@~)
A A;@@|
t/A9X@~)
A A;@@|
HcA$HcQ I
Q$LcI I
C A;@@}
C A;@@|
UVWAVAWH
A_A^_^]
@UWATAWH
8A_A\_]
WATAUAVAWH
@A_A^A]A\_
IHH	A8H
UWATAVAWH
A_A^A\_]
UWAUAVAWH
A_A^A]_]
UWATAVAWH
A_A^A\_]
USVWATAUI
A]A\_^[]
E9W4~1IcO0I
9x4~,HcH0H
UATAUAVAWH
A_A^A]A\]
HcB$HcJ,H
VWAUAVAWH
D9E$~aN
 A_A^A]_^
UWAUAVAWH
A_A^A]_]
X USVWATAUAVAWH
A_A^A]A\_^[]
SUVWAVH
USVWAVH
X SUAVH
)|$PLc	L
X USVWATAUAVAWH
A_A^A]A\_^[]
USVWATAUAVAWH
A_A^A]A\_^[]
X USVWATAUAVAWH
A_A^A]A\_^[]
@UATAUAVAWH
A_A^A]A\]
@UATAUAVAWH
A_A^A]A\]
@UATAUAVAWH
A_A^A]A\]
@UATAUAVAWH
A_A^A]A\]
@UATAUAVAWH
e A_A^A]A\]
@UATAUAVAWH
e A_A^A]A\]
@UATAUAVAWH
e A_A^A]A\]
@UATAUAVAWH
e A_A^A]A\]
L$ SVWH
WATAUAVAWH
A_A^A]A\_
t$ UWAVH
@UATAVH
F L;l$X
fE;PDs?I
S@fD;RBsI
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
D$Pf;Y*
\$Pf;Y2
t$Pf;r$
\$xf;q2
X UVWATH
@UVATAVH
)L$0t	L
UVWAVAWH
pA_A^_^]
@SUWAVAWH
pA_A^_][
\$ UVWAVAWH
A_A^_^]
p WATAWH
@UVWAVAWH
A_A^_^]
X UWATAVAWH
A_A^A\_]
|$ ATAVAWH
\$(D9c\
0A_A^A\
A;P\sgE3
@USWATAWH
A_A\_[]
C@fD9XP
^qd9Y`v]H
WATAUAVAWH
q;G\s@H
A_A^A]A\_
@USVWATAUAWH
A_A]A\_^[]
USATAWI
I@fD;aB
L$ SVWH
UVWAVAWH
A:H	u	A
A_A^_^]
USVWATAUAWH
A_A]A\_^[]
\$ UVWH
|$ AUAVAWH
@A_A^A]
t$ WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
p WATAUAVAWH
A_A^A]A\_
@UAUAWH
l$ WAVAWH
@SWAVAWH
(A_A^_[
@SWAVAWH
(A_A^_[
@SWAVAWH
(A_A^_[
\$ UWAWH
\$ UWAVH
@SATAWH
@SUAVAWH
(A_A^][
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
@A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
%UUUUD+
HcN HcV$H
HcF(HcN,H
DHcF$HcN,H
HcN HcV$H
HcN(HcV,H
HcF0HcN4H
@USVWATAUAVAWH
HA_A^A]A\_^[]
WATAUAVAWH
0A_A^A]A\_
@SWATAUAVH
0A^A]A\_[
VWATAVAWH
0A_A^A\_^
@SUWATH
VWATAVAWH
 A_A^A\_^
\$ VWATH
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
ChH;Ahu
A_A^A\_^
l$ VWAVH
@UWAUAWH
@UWAUAVH
xA^A]_]
UVWATAUAVAWH
 A_A^A]A\_^]
VWATAVAWH
 A_A^A\_^
VWAUAVAWH
 A_A^A]_^
WATAUAVAWH
 A_A^A]A\_
@UVATAUAWH
 A_A]A\^]
|$ ATAVAWH
@UAVAWH
SATAVAWH
XA_A^A\[
UVWATAUAVAWH
E@L9u@tp
E@L9u@th
E@L9u@tv
E@L9u@t`E
E@L9u@tWE
E@L9u@tUE
E@L9u@te
E@L9u@t^
E@L9u@tV
E@L9u@t\
E@L9u@tb
E@L9u@th
E@L9u@tf
E@L9u@taE
E@L9u@t`E
E@L9u@tW
E@L9u@t[E
E@L9u@tZE
E@L9u@tWE
E@L9u@tVE
E@L9u@t\
E@L9u@tW
E@L9u@t_
E@L9u@tgE
E@L9u@tE
 A_A^A]A\_^]
|$ UATAUAVAWH
E0L9u0ti
E0L9u0tf
E0L9u0tn
 A_A^A]A\]
UVWATAUAVAWH
pA_A^A]A\_^]
s WAVAWH
|$ UATAUAVAWH
;|$hu]H
;t$@u]H
t%IcI0I
A_A^A]A\]
UVWATAUAVAWH
/d$TsiD
A_A^A]A\_^]
@UVWAUH
@USVWATAVAWH
A_A^A\_^[]
h VWAVH
Fx333?D
Cx333?H
X UVWAVAWH
A_A^_^]
WATAUAVAWH
@A_A^A]A\_
SUWATAUH
@A]A\_][
t$ WAVAWH
t,H9|$Pu
@UAUAVH
@UVAUAV
D9nX~'I
L$`D9i@
L$XD;h@
@WLcY@3
USATAUH
UAUAVAWI
A_A^A]]
@UVWATAVH
A^A\_^]
USVWAVAWH
A_A^_^[]
.I|z"u 
UVWAUAVH
A^A]_^]
UWAUAVAWH
A_A^A]_]
H UWATH
UVWAVAWH
A_A^_^]
@USVWATAVAWH
A_A^A\_^[]
@SUVWAVH
UVWATAUAVAWH
D$0McE$H
Icu Ic}
t,IcU M
A_A^A]A\_^]
USWAVAWH
A_A^_[]
UATAUAVAWH
A_A^A]A\]
USVAUAWI
A_A]^[]
Hck$Hcs 
Ick$Ics A
@SATAWH
@USVWATAUAVAWH
A_A^A]A\_^[]H
@USVWATAUAVAWH
HcD$ Hc
A_A^A]A\_^[]
p WATAUAVAWH
A_A^A]A\_
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UWATAVAWH
A_A^A\_]
USVWATAVAWH
A_A^A\_^[]
|$ UAVAWH
USVATAVI
A^A\^[]
USVWAVH
|$ ATAVAWH
 A_A^A\
SUVWAVH
@USVWAUAVAWH
A_A^A]_^[]
f3A<fA#
A,f3A<fA#
A,f3A<f#
A<f3A,f#
A,f3A<f#
A<f3A,f#
t$ WATAUAVAWH
A_A^A]A\_
f3A,fA#
fA3A,f#
fA3A,fA
fA3A,f#
fA3A,fA
fA3A,f#
fA3A,fA
fA3A,f#
fA3A,fA
fA3A,f#
fA3A,fA
fA3A<f#
@8{ht)H
|$<A9{$
x UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
H98t,H9x
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
USVWATAVAWH
A_A^A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
SUVWAVH
@SUVWAVAWH
A_A^_^][
UVWATAUAVAWH
\$PIcN I
YT$ Lcg
A_A^A]A\_^]
k WAUAVH
UVWATAUAVAWH
D$h;sXu
A_A^A]A\_^]
@UATAUAVAWH
e0A_A^A]A\]
HcwH;wX
|$XHc:H
UUUUUUUUH
33333333H+
@UVWAWH
WATAUAVAWH
@A_A^A]A\_
VWATAVAWH
 A_A^A\_^
WATAUAVAWH
@A_A^A]A\_
S @8n(t L
L$p;k8|
Hc~8;~H
9\$(~>A
T$ +G$D
T$ +G$Hc
T$ +G$D
</t?<\t;H
|$ ATAVAWH
 A_A^A\
L$ SVWH
A0t#H9I8u
@UAVAWH
e A_A^]
@SAVAWH
l$@HckxH
D$<9T$0wR9T$4wL9T$8wF;
)t$PH9[8t
)|$PH9[8t
t+HcC$LcC
t(HcC$HcK
HcC$HcS
HcC$HcK
<dtk<itg<uu
<dt <it
<ft_<lu
																									
SUVWAVAWH
(A_A^_^][
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
(A_A^A]A\_^][
fffffff
ATAVAWH
 A_A^A\
fffffff
.ffffff
UVWATAUAVAWH
pA_A^A]A\_^]
fffffff
0ffffff
WATAUAVAWH
A_A^A]A\_
p WATAUAVAWH
A_A^A]A\_
VWATAVAWH
A_A^A\_^
VWATAVAWH
 A_A^A\_^
x ATAVAWH
 A_A^A\
WATAUAVAWH
gfffffffH
A_A^A]A\_
x AUAVAWH
@SUVWAVH
UVWATAUAVAWH
D$DD9T$X
|$h+t$D+
A_A^A]A\_^]
USVWAVH
WATAUAVAWH
@A_A^A]A\_
@ffffff
` AUAVAWH
t$8Hc0I
sYHcL$HH
x ATAVAWH
< tD<	t@
 A_A^A\
H3E H3E
SVWATAUAVAWUH
]A_A^A]A\_^[
l$ VWATAVAWH
T$&@8t$&t9@8r
A81t@@8r
A_A^A\_^
!\$0!\$(!\$ L
UVWATAUAVAWH
A_A^A]A\_^]
@UATAUAVAWH
!t$(H!t$ I
A_A^A]A\]
VWATAVAWH
A_A^A\_^
UVWATAUAVAWH
A_A^A]A\_^]
D8eoupH
UVWATAUAVAWH
pA_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
AUAVAWH
0A_A^A]
@SVWATAUAVAWH
L!|$@L!
A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
UVWATAUAVAWH
D)\$4A;
d$4t	fD
t$\9D$`t
t$PD8|$8t
A_A^A]A\_^]
t$ WATAUAVAWH
0A_A^A]A\_
VWATAVAWH
 A_A^A\_^
\$ UVWATAUAVAWH
D9l$dtXH
HcD$PH;
A_A^A]A\_^]
VWATAVAWH
 A_A^A\_^
t$ WAVAWH
UVWATAUAVAWH
$tPH9\$@t>
A_A^A]A\_^]
UWATAVAWH
uMM9'tHH
uQM91tLH
A_A^A\_]
<1~-<3~ <4t5<5t
UATAUAVAWH
A_A^A]A\]
D8t$HuD
(D$@L9t$ t0H
D$(D8t$(u\H
x UAVAWH
|$ UATAUAVAWH
A_A^A]A\]
,0<	w!A
SATAUAWUH
]A_A]A\[
@UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
AUAVAWH
0A_A^A]
@SUVWATAVAWH
PA_A^A\_^][
WATAUAVAWH
 A_A^A]A\_
USVWATAUAVAWH
XA_A^A]A\_^[]
USVWAVH
l$ VATAUAVAWH
 A_A^A]A\^
USVWAVH
VWATAVAWH
`A_A^A\_^
fD;Ids]
UVAVAWH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
SUVWAVH
)L$0f;q(s>
)D$0f;y.sH
f;q"sef
UVWATAUAVAWH
)D$0fA;H(
A_A^A]A\_^]
USVWATAUAVAWH
A_A^A]A\_^[]
UWATAUAVH
@A^A]A\_]
WAUAVAWH
8A_A^A]_
D$PH+D$HH
SUVWAVH
C H9X t
0A^_^][
SVWAUAWH
A_A]_^[
WATAUAVAWH
@A_A^A]A\_
x ATAVAWH
WATAUAVAWH
 A_A^A]A\_
tYH9{(t
\$`M9d$
VWATAUAVH
0A^A]A\_^
t3I9P u-I
)l$@H9K
{ H9_ t
UVWATAUAVAWH
@A_A^A]A\_^]
L$0HcU<H
@UAVAWH
H(H9J(u
Release
vphysics2
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\fmtstr.h
Default
interactive_debris
interactive
breakable_glass
vehicle
player_movement
in_vehicle
vehicle_clip
Projectile
door_blocker
passable_door
dissolving
pushaway
npc_actor
npc_scripted
pz_clip
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\intersectioncontroller.cpp
CIntersectionController::SetCollisionGroupPairFlags
flags == 0
group0 >= 0 && group0 < COLLISION_GROUPS_MAX_ALLOWED && group1 >= 0 && group1 < COLLISION_GROUPS_MAX_ALLOWED
CIntersectionController::GetCollisionGroupPairFlags
GroupPair(group0, group1) == GroupPair(group1, group0)
CIntersectionController::EnableCollisionGroupPairFlags
CIntersectionController::DisableCollisionGroupPairFlags
CIntersectionController::CopyCollisionGroupFlagsAllPairs
nDestGroup >= COLLISION_GROUP_FIRST_USER
FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified! String: "%s"
CFmtStrN<256,0>::CFmtStrN
FmtStrVSNPrintf truncated without QUIET_TRUNCATION specified!
vphysics2.dll
memoverride MallocUnattributed
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier0\memoverride.cpp
memoverride ReallocUnattributed
purecall
invalid_parameter
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlvector.h
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\body.inl
CRnBody::SetLinearDamping
flDamping >= 0.0f
CRnBody::SetAngularDamping
c:\buildslave\vrgdc2015_staging_win64\build\src\public\vphysics2\cookiehandle.h
IsHandleValid( nHandle )
CCookieHandlePool::GetObjectHandle
m_nObjectToIndexOffset
c:\buildslave\vrgdc2015_staging_win64\build\src\public\modellib\physaggregatedata.h
CPhysAggregateData::GetBoneCount
m_IndexHash.Count() == m_BonesHash.Count() && m_BindPose.Count() == m_BonesHash.Count()
cloth_version
# Vertices: %d
v %g %g %g
# Faces: %d
f %d %d %d
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_aggregate.cpp
CPhysAggregateInstance::CPhysAggregateInstance
m_nDebugIndex != s_nAggregateInstanceDebugIndexTrap
Disabling collision between %s and %s
Hull%d.obj
Mesh%d.obj
CPhysAggregateInstance::DistanceToAggregate
pOther != this
CPhysAggregateInstance::CheckShapeOverlap
pRnWorld
CPhysAggregateInstance::Rescale
flScale > 0.0f
SetBodyShapesAndFlags
pMeshShape != NULL
CPhysAggregateInstance::RemovePart::<lambda_35636d917adf07226fcede415df22ad7>::operator ()
part.m_pBody
CPhysAggregateInstance::ChangeBodyGroup
!m_Parts[nNew].m_pBody
nNewHash == nOldHash
CPhysAggregateInstance::SetPartTransform
pShape->GetCollisionAttributes().GetCollisionFunctionMask()
Inconsistent collision attribute index array of size %d, expected %d (number of shapes)
Invalid collision attribute palette entry %u, expected below %d
Invalid collision attr index %u, must be below %d
SetTotalMass(%g): Invalid argument
CPhysAggregateInstance::BuildConstraints
input.m_nChild != input.m_nParent
( vChildAnchor - vParentAnchor ).Length() < 0.001f
CPhysAggregateInstance::BuildJoints
pWorld != NULL
pJointData != NULL
pSphericalJoint != NULL
pRevoluteJoint != NULL
range.m_flMin <= range.m_flMax
flMaxTorque >= 0.0f
pPrismaticJoint != NULL
flMaxForce >= 0.0f
pConicalJoint != NULL
pOrthTwistJoint != NULL
pWeldJoint != NULL
Invalid joint type %d on body %s
CPhysAggregateInstance::SetMotionType
!"Should never get here!"
CPhysAggregateInstance::GetMotionType
m_Parts[ i ].m_pBody->GetType() == nBodyType
parts[%d]={
joints[%d]
CVPhys2AggregateInstance::OnReallocate( new: 0x%p, old: 0x%p )
CPhysAggregateInstance::OnReallocate
nOldPartCount == nNewPartCount
CPhysAggregateInstance::GetBody
0 <= nBody && nBody < m_Parts.Count()
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\gjk.inl
!bOverlap || out.m_flDistance < LINEAR_SLOP
CUtlMemory::Grow
Unaccounted
CUtlMemory<unsigned int,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct CPhysAggregateInstance::BodyPart_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class CRnJoint *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct RnMaterial_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class CTransform,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct Mass_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_concomm.h
CMessageSender::~CMessageSender
GetHeader()->m_nReserved == 0x89
CPrologSender::~CPrologSender
GetHeader()->m_nReserved == 0xDA
CSizeOfStream::AddInt64
!( m_nSize & 7 )
Physics Console Communications is not initialized
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_concomm.cpp
CVPhysics2ConComm::Update
m_bStarted
Physics doesn't know how to handle Comm request %d (data:%d)
CVPhysics2ConComm::MessageData
buf.Get() == pDataEnd
CPrologSender::SendMessage
m_Stack.Count() == 1
c:\buildslave\vrgdc2015_staging_win64\build\src\public\rubikon\profile.h
PhysicsStats_t<19>::operator []
i < nCount
MeshCastRay
MeshCastSphere
MeshCastRayResults
MeshClipRay
MeshCastLeaf
Visited: Nodes/Tris/Mesh
HullCastRay
MeshCastBox
SearchContact
HullBuildMass
HullBuildBounds
Contacts: Found/Scanned
HullMassEdges
HullBuildVerts
Create Flags
Update Collision Threads
Max Contacts Per Thread
Contacts per worker
Aggregate Count
Solved/Total Bodies
Solved/Total Joints
Solved Contacts/Body Pairs
Solved Manifolds/Body Pairs
Motion Controllers
Solved/Report/Solver Contacts
Touches Reported/Body Pair Table Size
TOI: Count
TOI: Failures
TOI: Out of iterations
TOI: Max outer iterations
TOI: Max inner iterations
TOI: Max root iterations
TOI: Initial penetrations
Collide
Collecting Islands
IslandSolve
UpdateVelocities
PrepareContacts
PrepareJoints
Satisfy
FinalizeJoints
FinalizeContacts
UpdatePositions
Project
MoveProxies
Sleeping
Shadow Controller Slots
SolveTOI
BuildNewContacts
KeepInBounds
DebugDraw
UpdateSceneObjects
ForcedUpdates
ShadowControllersInternalPrepare
ShadowControllersInternalStep
ShadowControllersInternalFinalize
WakeUpDynamicNeighbors
PhysicsGameSystem_OnSimulate
PushDynamicTransformsWorker
PullKinematicTransformsWorker
ProcessUpdaterStatusChanges
DispatchEntityIO
ReportEvents
PhysicsGameSystem_StartSimulateFrame
PhysicsGameSystem_FinishSimulateFrame
BodyBuildMass
BodySetTransform
Active/Total Softbodies
PhysicsStats_t<41>::operator []
Unaccounted
CUtlMemory<int,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct CPrologSender::PreDesc_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcesystem\stronghandle.h
c:\buildslave\vrgdc2015_staging_win64\build\src\public\vphysx\vphysx_collisionmesh_resource.h
VPhysics2ShapeDef_t::AppendTriangulation
nVerts == nVertsGot
WARNING: Trying to create a CRenderContextPtr without a valid context.
c:\buildslave\vrgdc2015_staging_win64\build\src\public\rendersystem\indexdata.h
c:\buildslave\vrgdc2015_staging_win64\build\src\public\rendersystem\vertexdata.h
texcoord
PhysicsDebugMaterials
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_debug.cpp
materials/dev/debug_physics.vmat
materials/dev/debug_physics_translucent.vmat
materials/dev/debug_physics_seethrough.vmat
materials/dev/debug_physics_translucent_seethrough.vmat
World context should be set for any code path that wants to create debug shapes, otherwise debug rendering won't work
LoadPhysicsDebugMaterials
DebugMeshInfoList_t::AppendDebugMeshInfo
%s(): Bone referenced by collision mesh not found in render skeleton. Skipping collision mesh.
position
blendindices
blendweight
CVPhysics2Interface::CreateDebugSceneObject(748): 
debugphysiscs
debugphysics
Could not create phys debug VB for %d elements
Could not create phys debug IB for %d elements
Could not lock phys debug IB for %d elements
Could not lock phys debug VB for %d elements
CVPhysics2Interface::CreateDebugSceneObject
vb.VertexCount() == 0 && ib.IndexCount() == 0
vb.VertexCount() == nIndex
0 == nZeroAreaTriangles
nFinalIndexCount <= indexDesc.m_nElementCount
nFinalVertexCount <= vertexDesc.m_nElementCount
DestroyDebugSceneObject: pSceneObject ( %p ) has already been deleted!
CVPhysics2Interface::DestroyDebugSceneObject
pSceneObject->m_nObjectTypeFlags & SCENEOBJECTTYPEFLAG_HAS_MESH_INSTANCE_DATA
pSceneObject->GetMeshInstanceData()->GetNumDrawCalls() == 1
CVertexDataBase<struct PhysicsDebugVertex_t>::AdvanceVertex
CVertexDataBase - No storage!
CVertexDataBase - Tried to advance past the last vertex (%d)
CVertexData<struct PhysicsDebugVertex_t>::Lock
this->m_pMemory
nMaxVertexCount > 0
CVertexData<struct PhysicsDebugVertex_t>::Unlock
CIndexData<unsigned int>::Lock
nMaxIndexCount > 0
CIndexData<unsigned int>::Unlock
g_pResourceHandleUtils
Encountered too many releases for resource "%s"
CIndexDataBase<unsigned int>::~CIndexDataBase
!m_pMemory
CStrongHandle<struct InfoForResourceTypeIMaterial2>::Shutdown
CVertexDataBase<struct PhysicsDebugVertex_t>::~CVertexDataBase
CVertexData<struct PhysicsDebugVertex_t>::Init
!this->m_pRenderContext
Unaccounted
CUtlMemory<struct DebugMeshInfo_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class Vector,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class CUtlVector<class Vector,class CUtlMemory<class Vector,int> >,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
@?33s?ff
CCookieHandlePool::GetPtrFast
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_motioncontroller.cpp
CPhysicsMotionController::AttachObject
hObject->IsValid()
AttachObject called with NULL pObject
AttachObject called on motion controller with this object already attached.
CPhysicsMotionController::WakeObjects
Unaccounted
CUtlMemory<class HPhysicsBody,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
!"not implemented"
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\bodypair.h
OrderBodyPair
pair.m_pBody[0] && pair.m_pBody[1]
RubikonSW
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_world.h
CVPhys2World::CreatePolyObject
vphys2_enable_variable_timestep
vphys2_angular_damping
vphys2_linear_damping
vphys2_ragdoll_joint_or
vphys2_water_density_multiplier
max object velocity, in/s
vphys2_default_max_velocity
vphys2_enable_buoyancy
vphys2_solver_batch_size
vphys2_artificial_acceleration
vphys2_expensive_sync_warning
vphys2_air_density
vphys2_angular_damping_in_water
vphys2_linear_damping_in_water
vphys2_buoyancy_damping
vphys2_buoyancy_version
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphys2_world.cpp
-validate
/%u.rnsave
Cannot save file %s, stopping snapshot dumping
CVPhys2Constraint::GetConstraintParams
CVPhys2World::CreateHingeConstraint
hRevolute.IsValid()
CVPhys2World::CreateDistanceConstraint
lengthParams.minLength == lengthParams.totalLength
Distance constraints with different min and max length aren't yet supported.
pConstraint && pConstraint->GetJointHandle().IsValid() && pConstraint->GetJointHandle()->IsSpring().IsValid()
pSpringJoint
CVPhys2World::CreatePrismaticConstraint
flLimitMin < flLimitMax
CVPhys2World::CreateAggregateInstance
ppAggregateData[i]->m_nRefCounter > 0
pAggregateData->m_nRefCounter > 0
_____Bytes %-30s[body]
 (%s verts, %s tris, %s nodes)
 (%s verts, %s faces, %s edges)
( + %d more)
%14s %-30s[%u]%s
Skipping %d items of total size %u bytes
%s - %s
.rnsave
Cannot save file %s
Please specify a file name to save to
-snapshots
Saving snapshots starting from Frame %u into '%s'
Stopping saving snapshots at Frame %u into '%s'
-profiletraces
CVPhys2World::ExecuteDelayedDeletions
m_IntersectionNotifications.IsEmpty()
-1: don't override; 0=RAGDOLL,1=SWINGTWIST,2=SWINGTWIST_SYM,3=MIXED,4=ORTHOTWIST,5=HEAPTWIST,6=CHEAPTWIST2
phys_joint_hint
CVPhys2World::CastRaySingleBody
result.m_pMaterial
CVPhys2World::CastBoxSingleBody
World Anchor Reference body for Constraint %p
Unaccounted
CUtlMemory<void *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct PhysGenericCallback_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class CPhysAggregateInstance *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class IPhysicsMotionController *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct VPhysIntersectionNotification_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class IPhysAggregateInstance *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct RecordedTraceResult_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct RecordedForce_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
surfaceproperties/surfaceproperties.vsurf
HPhysAggregateData
RESOURCE_TYPE_VPHYSX_PHYSICSDATA
HVPhysXSurfacePropertiesList
RESOURCE_TYPE_VPHYSX_SURFACE_PROPERTIES
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcesystem\iresourcesystem.h
IResourceTypeManager::GetNonStreamingDataLoadSize
IResourceTypeManager::LoadStreamingData
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\joint.h
CRnJoint::SetMaxLinearConstraintImpulse
flMaxLinearConstraintImpulse >= 0.0f
CRnJoint::SetMaxAngularConstraintImpulse
flMaxAngularConstraintImpulse >= 0.0f
VPhysics2_Interface_001
VPhysics2SurfacePropLoader
SurfacePropertiesStartup
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\vphysics2.cpp
Set to 1 to reload resources and reconstruct physics of entities on the fly. May unexpectedly change behavior or crash the game, because game code is generally unaware of underlying resource reloads and may hold references to physics that may become invalid during resource reload. It is inherently harder for physics to deal with resource reloads because of persistent nature of objects being simulated (textures can be easily reloaded on the fly; if an entity holds a handle to a ragdoll body part, it may expect that handle to stay valid while the ragdoll exists)
phys_reload_immediately
cloth_reload_immediately
ResourceSystem009
resourcesystem
-unittest
CVPhysics2Interface::StartConComm
!g_pVConComm || g_pVConComm == pVConComm
CVPhysics2Interface::UnserializeWorld
buf.Get() == pPredictedEndOfBuffer
Rubikon%s
CVPhysics2Interface::HullCreateRandom
Random hull inside sphere of radius %g should have volume around %g, but min volume %g may be hard to obtain using the trivial algorithm here
CVPhysics2SurfaceProperyController::~CVPhysics2SurfaceProperyController
m_pDefaultSurfaceProperties == NULL
Surface properties are not loaded.
LoadSurfaceProperties
Surface Properties file not loaded.!
number of traces to record results of - for debugging only
phys_record_traces
CVPhysics2Interface::DestroySoftbody
hSoftbody.m_pSoftbody->GetWorld() == NULL
number of forces to record - for debugging only
phys_record_forces
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\handlesimpl.inl
CVPhys2HandleInterfaceImpl::BodySetType
!"HPhysicsBody->SetType( PhysicsBodyType_t nType ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetType
!"HPhysicsBody->GetType(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetWorld
!"HPhysicsBody->GetWorld(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetWorldOverload1
CVPhys2HandleInterfaceImpl::BodyGetShapeCount
!"HPhysicsBody->GetShapeCount(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetShape
!"HPhysicsBody->GetShape( int nShape ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetShapeOverload1
CVPhys2HandleInterfaceImpl::BodyGetShapeIndex
!"HPhysicsBody->GetShapeIndex( const HPhysicsShape pShape ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddSphereShape
!"HPhysicsBody->AddSphereShape( const Vector& vCenter, float flRadius, const Vector4D& color ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddCapsuleShape
!"HPhysicsBody->AddCapsuleShape( const Vector& vCenter1, const Vector & vCenter2, float flRadius, const Vector4D& color ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddHullShape
!"HPhysicsBody->AddHullShape( const RnHull_t* pHull, float flScale, const Vector4D& color ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddMeshShape
!"HPhysicsBody->AddMeshShape( const RnMesh_t* pMesh, const Vector& vScale, const Vector4D& color ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyRemoveShape
!"HPhysicsBody->RemoveShape( HPhysicsShape pShape ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyPurgeShapes
!"HPhysicsBody->PurgeShapes(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyBuildBounds
!"HPhysicsBody->BuildBounds(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyBuildBoundsOverload1
!"HPhysicsBody->BuildBounds( const matrix3x4_t& transform ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyBuildProxyBounds
!"HPhysicsBody->BuildProxyBounds(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetBroadphaseBounds
!"HPhysicsBody->GetBroadphaseBounds(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetGravityScale
!"HPhysicsBody->SetGravityScale( float flScale ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableGravity
!"HPhysicsBody->EnableGravity( bool bEnableGravity ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsGravityEnabled
!"HPhysicsBody->IsGravityEnabled(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsGravityDisabled
!"HPhysicsBody->IsGravityDisabled(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetGravityScale
!"HPhysicsBody->GetGravityScale(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetMass
!"HPhysicsBody->GetMass(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetGameMass
!"HPhysicsBody->GetGameMass(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetMassInv
!"HPhysicsBody->GetMassInv(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetInertiaInv
!"HPhysicsBody->GetInertiaInv(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLocalInertia
!"HPhysicsBody->GetLocalInertia(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLocalInertiaOrientation
!"HPhysicsBody->GetLocalInertiaOrientation(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLocalInertiaProperties
!"HPhysicsBody->GetLocalInertiaProperties(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetInertiaProperties
!"HPhysicsBody->GetInertiaProperties(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLocalInertiaInv
!"HPhysicsBody->GetLocalInertiaInv(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetMassCenter
!"HPhysicsBody->GetMassCenter(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetMassCenterInObjectSpace
!"HPhysicsBody->GetMassCenterInObjectSpace(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLocalMassCenter
!"HPhysicsBody->GetLocalMassCenter(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetInertiaBox
!"HPhysicsBody->GetInertiaBox(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetInertiaBoxV1
!"HPhysicsBody->GetInertiaBoxV1(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetInertiaOrientation
!"HPhysicsBody->GetInertiaOrientation(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyBuildMass
!"HPhysicsBody->BuildMass(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyRecomputeDragBases
!"HPhysicsBody->RecomputeDragBases(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetMass
!"HPhysicsBody->SetMass( float flMass ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyScaleInertia
!"HPhysicsBody->ScaleInertia( float flInertiaScale ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyScaleInertiaInv
!"HPhysicsBody->ScaleInertiaInv( float flInertiaScaleInv ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetPosition
!"HPhysicsBody->SetPosition( const Vector & p ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetPosition
!"HPhysicsBody->GetPosition(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetOrientation
!"HPhysicsBody->SetOrientation( const Quaternion& q ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetOrientation
!"HPhysicsBody->GetOrientation(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetTransform
!"HPhysicsBody->SetTransform( const Vector& p, const Quaternion& q ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetTransform
!"HPhysicsBody->GetTransform(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetTransformOverload1
!"HPhysicsBody->SetTransform( const CTransform & tm ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetCTransform
!"HPhysicsBody->GetCTransform(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetShadowPosition
!"HPhysicsBody->SetShadowPosition( const Vector & p ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetShadowPosition
!"HPhysicsBody->GetShadowPosition(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetShadowOrientation
!"HPhysicsBody->SetShadowOrientation( const Quaternion& q ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetShadowOrientation
!"HPhysicsBody->GetShadowOrientation(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetShadowTransform
!"HPhysicsBody->SetShadowTransform( const Vector& p, const Quaternion& q ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetShadowTransform
!"HPhysicsBody->GetShadowTransform(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetShadowTransformOverload1
!"HPhysicsBody->SetShadowTransform( const CTransform & tm ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetShadowCTransform
!"HPhysicsBody->GetShadowCTransform(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyRotateAround
!"HPhysicsBody->RotateAround( const Vector & vPivot, const Quaternion& q ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyRotateAroundLocal
!"HPhysicsBody->RotateAroundLocal( const Vector & vPivot, const Quaternion& q ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetLinearVelocity
!"HPhysicsBody->SetLinearVelocity( const Vector & v ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddLinearVelocity
!"HPhysicsBody->AddLinearVelocity( const Vector & v ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLinearVelocity
!"HPhysicsBody->GetLinearVelocity(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetVelocityAtPoint
!"HPhysicsBody->GetVelocityAtPoint( const Vector & vWorldPoint ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetAngularVelocity
!"HPhysicsBody->SetAngularVelocity( const Vector & w ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddAngularVelocity
!"HPhysicsBody->AddAngularVelocity( const Vector & w ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetAngularVelocity
!"HPhysicsBody->GetAngularVelocity(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetAngularVelocityLocal
!"HPhysicsBody->SetAngularVelocityLocal( const Vector & w, AngularVelocityUnits_t nType ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddAngularVelocityLocal
!"HPhysicsBody->AddAngularVelocityLocal( const Vector & w, AngularVelocityUnits_t nType ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetAngularVelocityLocal
!"HPhysicsBody->GetAngularVelocityLocal( AngularVelocityUnits_t nType ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableDrag
!"HPhysicsBody->EnableDrag( bool bEnable ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsDragEnabled
!"HPhysicsBody->IsDragEnabled(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetLinearDrag
!"HPhysicsBody->SetLinearDrag( float flLinearDrag ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLinearDrag
!"HPhysicsBody->GetLinearDrag(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetAngularDrag
!"HPhysicsBody->SetAngularDrag( float flAngularDrag ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetAngularDrag
!"HPhysicsBody->GetAngularDrag(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetAngularDragObjectSpace
!"HPhysicsBody->GetAngularDragObjectSpace( const Vector & vOmegaObjectSpace ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLinearDragObjectSpace
!"HPhysicsBody->GetLinearDragObjectSpace( const Vector & vVelocityObjectSpace ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetLinearDamping
!"HPhysicsBody->SetLinearDamping( float d ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLinearDamping
!"HPhysicsBody->GetLinearDamping(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetAngularDamping
!"HPhysicsBody->SetAngularDamping( float d ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetAngularDamping
!"HPhysicsBody->GetAngularDamping(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyLinearImpulse
!"HPhysicsBody->ApplyLinearImpulse( const Vector & P ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyLinearImpulseAtWorldSpace
!"HPhysicsBody->ApplyLinearImpulseAtWorldSpace( const Vector & P, const Vector & vWorldSpace ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyAngularImpulse
!"HPhysicsBody->ApplyAngularImpulse( const Vector & L ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsStill
!"HPhysicsBody->IsStill(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyForce
!"HPhysicsBody->ApplyForce( const Vector & F ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyForceAt
!"HPhysicsBody->ApplyForceAt( const Vector & F, const Vector & r ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyTorque
!"HPhysicsBody->ApplyTorque( const Vector & M ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyClearForces
!"HPhysicsBody->ClearForces(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyClearTorques
!"HPhysicsBody->ClearTorques(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableAutoSleeping
!"HPhysicsBody->EnableAutoSleeping(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyDisableAutoSleeping
!"HPhysicsBody->DisableAutoSleeping(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsAutoSleepingEnabled
!"HPhysicsBody->IsAutoSleepingEnabled(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySleep
!"HPhysicsBody->Sleep( bool bDefalte ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyWakeUp
!"HPhysicsBody->WakeUp(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyWakeUpForDynamics
!"HPhysicsBody->WakeUpForDynamics(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyWakeUpForMotion
!"HPhysicsBody->WakeUpForMotion(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyWakeUpDynamicNeighbors
!"HPhysicsBody->WakeUpDynamicNeighbors(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsSleeping
!"HPhysicsBody->IsSleeping(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableContinuous
!"HPhysicsBody->EnableContinuous(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyDisableContinuous
!"HPhysicsBody->DisableContinuous(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsContiuousEnabled
!"HPhysicsBody->IsContiuousEnabled(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsBullet
!"HPhysicsBody->IsBullet(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetBullet
!"HPhysicsBody->SetBullet( bool bIsBullet ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySweep
!"HPhysicsBody->Sweep( const Vector & vDelta, uint32 nBodyTypeFilter ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyTransformVectorToLocal
!"HPhysicsBody->TransformVectorToLocal( const Vector & v ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyTransformVectorToParent
!"HPhysicsBody->TransformVectorToParent( const Vector & v ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyTransformPointToLocal
!"HPhysicsBody->TransformPointToLocal( const Vector & p ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyTransformPointToParent
!"HPhysicsBody->TransformPointToParent( const Vector & p ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetUserData
!"HPhysicsBody->SetUserData( void* pUserData ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetUserData
!"HPhysicsBody->GetUserData(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyDraw
!"HPhysicsBody->Draw( ISceneViewDebugOverlays* pDebugOverlay, uint nDebugLayers ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyUpdateSceneObject
!"HPhysicsBody->UpdateSceneObject(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyDrawInertiaBox
!"HPhysicsBody->DrawInertiaBox( ISceneViewDebugOverlays* pDebugOverlay ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyPositionImpulseAt
!"HPhysicsBody->ApplyPositionImpulseAt( const Vector & P, const Vector & r, const Vector & w, float flOrientationStep ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyApplyOrienationOmega
!"HPhysicsBody->ApplyOrienationOmega( const Vector & w, float flStep ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetDebugTint
!"HPhysicsBody->SetDebugTint( const Vector4D & tint ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetDebugSelected
!"HPhysicsBody->SetDebugSelected( float flSelected ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetDebugAlpha
!"HPhysicsBody->SetDebugAlpha( float flAlpha ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableTouchEvents
!"HPhysicsBody->EnableTouchEvents(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyDisableTouchEvents
!"HPhysicsBody->DisableTouchEvents(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyIsTouchEventEnabled
!"HPhysicsBody->IsTouchEventEnabled(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetFirstJoint
!"HPhysicsBody->GetFirstJoint(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetNextJoint
!"HPhysicsBody->GetNextJoint( HPhysicsJoint pJoint ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyHasContacts
!"HPhysicsBody->HasContacts(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetFirstContactPointShape
!"HPhysicsBody->GetFirstContactPointShape( Vector * pContactPoint ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetIndexInWorld
!"HPhysicsBody->GetIndexInWorld(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetMaterialIndex
!"HPhysicsBody->SetMaterialIndex( CUtlStringToken materialIndex ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetMaterialIndex
!"HPhysicsBody->GetMaterialIndex(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyFindJoint
!"HPhysicsBody->FindJoint( const HPhysicsBody pBody2 ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetDebugNameV
!"HPhysicsBody->SetDebugNameV( const char* pNameFormat, va_list args ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetDebugName
!"HPhysicsBody->GetDebugName(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAppendDebugInfo
!"HPhysicsBody->AppendDebugInfo( CUtlString & line ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyValidate
!"HPhysicsBody->Validate(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableDebugRendering
!"HPhysicsBody->EnableDebugRendering( bool bEnable ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableDebugRenderingDepthTest
!"HPhysicsBody->EnableDebugRenderingDepthTest( bool bEnable ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyEnableDebugRenderShadows
!"HPhysicsBody->EnableDebugRenderShadows( bool bEnable ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyStopDebugRendering
!"HPhysicsBody->StopDebugRendering(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetCollisionAttributes
!"HPhysicsBody->SetCollisionAttributes( const RnCollisionAttr_t & attributes ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetAggregateInstance
!"HPhysicsBody->GetAggregateInstance(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetTriangulation
!"HPhysicsBody->GetTriangulation( CUtlVector<Vector> & arrVectors, CUtlVector<uint32> & arrIndices, float flTolerance ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetGameFlags
!"HPhysicsBody->GetGameFlags(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetGameFlags
!"HPhysicsBody->SetGameFlags( uint nGameFlags ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetGameSceneNodeHandle
!"HPhysicsBody->GetGameSceneNodeHandle(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetEntityID
!"HPhysicsBody->GetEntityID(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetLegacyObject
!"HPhysicsBody->GetLegacyObject(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetSupport
!"HPhysicsBody->GetSupport( const Vector & direction ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetSupportOverload1
!"HPhysicsBody->GetSupport( const CTransform & bodyXform, const Vector & direction ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetSupportOverload2
!"HPhysicsBody->GetSupport( const matrix3x4_t & bodyXform, const Vector & direction ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyAddCollisionFunctionMask
!"HPhysicsBody->AddCollisionFunctionMask( uint8 nAddMask ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyRemoveCollisionFunctionMask
!"HPhysicsBody->RemoveCollisionFunctionMask( uint8 nRemoveMask ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodySetMassPriority
!"HPhysicsBody->SetMassPriority( int8 nPriority ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetMassPriority
!"HPhysicsBody->GetMassPriority(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetUsedGroupMask
!"HPhysicsBody->GetUsedGroupMask(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetUsedLayerMask
!"HPhysicsBody->GetUsedLayerMask(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetCollisionFunctionMask
!"HPhysicsBody->GetCollisionFunctionMask(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyRescale
!"HPhysicsBody->Rescale( float flNewScale, float flOldScale ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetContactStats
!"HPhysicsBody->GetContactStats(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::BodyGetSleepTime
!"HPhysicsBody->GetSleepTime(  ) is called on invalid handle. Please use HPhysicsBody.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetType
!"HPhysicsJoint->GetType(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsSphericalJoint
!"HPhysicsJoint->IsSphericalJoint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsSphericalJointOverload1
CVPhys2HandleInterfaceImpl::JointIsRevoluteJoint
!"HPhysicsJoint->IsRevoluteJoint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsRevoluteJointOverload1
CVPhys2HandleInterfaceImpl::JointIsPrismaticJoint
!"HPhysicsJoint->IsPrismaticJoint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsPrismaticJointOverload1
CVPhys2HandleInterfaceImpl::JointIsConical
!"HPhysicsJoint->IsConical(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsConicalOverload1
CVPhys2HandleInterfaceImpl::JointIsQuatOrthoTwist
!"HPhysicsJoint->IsQuatOrthoTwist(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsQuatOrthoTwistOverload1
CVPhys2HandleInterfaceImpl::JointIsWeldJoint
!"HPhysicsJoint->IsWeldJoint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsWeldJointOverload1
CVPhys2HandleInterfaceImpl::JointIsMouseJoint
!"HPhysicsJoint->IsMouseJoint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsMouseJointOverload1
CVPhys2HandleInterfaceImpl::JointIsSpring
!"HPhysicsJoint->IsSpring(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsSpringOverload1
CVPhys2HandleInterfaceImpl::JointIsPulley
!"HPhysicsJoint->IsPulley(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsPulleyOverload1
CVPhys2HandleInterfaceImpl::JointSetName
!"HPhysicsJoint->SetName( const char * name ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetName
!"HPhysicsJoint->GetName(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetWorld
!"HPhysicsJoint->GetWorld(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetWorldOverload1
CVPhys2HandleInterfaceImpl::JointGetBody
!"HPhysicsJoint->GetBody( int nIndex ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetBodyOverload1
CVPhys2HandleInterfaceImpl::JointGetBody1
!"HPhysicsJoint->GetBody1(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetBody1Overload1
CVPhys2HandleInterfaceImpl::JointGetBody2
!"HPhysicsJoint->GetBody2(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetBody2Overload1
CVPhys2HandleInterfaceImpl::JointEnableCollision
!"HPhysicsJoint->EnableCollision(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointDisableCollision
!"HPhysicsJoint->DisableCollision(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsCollisionEnabled
!"HPhysicsJoint->IsCollisionEnabled(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointActivate
!"HPhysicsJoint->Activate(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointDeactivate
!"HPhysicsJoint->Deactivate(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsActive
!"HPhysicsJoint->IsActive(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointEnableLinearConstraint
!"HPhysicsJoint->EnableLinearConstraint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointDisableLinearConstraint
!"HPhysicsJoint->DisableLinearConstraint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsLinearConstraintEnabled
!"HPhysicsJoint->IsLinearConstraintEnabled(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointEnableAngularConstraint
!"HPhysicsJoint->EnableAngularConstraint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointDisableAngularConstraint
!"HPhysicsJoint->DisableAngularConstraint(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointIsAngularConstraintEnabled
!"HPhysicsJoint->IsAngularConstraintEnabled(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetLocalAnchor1
!"HPhysicsJoint->GetLocalAnchor1(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetAnchor1
!"HPhysicsJoint->GetAnchor1(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetLocalAnchor2
!"HPhysicsJoint->GetLocalAnchor2(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetAnchor2
!"HPhysicsJoint->GetAnchor2(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetLinearConstraintImpulse
!"HPhysicsJoint->GetLinearConstraintImpulse(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointSetMaxLinearConstraintImpulse
!"HPhysicsJoint->SetMaxLinearConstraintImpulse( float flMaxLinearConstraintImpulse ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetMaxLinearConstraintImpulse
!"HPhysicsJoint->GetMaxLinearConstraintImpulse(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetAngularConstraintImpulse
!"HPhysicsJoint->GetAngularConstraintImpulse(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointSetMaxAngularConstraintImpulse
!"HPhysicsJoint->SetMaxAngularConstraintImpulse( float flMaxAngularConstraintImpulse ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetMaxAngularConstraintImpulse
!"HPhysicsJoint->GetMaxAngularConstraintImpulse(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointSetOnBreakHandler
!"HPhysicsJoint->SetOnBreakHandler( const CUtlDelegate< void() >& OnBreak ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetIndexInWorld
!"HPhysicsJoint->GetIndexInWorld(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointDraw
!"HPhysicsJoint->Draw( ISceneViewDebugOverlays* pDebugOverlay ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointPrintDebugString
!"HPhysicsJoint->PrintDebugString( char * pBuffer, uint nBufferSize ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointSetMassPriorityShift
!"HPhysicsJoint->SetMassPriorityShift( int8 nMassPriorityShift ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointGetMassPriorityShift
!"HPhysicsJoint->GetMassPriorityShift(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointPlaceholder2
!"HPhysicsJoint->Placeholder2(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointPlaceholder3
!"HPhysicsJoint->Placeholder3(  ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::JointRescale
!"HPhysicsJoint->Rescale( float flNewScale, float flOldScale ) is called on invalid handle. Please use HPhysicsJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointEnableMotor
!"HPhysicsQuatOrthoTwistJoint->EnableMotor(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointDisableMotor
!"HPhysicsQuatOrthoTwistJoint->DisableMotor(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointIsMotorEnabled
!"HPhysicsQuatOrthoTwistJoint->IsMotorEnabled(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetMaxTorque
!"HPhysicsQuatOrthoTwistJoint->SetMaxTorque( float flMaxTorque ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetMaxTorque
!"HPhysicsQuatOrthoTwistJoint->GetMaxTorque(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetTargetVelocity
!"HPhysicsQuatOrthoTwistJoint->SetTargetVelocity( const Vector& vTargetVelocity ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetTargetVelocity
!"HPhysicsQuatOrthoTwistJoint->GetTargetVelocity(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetMotorFriction
!"HPhysicsQuatOrthoTwistJoint->SetMotorFriction( float flFactor ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetAxes1
!"HPhysicsQuatOrthoTwistJoint->GetAxes1(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetAxes2
!"HPhysicsQuatOrthoTwistJoint->GetAxes2(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointTransformFromAxes1ToWorld
!"HPhysicsQuatOrthoTwistJoint->TransformFromAxes1ToWorld( const Vector & v ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetRelativeRotation
!"HPhysicsQuatOrthoTwistJoint->GetRelativeRotation(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointReleaseFullRelativeRotation
!"HPhysicsQuatOrthoTwistJoint->ReleaseFullRelativeRotation(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetTwistXJacobian
!"HPhysicsQuatOrthoTwistJoint->GetTwistXJacobian(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetTwistYJacobian
!"HPhysicsQuatOrthoTwistJoint->GetTwistYJacobian(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetTwistZJacobian
!"HPhysicsQuatOrthoTwistJoint->GetTwistZJacobian(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetTwistAngles
!"HPhysicsQuatOrthoTwistJoint->GetTwistAngles(  ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetRelativeRotationFromTwistAngles
!"HPhysicsQuatOrthoTwistJoint->GetRelativeRotationFromTwistAngles( const Vector & vTwist ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetLimits
!"HPhysicsQuatOrthoTwistJoint->SetLimits( const Vector & vLower, const Vector & vUpper ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointGetLimits
!"HPhysicsQuatOrthoTwistJoint->GetLimits( Vector * pLower, Vector * pUpper ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetSwingLimitsX
!"HPhysicsQuatOrthoTwistJoint->SetSwingLimitsX( float flMinSwingX, float flMaxSwingX ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetSwingLimitsY
!"HPhysicsQuatOrthoTwistJoint->SetSwingLimitsY( float flMinSwingY, float flMaxSwingY ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::QuatOrthoTwistJointSetTwistLimits
!"HPhysicsQuatOrthoTwistJoint->SetTwistLimits( float flMixTwist, float flMaxTwist ) is called on invalid handle. Please use HPhysicsQuatOrthoTwistJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointSetLinearFrequency
!"HPhysicsWeldJoint->SetLinearFrequency( float flFrequency ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointGetLinearFrequency
!"HPhysicsWeldJoint->GetLinearFrequency(  ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointSetLinearDampingRatio
!"HPhysicsWeldJoint->SetLinearDampingRatio( float flDampingRatio ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointGetLinearDampingRatio
!"HPhysicsWeldJoint->GetLinearDampingRatio(  ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointSetAngularFrequency
!"HPhysicsWeldJoint->SetAngularFrequency( float flFrequency ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointGetAngularFrequency
!"HPhysicsWeldJoint->GetAngularFrequency(  ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointSetAngularDampingRatio
!"HPhysicsWeldJoint->SetAngularDampingRatio( float flDampingRatio ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::WeldJointGetAngularDampingRatio
!"HPhysicsWeldJoint->GetAngularDampingRatio(  ) is called on invalid handle. Please use HPhysicsWeldJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetLocalJointFrame1
!"HPhysicsRevoluteJoint->GetLocalJointFrame1(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetJointFrame1
!"HPhysicsRevoluteJoint->GetJointFrame1(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetLocalJointFrame2
!"HPhysicsRevoluteJoint->GetLocalJointFrame2(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetJointFrame2
!"HPhysicsRevoluteJoint->GetJointFrame2(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointEnableMotor
!"HPhysicsRevoluteJoint->EnableMotor(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointDisableMotor
!"HPhysicsRevoluteJoint->DisableMotor(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointIsMotorEnabled
!"HPhysicsRevoluteJoint->IsMotorEnabled(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointSetMotorTargetAngle
!"HPhysicsRevoluteJoint->SetMotorTargetAngle( bool unnamed3 ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointIsMotorTargetAngle
!"HPhysicsRevoluteJoint->IsMotorTargetAngle(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointSetTargetAngle
!"HPhysicsRevoluteJoint->SetTargetAngle( float flTargetAngle ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetTargetAngle
!"HPhysicsRevoluteJoint->GetTargetAngle(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointSetTargetVelocity
!"HPhysicsRevoluteJoint->SetTargetVelocity( float flTargetVelocity ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetTargetVelocity
!"HPhysicsRevoluteJoint->GetTargetVelocity(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointSetMaxTorque
!"HPhysicsRevoluteJoint->SetMaxTorque( float flMaxTorque ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetMaxTorque
!"HPhysicsRevoluteJoint->GetMaxTorque(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetMotorTorque
!"HPhysicsRevoluteJoint->GetMotorTorque( float dt ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointSetMotorFriction
!"HPhysicsRevoluteJoint->SetMotorFriction( float flFactor ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetGravityTorque
!"HPhysicsRevoluteJoint->GetGravityTorque(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointEnableLimit
!"HPhysicsRevoluteJoint->EnableLimit(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointDisableLimit
!"HPhysicsRevoluteJoint->DisableLimit(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointIsLimitEnabled
!"HPhysicsRevoluteJoint->IsLimitEnabled(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointSetLimitRange
!"HPhysicsRevoluteJoint->SetLimitRange( const Range_t& range ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetLimitRange
!"HPhysicsRevoluteJoint->GetLimitRange(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::RevoluteJointGetAngle
!"HPhysicsRevoluteJoint->GetAngle(  ) is called on invalid handle. Please use HPhysicsRevoluteJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointEnableMotor
!"HPhysicsSphericalJoint->EnableMotor(  ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointDisableMotor
!"HPhysicsSphericalJoint->DisableMotor(  ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointIsMotorEnabled
!"HPhysicsSphericalJoint->IsMotorEnabled(  ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointSetMaxTorque
!"HPhysicsSphericalJoint->SetMaxTorque( float flMaxTorque ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointGetMaxTorque
!"HPhysicsSphericalJoint->GetMaxTorque(  ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointSetTargetVelocity
!"HPhysicsSphericalJoint->SetTargetVelocity( const Vector& vTargetVelocity ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointGetTargetVelocity
!"HPhysicsSphericalJoint->GetTargetVelocity(  ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SphericalJointSetMotorFriction
!"HPhysicsSphericalJoint->SetMotorFriction( float flFactor ) is called on invalid handle. Please use HPhysicsSphericalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::MouseJointSetTarget
!"HPhysicsMouseJoint->SetTarget( const Vector& vTarget ) is called on invalid handle. Please use HPhysicsMouseJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::MouseJointGetTarget
!"HPhysicsMouseJoint->GetTarget(  ) is called on invalid handle. Please use HPhysicsMouseJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::MouseJointGetAnchor
!"HPhysicsMouseJoint->GetAnchor(  ) is called on invalid handle. Please use HPhysicsMouseJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointSetFrequency
!"HPhysicsSpringJoint->SetFrequency( float flFrequency ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointGetFrequency
!"HPhysicsSpringJoint->GetFrequency(  ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointSetDampingRatio
!"HPhysicsSpringJoint->SetDampingRatio( float flDampingRatio ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointGetDampingRatio
!"HPhysicsSpringJoint->GetDampingRatio(  ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointSetReferenceMass
!"HPhysicsSpringJoint->SetReferenceMass( float flReferenceMass ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointGetReferenceMass
!"HPhysicsSpringJoint->GetReferenceMass(  ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointSetRestLength
!"HPhysicsSpringJoint->SetRestLength( float flRestLength ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointGetRestLength
!"HPhysicsSpringJoint->GetRestLength(  ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::SpringJointSetParameters
!"HPhysicsSpringJoint->SetParameters( float flStiffness, float flDamping ) is called on invalid handle. Please use HPhysicsSpringJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointEnableMotor
!"HPhysicsPrismaticJoint->EnableMotor(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointDisableMotor
!"HPhysicsPrismaticJoint->DisableMotor(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointIsMotorEnabled
!"HPhysicsPrismaticJoint->IsMotorEnabled(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointSetTargetVelocity
!"HPhysicsPrismaticJoint->SetTargetVelocity( float flTargetVelocity ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointGetTargetVelocity
!"HPhysicsPrismaticJoint->GetTargetVelocity(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointSetMaxForce
!"HPhysicsPrismaticJoint->SetMaxForce( float flMaxForce ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointGetMaxForce
!"HPhysicsPrismaticJoint->GetMaxForce(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointGetMotorForce
!"HPhysicsPrismaticJoint->GetMotorForce( float dt ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointEnableLimit
!"HPhysicsPrismaticJoint->EnableLimit(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointDisableLimit
!"HPhysicsPrismaticJoint->DisableLimit(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointIsLimitEnabled
!"HPhysicsPrismaticJoint->IsLimitEnabled(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointSetLimitRange
!"HPhysicsPrismaticJoint->SetLimitRange( const Range_t& range ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointGetLimitRange
!"HPhysicsPrismaticJoint->GetLimitRange(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointGetSliderOffset
!"HPhysicsPrismaticJoint->GetSliderOffset(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::PrismaticJointGetSliderSpeed
!"HPhysicsPrismaticJoint->GetSliderSpeed(  ) is called on invalid handle. Please use HPhysicsPrismaticJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetLocalJointFrame1
!"HPhysicsConicalJoint->GetLocalJointFrame1(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetJointFrame1
!"HPhysicsConicalJoint->GetJointFrame1(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetLocalJointFrame2
!"HPhysicsConicalJoint->GetLocalJointFrame2(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetJointFrame2
!"HPhysicsConicalJoint->GetJointFrame2(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointEnableMotor
!"HPhysicsConicalJoint->EnableMotor(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointDisableMotor
!"HPhysicsConicalJoint->DisableMotor(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointIsMotorEnabled
!"HPhysicsConicalJoint->IsMotorEnabled(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointSetMaxTorque
!"HPhysicsConicalJoint->SetMaxTorque( float flMaxTorque ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetMaxTorque
!"HPhysicsConicalJoint->GetMaxTorque(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointSetTargetVelocity
!"HPhysicsConicalJoint->SetTargetVelocity( const Vector& vTargetVelocity ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetTargetVelocity
!"HPhysicsConicalJoint->GetTargetVelocity(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetMotorTorque
!"HPhysicsConicalJoint->GetMotorTorque( float dt ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointEnableTwistLimit
!"HPhysicsConicalJoint->EnableTwistLimit(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointDisableTwistLimit
!"HPhysicsConicalJoint->DisableTwistLimit(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointIsTwistLimitEnabled
!"HPhysicsConicalJoint->IsTwistLimitEnabled(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointSetTwistRange
!"HPhysicsConicalJoint->SetTwistRange( const Range_t& range ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetTwistRange
!"HPhysicsConicalJoint->GetTwistRange(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetTwistAngle
!"HPhysicsConicalJoint->GetTwistAngle(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetTwistTorque
!"HPhysicsConicalJoint->GetTwistTorque( float dt ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointEnableSwingLimit
!"HPhysicsConicalJoint->EnableSwingLimit(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointDisableSwingLimit
!"HPhysicsConicalJoint->DisableSwingLimit(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointIsSwingLimitEnabled
!"HPhysicsConicalJoint->IsSwingLimitEnabled(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointSetSwingLimit
!"HPhysicsConicalJoint->SetSwingLimit( float flSwingLimit ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetSwingLimit
!"HPhysicsConicalJoint->GetSwingLimit(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetSwingAngle
!"HPhysicsConicalJoint->GetSwingAngle(  ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
CVPhys2HandleInterfaceImpl::ConicalJointGetSwingTorque
!"HPhysicsConicalJoint->GetSwingTorque( float dt ) is called on invalid handle. Please use HPhysicsConicalJoint.IsValid() to check if handle is valid."
VPhysics2_Handle_Interface_001
CVPhysics2Interface::CreateAggregateDataFromDiskData
pNewAggData->m_BonesHash.Count() == pNewAggData->m_BoneNames.Count() && ( nPartCount == pNewAggData->m_BoneNames.Count() || ( nPartCount == 1 && pNewAggData->m_BoneNames.Count() == 0 ) )
CPhysDataTypeManager::Deallocate
pAgg->GetData() != pAggData
Resource Reallocate: Leaking Cloth Data @%p
Unknown interaction layer: %s
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlhash.h
CUtlScalarHash<class CVPhysics2SurfaceProperyController::CSurfacePropertiesPair,class CPassthroughHash32>::Element
unsigned(hHash)<=m_uiBucketMask
CBaseIntrospectedTypeManager:  Missing TYPEMETA MDiskDataForResourceType
CDefaultIntrospectedTypeManager<495958126710,struct VPhysXAggregateData_t>::Init
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcefile\introspectedtypemanager.h
CBaseIntrospectedTypeManager:  Bindings don't match.
CDefaultIntrospectedTypeManager<440006964086,class CVPhysXSurfacePropertiesList>::Init
CUtlScalarHash<class CVPhysics2SurfaceProperyController::CSurfacePropertiesPair,class CPassthroughHash32>::Insert
uiKey != (uint)InvalidHandle()
CStrongHandle<struct InfoForResourceTypeCVPhysXSurfacePropertiesList>::Shutdown
Unaccounted
CUtlMemory<class CUtlString,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<struct CCookieHandlePool::Entry_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
Unaccounted
CUtlMemory<class CVPhys2World *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
vphysics2
CUtlMemoryConservative<struct VPhysXBodyPart_t const *>::ReAlloc
!m_pMemory || sz > 0
ReAlloc(0) can cause a crash on some platforms (like Linux)
VApplication001
VEngineCvar007
VStringTokenSystem001
EventSystem001
TestScriptMgr001
VProcessUtils002
Physics2 Interface Old v0.5
VPhysX Interface ResourceMgr v0.1
VBaseFileSystem011
VFileSystem017
VNewAsyncFileSystem001
ResourceSystemTools001
ResourceManifestRegistry001
ResourceHandleUtils001
SchemaSystem_001
ResourceCompilerSystem001
VMaterialSystem2_001
PostProcessingSystem_001
InputSystemVersion001
InputStackSystemVersion001
RenderDeviceMgr001
RenderUtils_001
SoundSystem001
SoundMixGroupSystem001
SoundOpSystemEdit001
SoundOpSystem001
DebugTextureInfo001
VBAllocTracker001
COLORCORRECTION_VERSION_1
VMDLLIB001
QueuedLoaderVersion001
VGUI_ivgui008
VGUI_Input005
VGUI_Panel010
VGUI_Surface032
VGUI_Scheme010
VGUI_System010
Localize_001
VDataCache003
VMediaFoundation001
VAvi001
VBik001
IQuickTime001
VDmeMakeFileUtils001
MeshSystem001
MeshUtils001
RenderDevice002
VRenderDeviceSetupV001
RenderHardwareConfig002
SceneSystem_002
SceneUtils_001
WorldRendererMgr001
RenderSystemSurface001
AssetSystem001
AssetSystemTest001
ParticleSystemMgr002
VScriptManager010
ToolScriptManager001
PropertyEditorSystem_001
ModelProcessingSystem001
MATCHFRAMEWORK_001
PanoramaUIEngine001
PanoramaUIClient001
ToolFramework2_001
WorldRendererBuilderMgr001
LightingBuilderMgr001
PhysicsBuilderMgr001
VisBuilder_001
EnvironmentMapBuilder_001
BakedLODBuilderMgr001
DotaCardGameClient_001
HelpSystem_001
ToolSceneNodeFactory_001
ToolGameSimulationSystem_001
ToolGameSimulationDispatcher_001
SchemaTestExternal_Two_001
SchemaTestExternal_One_001
AnimationSystem_001
AnimationSystemUtils_001
HammerMapLoader001
MaterialUtils_001
FontManager_001
TextLayout_001
AssetPreviewSystem_001
AssetBrowserSystem_001
VConComm001
ConfigurationSystem_001
NetworkSystemVersion001
NetworkSystemUtilsVersion001
NetworkMessagesVersion001
FlattenedSerializersVersion001
Source2Client001
Source2ClientPrediction001
Source2Server001
Source2ServerSerializers001
Source2Host001
Source2GameClients001
Source2GameEntities001
EngineServiceMgr001
HostStateMgr001
NetworkService_001
NetworkClientService_001
NetworkP2PService_001
NetworkServerService_001
TextMessageMgr_001
ToolService_001
RenderService_001
StatsService_001
UserInfoChangeService_001
VProfService_001
InputService_001
MapListService_001
GameUIService_001
SoundService_001
BenchmarkService001
VDebugService_001
KeyValueCache001
GameResourceServiceClientV001
GameResourceServiceServerV001
Source2EngineToClient001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2EngineToClientStringTable001
ServerUploadGameStats001
ScaleformUI001
WorkshopSetup001
NavSystem001
c:\buildslave\vrgdc2015_staging_win64\build\src\interfaces\interfaces.cpp
RegisterInterface
s_nRegistrationCount < ARRAYSIZE(s_pConnectionRegistration)
ReconnectInterface
CallPostConnect
pCallback == NULL
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!
ConnectInterfaces
DisconnectInterfaces
s_nConnectionCount > 0
c:\buildslave\vrgdc2015_staging_win64\build\src\mathlib\mathlib_base.cpp
_VectorNormalizeFast
fabs( vec.LengthSqr() - 1.0f ) < 1e-3
VectorTransform
in1 != out
BoxOnPlaneSide
sides != 0
QuaternionConjugate
p.IsValid()
QuaternionInvert
magnitudeSqr
QuaternionNormalize
q.IsValid()
QuaternionDotProduct
QuaternionMult
QuaternionMatrix
pos.IsValid()
QuaternionMatrixOrientationOnly
RotateBetween
( VectorTransform( v1, QuaternionMatrix( qOut ) ) - v2 ).Length() < 2e-3f
QuaternionAngles
angles.IsValid()
MathLib_Init
SSE and SSE2 are required.
?c:\buildslave\vrgdc2015_staging_win64\build\src\mathlib\color_conversion.cpp
GammaToLinear
index >= 0 && index < 256
@fff>fff>fff>fff>
c:\buildslave\vrgdc2015_staging_win64\build\src\mathlib\femodeldesc.cpp
pFeDesc->m_TreeChildren.Count() == 0 || pFeDesc->m_TreeChildren.Count() == ( int )pFeDesc->GetDynamicNodeCount() - 1
pFeDesc->m_TreeParents.Count() == 0 || pFeDesc->m_TreeParents.Count() == 2 * ( int )pFeDesc->GetDynamicNodeCount() - 1
pFeDesc->m_TreeParents.Count() == pFeDesc->m_TreeCollisionMasks.Count()
pFeDesc->m_NodeInvMasses.Count() == 0 || pFeDesc->m_NodeInvMasses.Count() == pFeDesc->m_nNodeCount
MemAllocClassName
RESOLVE_CONTACTS
NOTIFY_TOUCH_FOUND
NOTIFY_TOUCH_PERSISTS
NOTIFY_TOUCH_LOST
c:\buildslave\vrgdc2015_staging_win64\build\src\modellib\physintersectionattributes.cpp
RnQueryShapeAttr_t::TestQuery
collisionGroup < COLLISION_GROUPS_MAX_ALLOWED && shapeCollisionGroup < COLLISION_GROUPS_MAX_ALLOWED
( layerIndex * sizeof( uint16 ) ) < constantBlockSize
c:\buildslave\vrgdc2015_staging_win64\build\src\public\rubikon\serialize.h
RnSphere_t::GetTriangulation
24 == pOut - pVerts
RnCapsule_t::GetTriangulation
nSides * ( 2 + 2 * ( 2 * nSlices + 1 ) ) * 3 == pOut - pVerts
VertexPos_t
c:\buildslave\vrgdc2015_staging_win64\build\src\modellib\physicsresourcehelpers.cpp
FindBodyPartByHash
pBonesHash[pIndexHash[i-1]] <= pBonesHash[pIndexHash[i]]
phys_res
CreatePhysicsBodySceneObject(302): 
testbed
vb phys
ptestbed
PhysBody
CVertexDataBase<struct VertexPos_t>::AdvanceVertex
CVertexData<struct VertexPos_t>::Unlock
CVertexDataBase<struct VertexPos_t>::~CVertexDataBase
CVertexData<struct VertexPos_t>::Lock
?UUUUUU
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\modellib\physaggregatedata.cpp
CPhysAggregateData::CPhysAggregateData
pAggregateData->GetPartCount() == 1
Currently allocated agg data: {
  0x%08X %s,
 %llu aggs, %s total data
ShallowCopy
dst.Count() == src.Count()
Unaccounted
CUtlMemory<unsigned short,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<class CPhysAggregateData *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
FindTOI
SolveContactTOI
SolveParallel
CastRay
CastSphere
DelayedDeletions
BroadphaseUpdate
PhysicsGameSystem::OnSimulate
PhysicsGameSystem::StartSimulateFrame
PhysicsGameSystem::FinishSimulateFrame
Body::BuildMass
Body::SetTransform
Shadow Controllers Prepare
Shadow Controllers Step
Shadow Controllers Finalize
IntersectSegmentTriangle
CastSphereTriangle
SweepSingleConvex
HullCastSphere
SATQuery
SATCacheHit
MeshCollide
MeshCollideCacheMiss
m_vertexBuffers
m_attachments
m_hitboxsets
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utldict.h
CStrongHandle<struct InfoForResourceTypeCMorphSet>::Shutdown
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlrbtree.h
m_Root == InvalidIndex()
m_FirstFree == InvalidIndex()
m_NumElements == 0
Unaccounted
CUtlMemory<struct RenderSkeletonBone_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<class CUtlStringToken,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<class CMaterialDrawDescriptor,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<class CHitBox,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<class CHitBoxSet,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<class CSceneObjectData,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
CUtlRBTree<struct CUtlMap<char const *,class CAttachment,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int,class CUtlMap<char const *,class CAttachment,int,bool (__cdecl*)(char const * const &,char const * const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<char const *,class CAttachment,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int>,int> >::SetLessFunc
CUtlRBTree<struct CUtlMap<char const *,class CHitBoxSet,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int,class CUtlMap<char const *,class CHitBoxSet,int,bool (__cdecl*)(char const * const &,char const * const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<char const *,class CHitBoxSet,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int>,int> >::SetLessFunc
Unaccounted
CUtlMemory<class CBaseConstraint *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
m_Elements.IsValidIterator( m_LastAlloc ) || m_NumElements == 0
m_Elements.IsValidIterator( it )
m_Elements.IsValidIterator( m_LastAlloc )
CUtlRBTree<struct CUtlMap<char const *,class CAttachment,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int,class CUtlMap<char const *,class CAttachment,int,bool (__cdecl*)(char const * const &,char const * const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<char const *,class CAttachment,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int>,int> >::RemoveAll
CUtlRBTree<struct CUtlMap<char const *,class CHitBoxSet,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int,class CUtlMap<char const *,class CHitBoxSet,int,bool (__cdecl*)(char const * const &,char const * const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<char const *,class CHitBoxSet,int,bool (__cdecl*)(char const * const &,char const * const &)>::Node_t,int>,int> >::RemoveAll
c:\buildslave\vrgdc2015_staging_win64\build\src\public\bitvec.h
Other VScript
c:\buildslave\vrgdc2015_staging_win64\build\src\modellib\model.cpp
modellib
AnimContainer::GetAnimdesc
CUtlHash<struct BoneHashPairing_t,bool (__cdecl*)(struct BoneHashPairing_t const &,struct BoneHashPairing_t const &),unsigned int (__cdecl*)(struct BoneHashPairing_t const &)>::BuildHandle
( ndxBucket >= 0 ) && ( ndxBucket < 65536 )
( ndxKeyData >= 0 ) && ( ndxKeyData < 65536 )
CVertexDataBase<struct PhysicsDebugVertex_t>::AdvanceVertexCount
( m_nVertexIncrement == 0 ) || ( m_nVertexCount + nNumVertices <= m_nMaxVertexCount )
Unaccounted
CUtlMemory<struct PhysicsDebugVertex_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
CResourceString
CResourceArray
c:\buildslave\vrgdc2015_staging_win64\build\src\public\schemasystem\schema.h
MDefaultString
MDmElementType
MAttributeName
c:\buildslave\vrgdc2015_staging_win64\build\src\public\schemalib\schemaclassinfo.h
CSchemaClassInfo::CompleteInitialization
m_pOuterTypeScope != NULL
CSchemaClassInfo::CompleteInitializationInternal
!m_bInitialized
m_pTypeOf != NULL
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcefile\resourcestream.h
MDiskDataForResourceType
CVPhysXSurfacePropertiesList
CVPhysXSurfacePhysicsParams
CVPhysXSurfaceAudioParams
CVPhysXSurfaceAudioSounds
CVPhysXSurfaceGameProperties
CPhysSurfaceProperties
friction
elasticity
density
thickness
dampening
DmeSurfacePhysicsParams
m_friction
m_elasticity
m_density
m_thickness
m_dampening
From Class Binding
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\vphysx_surfaceproperties_resource_h_schema.gen_cpp
CVPhysXSurfacePhysicsParams::Schema_VerifyBindingIsRegistered
( g_pSchemaSystem == NULL ) || (s_pSchemaBinding != NULL)
WARNING: Trying to access schema binding '%s' before bindings were registered in this module!
audioreflectivity
audiohardnessfactor
audioroughnessfactor
scrapeRoughThreshold
impactHardThreshold
audioHardMinVelocity
DmeSurfaceAudioParams
m_reflectivity
m_hardnessFactor
m_roughnessFactor
m_roughThreshold
m_hardThreshold
m_hardVelocityThreshold
CVPhysXSurfaceAudioParams::Schema_VerifyBindingIsRegistered
walkleft
walkright
runleft
runright
impactsoft
impacthard
scrapesmooth
scraperough
bulletimpact
rolling
DmeSurfaceAudioSounds
m_walkStepLeft
m_walkStepRight
m_runStepLeft
m_runStepRight
m_impactSoft
m_impactHard
m_scrapeSmooth
m_scrapeRough
m_bulletImpact
m_rolling
m_break
m_strain
CVPhysXSurfaceAudioSounds::Schema_VerifyBindingIsRegistered
maxspeedfactor
jumpfactor
gamematerial
climbable
m_flMaxSpeedFactor
m_flJumpFactor
m_nMaterial
m_bClimbable
CVPhysXSurfaceGameProperties::Schema_VerifyBindingIsRegistered
surfacePropertyName
description
physics
audiosounds
audioparams
gameproperties
DmeSurfaceProperties
m_nameHash
m_description
m_physics
m_audioSounds
m_audioParams
m_gameProperties
CPhysSurfaceProperties::Schema_VerifyBindingIsRegistered
SurfacePropertiesList
DmeSurfacePropertyList
m_surfacePropertiesList
CVPhysXSurfacePropertiesList::Schema_VerifyBindingIsRegistered
modellib
c:\buildslave\vrgdc2015_staging_win64\build\src\public\schemasystem\baseschema.h
ERROR: CAtomicManipulator::Allocate() Cannot allocate CResourceArray
CAtomicManipulator<class CResourceArray<class CPhysSurfaceProperties> >::Allocate
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate CResourceArray
CAtomicManipulator<class CResourceArray<class CPhysSurfaceProperties> >::AllocateAndCopy
ERROR: CAtomicManipulator::Copy() Cannot copy CResourceArray(FIXME: maybe you can?)
CAtomicManipulator<class CResourceArray<class CPhysSurfaceProperties> >::Copy
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate CResourceArray
CAtomicManipulator<class CResourceArray<class CPhysSurfaceProperties> >::Deallocate
CSchemaClassBindingBase::RegBase
m_pSchemaType != NULL
Quaternion
matrix3x4a_t
CTransform
CResourcePointer
MNoScatter
RnSphereDesc_t
RnCapsuleDesc_t
RnHullDesc_t
RnMeshDesc_t
RnSoftbodyParticle_t
RnSoftbodySpring_t
RnSoftbodyCapsule_t
VpropBreakablePartData_t
PhysFeModelDesc_t
VPhysics2ShapeDef_t
VPhysXBodyPart_t
VPhysXBodyPart_t::VPhysXFlagEnum_t
VPhysXCollisionAttributes_t
VPhysXRange_t
VPhysXConstraintParams_t
VPhysXConstraintParams_t::EnumFlags0_t
VPhysXConstraint2_t
VPhysXJoint_t
PhysSoftbodyDesc_t
VPhysXAggregateData_t
VPhysXAggregateData_t::VPhysXFlagEnum_t
VPhysXBodyPart_t::FLAG_STATIC
VPhysXBodyPart_t::FLAG_KINEMATIC
VPhysXBodyPart_t::FLAG_JOINT
VPhysXBodyPart_t::FLAG_MASS
From Enum Binding
VPhysXConstraintParams_t::FLAG0_SHIFT_INTERPENETRATE
VPhysXConstraintParams_t::FLAG0_SHIFT_CONSTRAIN
VPhysXConstraintParams_t::FLAG0_SHIFT_BREAKABLE_FORCE
VPhysXConstraintParams_t::FLAG0_SHIFT_BREAKABLE_TORQUE
VPhysXAggregateData_t::FLAG_IS_POLYSOUP_GEOMETRY
VPhysXAggregateData_t::FLAG_LEVEL_COLLISION
VPhysXAggregateData_t::FLAG_IGNORE_SCALE
m_spheres
m_capsules
m_hulls
m_meshes
m_CollisionAttributeIndices
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\vphysx_collisionmesh_resource_h_schema.gen_cpp
VPhysics2ShapeDef_t::Schema_VerifyBindingIsRegistered
m_nFlags
m_flMass
m_rnShape
m_pBreakablePartData
m_nSurfacepropertyIndices
m_nCollisionAttributeIndex
m_nReserved
m_flInertiaScale
m_flLinearDamping
m_flAngularDamping
VPhysXBodyPart_t::Schema_VerifyBindingIsRegistered
m_CollisionGroup
m_InteractAs
m_InteractWith
m_CollisionGroupString
m_InteractAsStrings
m_InteractWithStrings
VPhysXCollisionAttributes_t::Schema_VerifyBindingIsRegistered
m_flMin
m_flMax
VPhysXRange_t::Schema_VerifyBindingIsRegistered
m_nType
m_nTranslateMotion
m_nRotateMotion
m_anchor
m_maxForce
m_maxTorque
m_linearLimitValue
m_linearLimitRestitution
m_linearLimitSpring
m_linearLimitDamping
m_twistLowLimitValue
m_twistLowLimitRestitution
m_twistLowLimitSpring
m_twistLowLimitDamping
m_twistHighLimitValue
m_twistHighLimitRestitution
m_twistHighLimitSpring
m_twistHighLimitDamping
m_swing1LimitValue
m_swing1LimitRestitution
m_swing1LimitSpring
m_swing1LimitDamping
m_swing2LimitValue
m_swing2LimitRestitution
m_swing2LimitSpring
m_swing2LimitDamping
m_goalPosition
m_goalOrientation
m_goalAngularVelocity
m_driveSpringX
m_driveSpringY
m_driveSpringZ
m_driveDampingX
m_driveDampingY
m_driveDampingZ
m_driveSpringTwist
m_driveSpringSwing
m_driveSpringSlerp
m_driveDampingTwist
m_driveDampingSwing
m_driveDampingSlerp
m_solverIterationCount
m_projectionLinearTolerance
m_projectionAngularTolerance
VPhysXConstraintParams_t::Schema_VerifyBindingIsRegistered
m_nParent
m_nChild
m_params
VPhysXConstraint2_t::Schema_VerifyBindingIsRegistered
m_nBody1
m_nBody2
m_Frame1
m_Frame2
m_bEnableLinearLimit
m_LinearLimit
m_bEnableLinearMotor
m_vLinearTargetVelocity
m_flMaxForce
m_bEnableSwingLimit
m_SwingLimit
m_bEnableTwistLimit
m_TwistLimit
m_bEnableAngularMotor
m_vAngularTargetVelocity
m_flMaxTorque
m_flLinearFrequency
m_flLinearDampingRatio
m_flAngularFrequency
m_flAngularDampingRatio
VPhysXJoint_t::Schema_VerifyBindingIsRegistered
m_ParticleBoneHash
m_Particles
m_Springs
m_Capsules
m_InitPose
m_ParticleBoneName
PhysSoftbodyDesc_t::Schema_VerifyBindingIsRegistered
m_nRefCounter
m_bonesHash
m_boneNames
m_indexNames
m_indexHash
m_bindPose
m_parts
m_constraints2
m_joints
m_pFeModel
m_boneParents
m_surfacePropertyHashes
m_collisionAttributes
m_debugPartNames
m_embeddedKeyvalues
VPhysXAggregateData_t::Schema_VerifyBindingIsRegistered
CSchemaEnumBinding<enum VPhysXBodyPart_t::VPhysXFlagEnum_t>::Get
(s_pThisModuleBindingPointer != NULL)
WARNING: Trying to access schema enum binding before bindings were registered in this module! - %s()
CSchemaEnumBinding<enum VPhysXConstraintParams_t::EnumFlags0_t>::Get
CSchemaEnumBinding<enum VPhysXAggregateData_t::VPhysXFlagEnum_t>::Get
CAtomicManipulator<class CResourceArray<struct RnSphereDesc_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnSphereDesc_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnSphereDesc_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnSphereDesc_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnCapsuleDesc_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnCapsuleDesc_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnCapsuleDesc_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnCapsuleDesc_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnHullDesc_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnHullDesc_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnHullDesc_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnHullDesc_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnMeshDesc_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnMeshDesc_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnMeshDesc_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnMeshDesc_t> >::Deallocate
CAtomicManipulator<class CResourceArray<unsigned short> >::Allocate
CAtomicManipulator<class CResourceArray<unsigned short> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<unsigned short> >::Copy
CAtomicManipulator<class CResourceArray<unsigned short> >::Deallocate
CAtomicManipulator<class CResourceArray<unsigned char> >::Allocate
CAtomicManipulator<class CResourceArray<unsigned char> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<unsigned char> >::Copy
CAtomicManipulator<class CResourceArray<unsigned char> >::Deallocate
CAtomicManipulator<class CResourceArray<unsigned int> >::Allocate
CAtomicManipulator<class CResourceArray<unsigned int> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<unsigned int> >::Copy
CAtomicManipulator<class CResourceArray<unsigned int> >::Deallocate
CAtomicManipulator<class CResourceArray<class CResourceString> >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceString> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceString> >::Copy
CAtomicManipulator<class CResourceArray<class CResourceString> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnSoftbodyParticle_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnSoftbodyParticle_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnSoftbodyParticle_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnSoftbodyParticle_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnSoftbodySpring_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnSoftbodySpring_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnSoftbodySpring_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnSoftbodySpring_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnSoftbodyCapsule_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnSoftbodyCapsule_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnSoftbodyCapsule_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnSoftbodyCapsule_t> >::Deallocate
CAtomicManipulator<class CResourceArray<class CTransform> >::Allocate
CAtomicManipulator<class CResourceArray<class CTransform> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CTransform> >::Copy
CAtomicManipulator<class CResourceArray<class CTransform> >::Deallocate
CAtomicManipulator<class CResourceArray<class matrix3x4a_t> >::Allocate
CAtomicManipulator<class CResourceArray<class matrix3x4a_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class matrix3x4a_t> >::Copy
CAtomicManipulator<class CResourceArray<class matrix3x4a_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct VPhysXBodyPart_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct VPhysXBodyPart_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct VPhysXBodyPart_t> >::Copy
CAtomicManipulator<class CResourceArray<struct VPhysXBodyPart_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct VPhysXConstraint2_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct VPhysXConstraint2_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct VPhysXConstraint2_t> >::Copy
CAtomicManipulator<class CResourceArray<struct VPhysXConstraint2_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct VPhysXJoint_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct VPhysXJoint_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct VPhysXJoint_t> >::Copy
CAtomicManipulator<class CResourceArray<struct VPhysXJoint_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct VPhysXCollisionAttributes_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct VPhysXCollisionAttributes_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct VPhysXCollisionAttributes_t> >::Copy
CAtomicManipulator<class CResourceArray<struct VPhysXCollisionAttributes_t> >::Deallocate
Vector4D
MAlignment
InfoForResourceTypeIMaterial2
InfoForResourceTypeCMorphSet
RenderInputLayoutField_t
Double-save to Member '%s'
MeshTranslucencyType_t
MeshDrawPrimitiveFlags_t
SkeletonBoneBbox_t
RenderSkeletonData_t
RenderSkeletonData_t::FlagEnum_t
RenderBufferBinding_t
MaterialDrawDescriptor_t
OnDiskBufferData_t
SceneObjectData_t
AttachmentInfluenceFlags_t
AttachmentData_t
HitBox_t
HitBoxSet_t
ConstraintType_t
ConstraintTarget_t
ConstraintSlave_t
BaseConstraint_t
PermRenderMeshData_t
MESH_TRANSLUCENCY_FULLY_OPAQUE
MESH_TRANSLUCENCY_PARTIALLY_ALPHA_BLENDED
MESH_TRANSLUCENCY_FULLY_ALPHA_BLENDED
MESH_DRAW_FLAGS_NONE
MESH_DRAW_FLAGS_USE_SHADOW_FAST_PATH
MESH_DRAW_FLAGS_USE_COMPRESSED_NORMAL_TANGENT
MESH_DRAW_FLAGS_IS_OCCLUDER
MESH_DRAW_INPUT_LAYOUT_IS_NOT_MATCHED_TO_MATERIAL
MESH_DRAW_FLAGS_USE_COMPRESSED_PER_VERTEX_LIGHTING
MESH_DRAW_FLAGS_USE_UNCOMPRESSED_PER_VERTEX_LIGHTING
RenderSkeletonData_t::FLAG_BLEND_WEIGHT_COUNT_SHIFT
RenderSkeletonData_t::FLAG_BLEND_WEIGHT_COUNT_MASK
ATTACHMENT_INFLUENCE_FLAGS_NONE
ATTACHMENT_INFLUENCE_FLAGS_ROOT_TRANSFORM
CONSTRAINT_TYPE_INVALID
CONSTRAINT_TYPE_HELPER_BONE
CONSTRAINT_TYPE_TWIST
CONSTRAINT_TYPE_AIM
CONSTRAINT_TYPE_POINT
CONSTRAINT_TYPE_ROTATION
CONSTRAINT_TYPE_ORIENT
CONSTRAINT_TYPE_2_BONE_IK
CONSTRAINT_TYPE_JIGGLE_BONE
CONSTRAINT_TYPE_MAX
m_vecCenter
m_vecSize
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\permrendermeshdata_h_schema.gen_cpp
SkeletonBoneBbox_t::Schema_VerifyBindingIsRegistered
m_nBoneCount
m_nBoneWeightCount
m_invBindPose
m_bboxes
RenderSkeletonData_t::Schema_VerifyBindingIsRegistered
m_hBuffer
m_nBindOffsetBytes
RenderBufferBinding_t::Schema_VerifyBindingIsRegistered
m_nBaseVertex
m_nVertexCount
m_nStartIndex
m_nIndexCount
m_nStartInstance
m_nInstanceCount
m_flUvDensity
m_nPrimitiveType
m_bAlphaBlendedMaterial
m_padding
m_hInputLayoutHandle
m_indexBuffer
m_pMaterial
MaterialDrawDescriptor_t::Schema_VerifyBindingIsRegistered
m_nElementCount
m_nElementSizeInBytes
m_inputLayoutFields
m_pData
OnDiskBufferData_t::Schema_VerifyBindingIsRegistered
m_vMinBounds
m_vMaxBounds
m_translucencyType
m_drawCalls
m_vTintColor
SceneObjectData_t::Schema_VerifyBindingIsRegistered
m_influenceNames
m_vInfluenceOffsets
m_vInfluenceRotations
m_influenceWeights
m_nInfluences
AttachmentData_t::Schema_VerifyBindingIsRegistered
m_sSurfaceProperty
m_nGroupId
m_sBoneName
m_nBoneNameHash
m_cRenderColor
m_nHitBoxIndex
m_bVisible
HitBox_t::Schema_VerifyBindingIsRegistered
m_SourceFilename
m_hitboxes
HitBoxSet_t::Schema_VerifyBindingIsRegistered
m_nBoneHash
m_flWeight
m_vOffset
m_qOffset
m_bIsAttachment
ConstraintTarget_t::Schema_VerifyBindingIsRegistered
m_vBasePosition
m_qBaseOrientation
ConstraintSlave_t::Schema_VerifyBindingIsRegistered
m_nConstraintType
m_vUpVector
m_qAimOffset
m_nTargetUpBoneHash
m_nUpType
m_bInverse
m_qParentBindRotation
m_qChildBindRotation
m_slaves
m_targets
BaseConstraint_t::Schema_VerifyBindingIsRegistered
m_sceneObjects
m_pMorphSet
m_skeleton
m_boneConstraints
m_indexBuffers
PermRenderMeshData_t::Schema_VerifyBindingIsRegistered
CSchemaEnumBinding<enum MeshTranslucencyType_t>::Get
CSchemaEnumBinding<enum MeshDrawPrimitiveFlags_t>::Get
CSchemaEnumBinding<enum RenderSkeletonData_t::FlagEnum_t>::Get
CSchemaEnumBinding<enum AttachmentInfluenceFlags_t>::Get
CSchemaEnumBinding<enum ConstraintType_t>::Get
CResourceExtReference
CAtomicManipulator<class CResourceArray<struct SkeletonBoneBbox_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct SkeletonBoneBbox_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct SkeletonBoneBbox_t> >::Copy
CAtomicManipulator<class CResourceArray<struct SkeletonBoneBbox_t> >::Deallocate
CAtomicManipulator<class CResourceArray<float> >::Allocate
CAtomicManipulator<class CResourceArray<float> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<float> >::Copy
CAtomicManipulator<class CResourceArray<float> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RenderBufferBinding_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RenderBufferBinding_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RenderBufferBinding_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RenderBufferBinding_t> >::Deallocate
CWeakHandle
CAtomicManipulator<class CResourceArray<struct RenderInputLayoutField_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RenderInputLayoutField_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RenderInputLayoutField_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RenderInputLayoutField_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct MaterialDrawDescriptor_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct MaterialDrawDescriptor_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct MaterialDrawDescriptor_t> >::Copy
CAtomicManipulator<class CResourceArray<struct MaterialDrawDescriptor_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct HitBox_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct HitBox_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct HitBox_t> >::Copy
CAtomicManipulator<class CResourceArray<struct HitBox_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct ConstraintSlave_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct ConstraintSlave_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct ConstraintSlave_t> >::Copy
CAtomicManipulator<class CResourceArray<struct ConstraintSlave_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct ConstraintTarget_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct ConstraintTarget_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct ConstraintTarget_t> >::Copy
CAtomicManipulator<class CResourceArray<struct ConstraintTarget_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct SceneObjectData_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct SceneObjectData_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct SceneObjectData_t> >::Copy
CAtomicManipulator<class CResourceArray<struct SceneObjectData_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct AttachmentData_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct AttachmentData_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct AttachmentData_t> >::Copy
CAtomicManipulator<class CResourceArray<struct AttachmentData_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct HitBoxSet_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct HitBoxSet_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct HitBoxSet_t> >::Copy
CAtomicManipulator<class CResourceArray<struct HitBoxSet_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct BaseConstraint_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct BaseConstraint_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct BaseConstraint_t> >::Copy
CAtomicManipulator<class CResourceArray<struct BaseConstraint_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct OnDiskBufferData_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct OnDiskBufferData_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct OnDiskBufferData_t> >::Copy
CAtomicManipulator<class CResourceArray<struct OnDiskBufferData_t> >::Deallocate
Unaccounted
CUtlMemory<struct ConstraintSlave_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<struct ConstraintTarget_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
matrix3x4_t
CUtlString
CUtlVector
CRenderMesh
RenderPrimitiveType_t
MEmitKV3TransferPostLoadFn
MEmitKV3TransferPreSaveFn
MEmitKV3TransferPostSaveFn
CBaseConstraint
RenderSkeletonBone_t
CRenderSkeleton
CMaterialDrawDescriptor
CSceneObjectData
CAttachment
CHitBox
CHitBoxSet
CHitBoxSetList
m_boneName
m_parentName
m_flSphereRadius
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\rendermesh_h_schema.gen_cpp
RenderSkeletonBone_t::Schema_VerifyBindingIsRegistered
TransferPostLoadFn
m_bones
CRenderSkeleton::Schema_VerifyBindingIsRegistered
TransferPostSaveFn
m_material
CMaterialDrawDescriptor::Schema_VerifyBindingIsRegistered
CSceneObjectData::Schema_VerifyBindingIsRegistered
m_influenceFlags
CAttachment::Schema_VerifyBindingIsRegistered
m_forcedRotation
m_bForcedRotation
m_bSelected
CHitBox::Schema_VerifyBindingIsRegistered
m_nNameHash
m_HitBoxes
CHitBoxSet::Schema_VerifyBindingIsRegistered
m_HitBoxSets
CHitBoxSetList::Schema_VerifyBindingIsRegistered
TransferPreSaveFn
m_morphSet
m_constraints
CRenderMesh::Schema_VerifyBindingIsRegistered
CStrongHandle
CUtlVectorFixedGrowable
c:\buildslave\vrgdc2015_staging_win64\build\src\public\schemasystem\schemabinding.h
MPropertyFriendlyName
multiplayerBreak_t
MULTIPLAYER_BREAK_SERVER
MULTIPLAYER_BREAK_CLIENT
Motion Disabled
Do Not Cast Shadows
Fade Time
Fade Min Distance
Fade Max Distance
Burst Scale
Burst Randomize
Surface Prop Hash
Collision Group Hash
m_bMotionDisabled
m_bNoShadows
m_nHealth
m_nFadeTime
m_nFadeMin
m_nFadeMax
m_flBurstScale
m_flBurstRandomize
m_nSurfaceProp
m_nCollisionGroupHash
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\vpropbreakabledata_h_schema.gen_cpp
VpropBreakablePartData_t::Schema_VerifyBindingIsRegistered
CSchemaEnumBinding<enum multiplayerBreak_t>::Get
CVPhysXLevelData
CVPhysXMesh
DmeVPhysXMesh
m_shape
m_pCollisionResourceName
m_pRenderResourceName
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\vphysx_level_resource_h_schema.gen_cpp
CVPhysXMesh::Schema_VerifyBindingIsRegistered
DmeVPhysXLevel
CVPhysXLevelData::Schema_VerifyBindingIsRegistered
CAtomicManipulator<class CResourceArray<class CVPhysXMesh> >::Allocate
CAtomicManipulator<class CResourceArray<class CVPhysXMesh> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CVPhysXMesh> >::Copy
CAtomicManipulator<class CResourceArray<class CVPhysXMesh> >::Deallocate
VPhysXDiskShapeHeader_t
VPhysXDiskShapeHeader_t::VersinEnum_t
VPhysXDiskMesh2_t
VPhysXShapeCompoundHeader2_t
VPhysXDiskCapsule_t
VPhysXDiskShapeHeader_t::VERSION
m_nCollisionAttribute
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\vphysx_shape_resource_h_schema.gen_cpp
VPhysXDiskShapeHeader_t::Schema_VerifyBindingIsRegistered
m_flSkinWidth
m_flMaxVelocity
m_nReserved2
VPhysXDiskMesh2_t::Schema_VerifyBindingIsRegistered
m_components
m_types
VPhysXShapeCompoundHeader2_t::Schema_VerifyBindingIsRegistered
m_vEnds
m_flRadius
VPhysXDiskCapsule_t::Schema_VerifyBindingIsRegistered
CSchemaEnumBinding<enum VPhysXDiskShapeHeader_t::VersinEnum_t>::Get
CAtomicManipulator<class CResourceArray<class CResourceArray<unsigned char> > >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceArray<unsigned char> > >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceArray<unsigned char> > >::Copy
CAtomicManipulator<class CResourceArray<class CResourceArray<unsigned char> > >::Deallocate
RnDummy_t
m_nDummy
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\constants_h_schema.gen_cpp
RnDummy_t::Schema_VerifyBindingIsRegistered
RnSphere_t
RnCapsule_t
RnPlane_t
RnHalfEdge_t
RnFace_t
RnHull_t
RnTriangle_t
RnNode_t
RnMesh_t
RnShapeDesc_t
RnBlendVertex_t
m_vCenter
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\serialize_h_schema.gen_cpp
RnSphere_t::Schema_VerifyBindingIsRegistered
RnCapsule_t::Schema_VerifyBindingIsRegistered
m_vNormal
m_flOffset
RnPlane_t::Schema_VerifyBindingIsRegistered
m_nNext
m_nTwin
m_nOrigin
m_nFace
RnHalfEdge_t::Schema_VerifyBindingIsRegistered
m_nEdge
RnFace_t::Schema_VerifyBindingIsRegistered
m_vCentroid
m_flMaxAngularRadius
m_Vertices
m_Planes
m_Edges
m_Faces
m_vOrthographicAreas
m_MassProperties
m_flVolume
m_flMaxMotionRadius
m_flMinMotionThickness
m_Bounds
RnHull_t::Schema_VerifyBindingIsRegistered
m_nIndex
RnTriangle_t::Schema_VerifyBindingIsRegistered
m_nChildren
m_nTriangleOffset
RnNode_t::Schema_VerifyBindingIsRegistered
m_Nodes
m_Triangles
m_Materials
RnMesh_t::Schema_VerifyBindingIsRegistered
m_nSurfacePropertyIndex
RnShapeDesc_t::Schema_VerifyBindingIsRegistered
m_Sphere
RnSphereDesc_t::Schema_VerifyBindingIsRegistered
m_Capsule
RnCapsuleDesc_t::Schema_VerifyBindingIsRegistered
RnHullDesc_t::Schema_VerifyBindingIsRegistered
RnMeshDesc_t::Schema_VerifyBindingIsRegistered
m_flMassInv
RnSoftbodyParticle_t::Schema_VerifyBindingIsRegistered
m_nParticle
m_flLength
RnSoftbodySpring_t::Schema_VerifyBindingIsRegistered
RnSoftbodyCapsule_t::Schema_VerifyBindingIsRegistered
m_nWeight0
m_nIndex0
m_nWeight1
m_nIndex1
m_nWeight2
m_nIndex2
m_nTargetIndex
RnBlendVertex_t::Schema_VerifyBindingIsRegistered
CAtomicManipulator<class CResourceArray<class Vector> >::Allocate
CAtomicManipulator<class CResourceArray<class Vector> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class Vector> >::Copy
CAtomicManipulator<class CResourceArray<class Vector> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnPlane_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnPlane_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnPlane_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnPlane_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnHalfEdge_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnHalfEdge_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnHalfEdge_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnHalfEdge_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnFace_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnFace_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnFace_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnFace_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnNode_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnNode_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnNode_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnNode_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct RnTriangle_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct RnTriangle_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct RnTriangle_t> >::Copy
CAtomicManipulator<class CResourceArray<struct RnTriangle_t> >::Deallocate
InfoForResourceTypeCAnimationGroupResource
InfoForResourceTypeCSequenceGroupResource
InfoForResourceTypeCRenderMesh
InfoForResourceTypeCModel
InfoForResourceTypeCPhysAggregateData
MaterialGroup_t
ModelSkeletonData_t
ModelSkeletonData_t::BoneFlags_t
PermModelInfo_t
PermModelInfo_t::FlagEnum
PermModelExtPart_t
ModelBoneFlexComponent_t
ModelBoneFlexDriverControl_t
ModelBoneFlexDriver_t
PermModelData_t
ModelSkeletonData_t::FLAG_NO_BONE_FLAGS
ModelSkeletonData_t::FLAG_BONEFLEXDRIVER
ModelSkeletonData_t::FLAG_CLOTH
ModelSkeletonData_t::FLAG_PHYSICS
ModelSkeletonData_t::FLAG_ATTACHMENT
ModelSkeletonData_t::FLAG_ANIMATION
ModelSkeletonData_t::FLAG_MESH
ModelSkeletonData_t::FLAG_HITBOX
ModelSkeletonData_t::FLAG_RETARGET_SRC
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD0
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD1
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD2
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD3
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD4
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD5
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD6
ModelSkeletonData_t::FLAG_BONE_USED_BY_VERTEX_LOD7
ModelSkeletonData_t::FLAG_BONE_MERGE_READ
ModelSkeletonData_t::FLAG_BONE_MERGE_WRITE
ModelSkeletonData_t::FLAG_ALL_BONE_FLAGS
ModelSkeletonData_t::BLEND_PREALIGNED
ModelSkeletonData_t::FLAG_RIGIDLENGTH
ModelSkeletonData_t::FLAG_PROCEDURAL
PermModelInfo_t::FLAG_TRANSLUCENT
PermModelInfo_t::FLAG_TRANSLUCENT_TWO_PASS
PermModelInfo_t::FLAG_MODEL_IS_RUNTIME_COMBINED
PermModelInfo_t::FLAG_SOURCE1_IMPORT
PermModelInfo_t::FLAG_MODEL_PART_CHILD
PermModelInfo_t::FLAG_NAV_GEN_NONE
PermModelInfo_t::FLAG_NAV_GEN_HULL
PermModelInfo_t::FLAG_NO_FORCED_FADE
PermModelInfo_t::FLAG_HAS_SKINNED_MESHES
PermModelInfo_t::FLAG_DO_NOT_CAST_SHADOWS
PermModelInfo_t::FLAG_FORCE_PHONEME_CROSSFADE
PermModelInfo_t::FLAG_NO_ANIM_EVENTS
PermModelInfo_t::FLAG_ANIMATION_DRIVEN_FLEXES
PermModelInfo_t::FLAG_IMPLICIT_BIND_POSE_SEQUENCE
PermModelInfo_t::FLAG_USE_ORIGIN_AS_UNKNOWN_ATTACHMENT_POINT
MODEL_BONE_FLEX_INVALID
MODEL_BONE_FLEX_TX
MODEL_BONE_FLEX_TY
MODEL_BONE_FLEX_TZ
m_materials
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\model_h_schema.gen_cpp
MaterialGroup_t::Schema_VerifyBindingIsRegistered
m_boneSphere
m_nFlag
m_bonePosParent
m_boneRotParent
ModelSkeletonData_t::Schema_VerifyBindingIsRegistered
m_vHullMin
m_vHullMax
m_vViewMin
m_vViewMax
m_vEyePosition
m_flMaxEyeDeflection
m_keyValueText
PermModelInfo_t::Schema_VerifyBindingIsRegistered
m_Transform
m_refModel
PermModelExtPart_t::Schema_VerifyBindingIsRegistered
m_nBoneComponent
m_flexController
m_flexControllerToken
ModelBoneFlexDriverControl_t::Schema_VerifyBindingIsRegistered
m_boneNameToken
m_controls
ModelBoneFlexDriver_t::Schema_VerifyBindingIsRegistered
m_modelInfo
m_ExtParts
m_refMeshes
m_refMeshGroupMasks
m_refPhysGroupMasks
m_refLODGroupMasks
m_lodGroupSwitchDistances
m_refPhysicsData
m_refPhysicsHitboxData
m_refAnimGroups
m_refSequenceGroups
m_meshGroups
m_materialGroups
m_nDefaultMeshGroupMask
m_modelSkeleton
m_remappingTable
m_remappingTableStarts
m_boneFlexDrivers
PermModelData_t::Schema_VerifyBindingIsRegistered
CSchemaEnumBinding<enum ModelSkeletonData_t::BoneFlags_t>::Get
CSchemaEnumBinding<enum PermModelInfo_t::FlagEnum>::Get
CSchemaEnumBinding<enum ModelBoneFlexComponent_t>::Get
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeIMaterial2> > > >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeIMaterial2> > > >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeIMaterial2> > > >::Copy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeIMaterial2> > > >::Deallocate
CAtomicManipulator<class CResourceArray<short> >::Allocate
CAtomicManipulator<class CResourceArray<short> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<short> >::Copy
CAtomicManipulator<class CResourceArray<short> >::Deallocate
CAtomicManipulator<class CResourceArray<class Quaternion> >::Allocate
CAtomicManipulator<class CResourceArray<class Quaternion> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class Quaternion> >::Copy
CAtomicManipulator<class CResourceArray<class Quaternion> >::Deallocate
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriverControl_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriverControl_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriverControl_t> >::Copy
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriverControl_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct PermModelExtPart_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct PermModelExtPart_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct PermModelExtPart_t> >::Copy
CAtomicManipulator<class CResourceArray<struct PermModelExtPart_t> >::Deallocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCRenderMesh> > > >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCRenderMesh> > > >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCRenderMesh> > > >::Copy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCRenderMesh> > > >::Deallocate
CAtomicManipulator<class CResourceArray<unsigned __int64> >::Allocate
CAtomicManipulator<class CResourceArray<unsigned __int64> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<unsigned __int64> >::Copy
CAtomicManipulator<class CResourceArray<unsigned __int64> >::Deallocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCPhysAggregateData> > > >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCPhysAggregateData> > > >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCPhysAggregateData> > > >::Copy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCPhysAggregateData> > > >::Deallocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCAnimationGroupResource> > > >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCAnimationGroupResource> > > >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCAnimationGroupResource> > > >::Copy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCAnimationGroupResource> > > >::Deallocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCSequenceGroupResource> > > >::Allocate
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCSequenceGroupResource> > > >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCSequenceGroupResource> > > >::Copy
CAtomicManipulator<class CResourceArray<class CResourceExtReference<class CWeakHandle<struct InfoForResourceTypeCSequenceGroupResource> > > >::Deallocate
CAtomicManipulator<class CResourceArray<struct MaterialGroup_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct MaterialGroup_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct MaterialGroup_t> >::Copy
CAtomicManipulator<class CResourceArray<struct MaterialGroup_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriver_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriver_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriver_t> >::Copy
CAtomicManipulator<class CResourceArray<struct ModelBoneFlexDriver_t> >::Deallocate
VertexPositionNormal_t
VertexPositionColor_t
m_vPosition
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\physicsresourcehelpers_h_schema.gen_cpp
VertexPositionNormal_t::Schema_VerifyBindingIsRegistered
VertexPositionColor_t::Schema_VerifyBindingIsRegistered
CBuilderModelInfo
BuilderModelBoneFlexDriverControl_t
BuilderModelBoneFlexDriver_t
BuilderModelBoneFlexDriverList_t
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\modelbuilder_h_schema.gen_cpp
CBuilderModelInfo::Schema_VerifyBindingIsRegistered
BuilderModelBoneFlexDriverControl_t::Schema_VerifyBindingIsRegistered
BuilderModelBoneFlexDriver_t::Schema_VerifyBindingIsRegistered
m_drivers
BuilderModelBoneFlexDriverList_t::Schema_VerifyBindingIsRegistered
Unaccounted
CUtlMemory<struct BuilderModelBoneFlexDriverControl_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<struct BuilderModelBoneFlexDriver_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
c:\buildslave\vrgdc2015_staging_win64\build\src\_generated_code\modellib\release\win64\boneconstraints_h_schema.gen_cpp
CBaseConstraint::Schema_VerifyBindingIsRegistered
Unaccounted
CUtlMemory<unsigned char,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
Unaccounted
CUtlMemory<float,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
modellib
CResourceStream::EnsureAvailable
nAddCapacity < 0x40000000
c:\buildslave\vrgdc2015_staging_win64\build\src\resourcefile\resourcestream.cpp
CResourceStreamFixed: trying to write past the end of allocated memory (new commit %u, allocated %u)
CResourceStreamFixed::Commit
CResourceStreamVM::ReserveVirtualMemory
m_pData == NULL
Cannot allocate virtual address space in CResourceStreamVM::ReserveVirtualMemory, error %u
CResourceStreamVM::ReleaseVirtualMemory
--------------------WARNING----------------------
--  Increase the size of the resource stream   --
--  Need %d bytes, but only have %d bytes
Failed trying to Commit %u bytes, used %u bytes, reserved %u bytes
CResourceStreamVM::Commit
Wrong alignment %d
CResourceStream::Align
c:\buildslave\vrgdc2015_staging_win64\build\src\resourcefile\resourcefile.cpp
pHeader->m_nHeaderVersion == RESOURCE_FILE_HEADER_VERSION
Resource_GetBlock
Resource_GetBlockEntry
ERROR: Could not find schema data for helper class for resource type %lld '%s'. (Missing MDiskDataForResourceType metadata or schema data isn't loaded?)
FindDiskDataClassForResourceType
[Disk class %d/%d] Name = '%s'; Project = '%s'; Binary = '%s'
ERROR: Multiple classes registered as disk data for resource type %lld '%s'. (Should only have one class MDiskDataForResourceType - %d listed above.)
MResourceVersion
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcesystem\resourcesystemhelpers.h
CResourceAllocatorUtils::AssumeControl
pData == m_pData
Resource %s
TypeManager
c:\buildslave\vrgdc2015_staging_win64\build\src\resourcefile\introspectedtypemanager.cpp
CBaseIntrospectedTypeManager::SetDiskDataBinding
pDiskDataClassBinding != NULL
Failed to call CBaseIntrospectedTypeManager::SetDiskDataBinding
CBaseIntrospectedTypeManager::Init
Failed to call CBaseIntrospectedTypeManager::Init
CBaseIntrospectedTypeManager::AllocateResource
Error loading resource "%s" (Invalid resource version: %d != %d)
WARNING: Missing introspection manifest for file: %s
WARNING: Missing data block for file: %s
ERROR: Problem allocating permanent data for resource in file '%s'. See above for reason(s)
WARNING: Problems encounted with external references in resource '%s'. See above for reason(s)
FixupResourceName: Illegal full path passed in ("%s")!
FixupResourceName: Illegal path, missing extension passed in ("%s")!
MResourceTypeForInfoType
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcesystem\resourcehandle.h
ResourceRelease
g_pResourceSystem
hResource->m_nDeferredCount <= hResource->m_nRefCount
hResource->m_nDeferredCount > 0
hResource->m_nRefCount > 0
hResource->m_nDeferredCount < hResource->m_nRefCount
hResource->m_nDeferredCount >= 0
c:\buildslave\vrgdc2015_staging_win64\build\src\public\resourcesystem\weakhandle.h
GetResourceTypeOfWeakHandle
pAtomicType
pParamClass && pParamClass->GetClass()
Cannot determine resource type for handle '%s' - schema data not loaded for the referred-to type?
%s : %s
c:\buildslave\vrgdc2015_staging_win64\build\src\resourcefile\externalreferences.cpp
CExtrefTraversal::VisitRelevantField
IsRelevantFieldType( pFieldType )
IsResourceWeakHandle( pHandleType )
!IsRelevantFieldType( pFieldType )
UpdateResourceIdForUGC
pReferencedResourceName == NULL
pReferencedResourceName != NULL
Deferred
Schema Field
CResourceReferenceFixupTraversal::HandleExtref
nResourceType != RESOURCE_TYPE_NONE
(size_t)hResource % 4 == 0
Failed to fix resource reference '%s' (%s)- ID = %016llX, Expected in: '%s'
CUtlScalarHash<void const *,class CDefaultHash32>::Init
m_dataCount==0
c:\buildslave\vrgdc2015_staging_win64\build\src\public\schemalib\schemadatatraversal.h
SchemaRecurseData
Unhandled field type for field '%s': '%s' (Why did it pass SchemaRecurseType?)
<unknown>
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\nameindex.h
NameIndex:PreacquireName( %x ) without name string
Could not pre-acquire name '%s'
NameIndex:AcquireName( %x ) without name string
Collision filtering: Cannot allocate name '%s'
Collision filtering: Acquiring unregistered name '%s'
 /*%u:0x%08X*/ "%s",
 %u:0x%08X,
Unaccounted
CUtlMemory<struct CNameIndex::NameToken_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rncommon.cpp
Multiply air drag
phys_drag_multiplier
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\body.cpp
capsule
scale=%g;
%d verts, %d polys}
scale={%g,%g,%g};
%d verts, %d tris}
?unsupported?
 CollGroup=%d;
Unaccounted
CUtlMemory<class CRnShape *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier0\tslist.h
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\functors.h
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\objectpair.h
c:\buildslave\vrgdc2015_staging_win64\build\src\public\vstdlib\jobthread.h
CJob::Abort %s %d
CJob::DoAbort
phys_validate
phys_continuous
phys2_debug_broadphase
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\world.cpp
World BroadphaseUpdate
World Frame %d: at Origin: %d bodies, %d shapes
broadphase_update_%d_%d.rnsave
World BuildNewContacts
World Step
World Collide
World Solve
World ShadowControllersInternalPrepare
World ShadowControllersInternalStep
World ShadowControllersInternalFinalize
World SolveTOI
World FindTOI
World SolveContactTOI
World DebugDraw
World UpdateSceneObjects
World @%p has %d bodies, %d shadow controllers, %d softbodies, %d joints, %d null joints, %d solver contacts, %d report contacts, %d entity pairs
World CastSphere
World CastRay
CRnWorld
World KeepInBounds
%d tests / %d recorded traces
CastRaySingle(IntersectSegmentTriangle)
CastSphereSingle(radius=e;CastSphereTriangle)
CastBoxSingle(extents=0;SweepSingleConvex)
CastRayMultiple(IntersectSegmentTriangle)
CastSphereMultiple(radius=e;CastSphereTriangle)
%s(%d traces, %d repeats) %.1f us/trace; kernel: %.0f ticks (%.1f mcs) * %lld calls
CParallelForAndPostProcessor
Unaccounted
CUtlMemory<class CRnContact *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct RnContactNotification_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<class CRnBody *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<class CRnSoftbody *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct PhysicsTrace_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct CPostUpdateContacts::Notification_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct RnPlane_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<class HPhysicsShape,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct CRnWorld::RuntimeSizeStats_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<class CPostUpdateContacts,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
playerclip
npcclip
blocklos
blocklight
PlayerUse
passbullets
moveable
touchall
physics_prop
Used Groups:
Used Layers:
All Groups:
All Layers:
trigger
ConditionallySolid
hitboxes
vphysics_force_apply_magnitude
Use the ported version of physics shadow controller?
vphysics_shadow_port
-----------------
Object: %s
Mass: %.1f (inv %.3f)
Inertia: %.2f, %.2f, %.2f (inv %.3f, %.3f, %.3f)
Velocity: %.2f, %.2f, %.2f 
Ang Velocity: %.2f, %.2f, %.2f 
Damping %.2f linear, %.2f angular
Enabled
Disabled
State: %s, Collision %s, Motion %s, (game %04x, index %d)
Unaccounted
CUtlMemory<class HPhysicsContact,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Local anchors: {%g,%g,%g}, {%g,%g,%g}
phys_stepmotor_damping
cloth_debug
cloth_attr_vel
cloth_attr_pos
cloth_damping_multiplier
cloth_damping_bias
1000000
cloth_node_velocity_limit
cloth_ground_plane_thickness
cloth_airdrag
cloth_quadairdrag
cloth_expairdrag
cloth_expquadairdrag
cloth_airdrag_override
cloth_quad_smooth_rate
cloth_rod_smooth_rate
cloth_quad_smooth_iterations
cloth_rod_smooth_iterations
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:FilterTransforms
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Draw
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Integrate
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Predict
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Collide
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Iterate
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Post
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:FeRelaxRods
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:FeRelaxQuads
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Collide/Compute
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:Step/Collide/ComputeOuter
cloth_guard_threshold
cloth_watch
Graivty Scale 0, probably invalid default. Changing to 1
Undefined
dormant
Softbody #%d %s.%d %s (%.4g,%.4g)
(%.4g,%.4g)
cloth_iteration_multiplier
cloth_step
cloth_compatibility
%s %f %f %f %f %f %f %f %f %f
Not found: %s
%d bones found and initialized
%s %g %g %g %g %g %g %g %g %g
cloth_legacy_stretch_force
cloth_wind
cloth_wind_pitch
Softbody
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbody.cpp
rubikon
Softbody:ParticleTransforms:Bases
Softbody:SetANimatedTransforms called on dormant softbody; please use IsDormant()
 (static)
%+.2f*%.1f in 
Unaccounted
CUtlMemory<struct `public: void __cdecl CRnSoftbody::Draw(struct RnDebugDrawOptions_t const &,class ISceneViewDebugOverlays *)'::`154'::CLabel,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<class VectorAligned,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<class FeAabb_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
=uint32
VectorAligned
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rncommon.h
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rnserialize.h
FeTri_t
FeSimdTri_t
FeQuad_t
FeNodeBase_t
FeNodeReverseOffset_t
FeSimdQuad_t
FeAxialEdgeBend_t
FeRodConstraint_t
FeSimdRodConstraint_t
FeSimdNodeBase_t
FeNodeIntegrator_t
FeSpringIntegrator_t
FeSimdSpringIntegrator_t
FeCtrlOffset_t
FeCtrlOsOffset_t
FeFollowNode_t
FeCollisionSphere_t
FeCollisionPlane_t
FeWorldCollisionParams_t
FeTreeChildren_t
FeTaperedCapsuleRigid_t
FeSphereRigid_t
FeTaperedCapsuleStretch_t
FeFitWeight_t
FeFitMatrix_t
FeSimdFitMatrices_t
CNameIndex::NameToken_t
CFrustum
RnContactCache_t
Vector4DAligned
FeAabb_t
CParticleGlue
PhysicsWorldProfiler::Stats_t
RnCollisionAttr_t
CRnCollisionFilter
Matrix3
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rnserializehelpers.h
CRnJoint
Unsupported leaf class presumably derived from CRnJoint, hash 0x%08X
Unserialize
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rnserialize.inl
CRnDynamicTree
CFeModel
CRnPrismaticJoint
CRnHullShape
CRnMeshContact
CRnSphereShape
CRnSphericalJoint
CRnContact
Unsupported leaf class presumably derived from CRnContact, hash 0x%08X
CRnMouseJoint
CRnCapsuleShape
CHierarchicalBitVector
CContactArray
CRnPulleyJoint
CRnShape
Unsupported leaf class presumably derived from CRnShape, hash 0x%08X
CRnRevoluteJoint
CRnConicalJoint
CRnOverlappingPair
Unsupported leaf class presumably derived from CRnOverlappingPair, hash 0x%08X
CNullJoint
CRnQuatOrthoTwistJoint
CIntersectionDictionary
CRnSpringJoint
CRnConvexContact
CRnMeshShape
CRnSoftbody
CRnWeldJoint
CNameIndex
CBroadphase
CRnBody
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rnsnoop.inl
Memory used in Rubikon: %s bytes / %s 4K pages = %.1f%%
Type                              _____Count    _____Bytes
%-30s%14s%14s
Overlap in reporting by type: %.1f%%, %s unique pointers / %s total = %.1f
Md5 Hash: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
RnMesh_t(deep)
RnMesh_t->Vertices
RnMesh_t->Nodes
RnMesh_t->m_Triangles
RnMesh_t->m_Materials
RnHull_t(deep)
RnHull_t->Vertices
RnHull_t->Planes
RnHull_t->Edges
RnHull_t->Faces
CRnGraphEdge<>
CUtlHashtable
CUtlRingVector
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\world.h
CPool<>
CPool<> Free Node
Pointer Array
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\pool.inl
Unaccounted
CUtlMemory<struct VtableRecord_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct CRnObjectStats::TypeData_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct CRnObjectStats::CTypeData,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct Manifold_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<union RnContactCache_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct Pair_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct RecordedCaspuleSweepResult_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct RecordedCollisionResult_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Y@cloth_simulate
cloth_batch
Physics
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbodystepper.cpp
rubikon
Softbody:Wait
CSoftbodyStepper::CSoftbodyStepper
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\softbodystepper.cpp
SoftbodyProcessor
CSoftbodyStepper::Finish
Unaccounted
CUtlMemory<class CJob *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\rubikon.cpp
Hull was passed a flat point clound. Point clound normal{%g,%g,%g} and center{%g,%g,%g} were detected and it was extruded; fail-safe hull generated successfully. Please clean up the code that generated this point cloud.
You do not delete serialized hulls: it's impossible
RnHullDestroy
Physics RnMeshCreate: removing %d degenerate triangles of %d
Don't delete serialized meshes!
RnMeshDestroy
Unaccounted
CUtlMemory<struct qhHalfEdge const *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct qhVertex const *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct qhFace const *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct RnNode_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct RnTriangle_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<struct Primitive,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
?Snooper could not lock snooper mutex proc %d addr %llx in %ums, snoop is unsafe and may crash. Error %d.
Snoop lock timed out (%u ms), error %d
Snoop lock error %d, win error %d
physSnoop%llx
already exists
does not exist
%s, unexpectedly, %s
Only could read %llu bytes out of %u requested, error %d
Could not read %u bytes @0x%llx, error %d
Snoop failed
World Snoop finished in %u transactions, %s bytes snooped, %.2fms reads + %.2fms debug shapes + o() = %.2fms total
rubikonWorldSnooperAdvertisement
Unaccounted
CUtlMemory<struct RnWorldSnoopStats_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<char,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
Unaccounted
CUtlMemory<unsigned char *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
phys2_contact_debug_draw_size
c%d m%d pt%d
+2es-8R
phys_build_mass
phys_build_bounds
Broadphase @%p has %d proxies, %d pairs, %d move buffer entries
Total test: %d/%d. %lld ticks per scan
Unaccounted
CUtlMemory<struct FilteredPair_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
rubikon
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\island.cpp
simplex_t::SolveGJKSet
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\trace.cpp
rubikon
TraceSolver::simplex::SolveGJKSet
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\trace.cpp
CTraceSolver::SweepSingleConvex
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\trace.cpp
rubikon
TraceSolver::SweepSingleConvex
CTraceSolver::SweepSingleConvex
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\trace.cpp
rubikon
SolveSeparation
CTraceSolver::SweepSingleConvex
c:\buildslave\vrgdc2015_staging_win64\build\src\rubikon\trace.cpp
rubikon
TraceSolver::SolveMeshIntersection
Out of %d unit test hulls, %d failed to build, %d were ultra-thin
%.1fKiT
%.1f ticks 
 %.1f ticks
, miss: 
z>c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier0\memalloc.h
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlsymbollarge.h
CKeyValues3Cluster allocated with bad alignment! (%p) (If this is inside of a heap allocation, you may need to inherit from CAlignedNewDelete< KV3_CLUSTER_SIZEOF >.)
CKeyValues3Cluster::CKeyValues3Cluster
c:\buildslave\vrgdc2015_staging_win64\build\src\schemalib\keyvalues3.cpp
CKeyValues3Cluster::Free
(m_nAllocatedFlags & 0x8000000000000000) == 0
IsValid()
KeyValues3::GetArrayElement
KeyValues3::GetElement - Bad index %d (count = %d)
KeyValues3::GetString
Unknown KV3 type '%d'.
CKeyValues3Table::MemberData
nIndex >= 0 && nIndex < nMemberCount
CKeyValues3Context::FreeKV_Internal
pPrevClusterInFreeList != NULL
CKeyValues3Context::FreeKV_Internal::<lambda_d25f671f61efd6b44fbe72846721981c>::operator ()
m_AdditionalClusters.FindAndFastRemove( pCluster )
CUtlSymbolLarge::AddString
Unaccounted
CUtlSymbolTableLargeBase<class CNonThreadsafeTree<0>,0,2048>::AddString
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlsymbollarge.h
schemalib
c:\buildslave\vrgdc2015_staging_win64\build\src\public\schemalib\keyvalues3.h
KeyValues3::GetAsNumeric
GetAsNumeric() - unsupported type '%d'!
CUtlSymbolLarge::Find
Unaccounted
CUtlSymbolTableLargeBase<class CNonThreadsafeTree<0>,0,2048>::Find
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlsymbollarge.h
schemalib
Unaccounted
CUtlMemory<char const *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
Unaccounted
CUtlMemory<class KeyValues3 *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
Unaccounted
CUtlMemory<class CKeyValues3Cluster *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
CUtlRBTree<struct CUtlSymbolTableLargeBaseTreeEntry_t *,__int64,class CTreeEntryLess<class CNonThreadsafeTree<0>,0>,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlSymbolTableLargeBaseTreeEntry_t *,__int64>,__int64> >::NewNode
Unaccounted
CUtlMemory<struct CUtlSymbolTableLargeBase<class CNonThreadsafeTree<0>,0,2048>::StringPool_t *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<struct CUtlSymbolTableLargeBaseTreeEntry_t *,__int64>,__int64>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
c:\buildslave\vrgdc2015_staging_win64\build\src\schemalib\kv3transfer.cpp
CKV3TransferSaveContext::BeginSavingObjectVoid
CKV3TransferSaveContext detected a cycle or double-reference!
Cycle or double-reference detected
c:\buildslave\vrgdc2015_staging_win64\build\src\schemalib\schemadatatraversal.cpp
CSchemaVisitorInfoMapBase::LookupClass
pResult->State() == VISIT_INFO_STATE_COMPLETE
CUtlScalarHash<void const *,class CDefaultHash32>::Insert
Unaccounted
CUtlMemory<struct CClassVisitInfo::FieldInfo_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
generic
count >= 0
c:\buildslave\vrgdc2015_staging_win64\build\src\schemalib\schemaiterator.cpp
CSchemaInheritanceIterator::PopulateTraversal_R
nTraversalOffset == 0
CSchemaFieldIterator::Reset
!IsSingleFieldRestricted()
CSchemaFieldIterator::Advance
CSchemaFieldIterator::GetFieldMemoryOffset
CSchemaFieldIterator::GetRawFieldHandle
Unaccounted
CUtlMemory<struct CSchemaInheritanceIterator::ClassToTraverse_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
schemalib
&trade;
&ndash;
&mdash;
&iexcl;
&pound;
&curren;
&brvbar;
&laquo;
&plusmn;
&acute;
&micro;
&middot;
&cedil;
&raquo;
&frac14;
&frac12;
&frac34;
&iquest;
&times;
&divide;
&Agrave;
&Aacute;
&Acirc;
&Atilde;
&Aring;
&AElig;
&Ccedil;
&Egrave;
&Eacute;
&Ecirc;
&Igrave;
&Iacute;
&Icirc;
&Ntilde;
&Ograve;
&Oacute;
&Ocirc;
&Otilde;
&Oslash;
&Ugrave;
&Uacute;
&Ucirc;
&Yacute;
&THORN;
&szlig;
&agrave;
&aacute;
&acirc;
&atilde;
&aring;
&aelig;
&ccedil;
&egrave;
&eacute;
&ecirc;
&igrave;
&iacute;
&icirc;
&ntilde;
&ograve;
&oacute;
&ocirc;
&otilde;
&oslash;
&ugrave;
&uacute;
&ucirc;
&yacute;
&thorn;
[/code]
[/list]
<img src="
"></img>
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\strtools.cpp
_V_strncmp
Unaccounted
_V_strncmp
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\strtools.cpp
V_strcmp
V_strncasecmp
Unaccounted
V_strncasecmp
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\strtools.cpp
V_atoi64
_V_strncpy
maxLen >= sizeof( *pDest )
maxLen > 0
V_snprintf
V_vsnprintf
V_vsnprintfRet
%%.%if%s
@X@()$^.*+?[]|\-{},:=!
unknown error
iostream
iostream stream error
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlstring.cpp
CUtlString::SetDirect
nChars == Q_strlen(m_pString)
CUtlString::SetDirect does not support resizing strings in place.
nChars <= MIN( V_strnlen(pValue, nChars) + 1, nChars )
string too long
invalid string position
archive
singleplayer
notconnected
replicated
server_can_execute
clientcmd_can_execute
ss_added
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\convar.cpp
ConVar_Register
s_nDLLIdentifier < 0
ConVar_Unregister
s_nDLLIdentifier >= 0
ConCommandBase::Create
*** ConVar "%s" was not unregistered! Shutdown crash imminent!
%i %i %i %i
ConVar::InternalSetValue
m_pParent == this
Warning:  %s = '%s' is infinite, clamping value.
ConVar::ChangeStringValue
!( m_nFlags & FCVAR_NEVER_AS_STRING )
ConVar::InternalSetFloatValue
m_fnChangeCallbacks.Count() == 0
ConVar::InternalSetIntValue
ConVar::Create
m_pszDefaultValue
ConVar(%s) defined with infinite float value (%s)
Unaccounted
CUtlMemory<void (__cdecl*)(class IConVar *,char const *,float),int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
GUPDATE_STRING_TOKEN_DATABASE
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlbuffer.cpp
CUtlCharConversion::CUtlCharConversion
info.m_pReplacementString == 0
CUtlBuffer::CUtlBuffer
nSize != 0
CUtlBuffer::Get
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + size - 1 )
CUtlBuffer::GetString
nMaxChars > 0
(GetChar()) == (0)
CUtlBuffer::PeekGet
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + nMaxSize - 1 )
CUtlBuffer::VaScanf
CUtlBuffer::AddNullTermination
m_Memory.IsIdxValid( Index )
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\configvalue.cpp
CGlobalConfigValueRegistry::HookUpConfigValue
RegisterConfigValue: Unknown error constructing config value "%s"!
D"A/oyu
	6RtcZO"
z`%1Is}
)c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utltokenizer.cpp
Newline in string literal
Unaccounted
CUtlMemory<class CUtlTokenReference,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct TokenWarning_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlsymbol.cpp
CUtlSymbol::Find
Unaccounted
CUtlSymbolTable::Find
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlsymbol.cpp
CUtlSymbol::AddString
Unaccounted
CUtlSymbolTable::AddString
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\utlsymbol.cpp
CUtlSymbolTable::AddString
pPool->m_SpaceUsed < 0xFFFF
CUtlRBTree<class CUtlSymbolTable::CStringPoolIndex,unsigned short,class CUtlSymbolTable::CLess,class CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short> >::Insert
!"Allowing insert of dupe without explicit dupe insertion. Fix code callpoint to allow dupes."
CUtlRBTree<class CUtlSymbolTable::CStringPoolIndex,unsigned short,class CUtlSymbolTable::CLess,class CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short> >::RemoveAll
CUtlRBTree<class CUtlSymbolTable::CStringPoolIndex,unsigned short,class CUtlSymbolTable::CLess,class CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short> >::NewNode
Unaccounted
CUtlMemory<struct CUtlSymbolTable::StringPool_t *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
Unaccounted
CUtlMemory<struct UtlRBTreeNode_t<class CUtlSymbolTable::CStringPoolIndex,unsigned short>,unsigned short>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
VScript
c:\buildslave\vrgdc2015_staging_win64\build\src\tier2\schemabindings.cpp
InstallSchemaBindings
pSchemaSystem != NULL
!g_pSchemaSystem || g_pSchemaSystem == pSchemaSystem
?UUUUUU
?atan2f
?8UUUUU
?E=$% B
?49HoKC
?UUUUUU
AUUUUUU
"e?<<<<<<l?
Il?333333c?
d?000000`?
L?UUUUUUU?
&?PPPPPPP?
qS>g?h3
c?FA@s}
?UUUUUU
Unknown exception
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
InitializeCriticalSectionEx
CreateEventExW
CreateSemaphoreExW
SetThreadStackGuarantee
CreateThreadpoolTimer
SetThreadpoolTimer
WaitForThreadpoolTimerCallbacks
CloseThreadpoolTimer
CreateThreadpoolWait
SetThreadpoolWait
CloseThreadpoolWait
FlushProcessWriteBuffers
FreeLibraryWhenCallbackReturns
GetCurrentProcessorNumber
GetLogicalProcessorInformation
CreateSymbolicLinkW
SetDefaultDllDirectories
EnumSystemLocalesEx
CompareStringEx
GetDateFormatEx
GetLocaleInfoEx
GetTimeFormatEx
GetUserDefaultLocaleName
IsValidLocaleName
LCMapStringEx
GetCurrentPackageId
GetTickCount64
GetFileInformationByHandleExW
SetFileInformationByHandleW
CorExitProcess
@^8U)zj
?8bunz8
?@En[vP
-9D	/9a
?UUUUUU
_nextafter
?3ScR.>
?gibQ^AX>
WR_l%2>
)2STud>
J\;5yTb
<8bunz8
<@En[vP
Q5rHg,>
.>PJ;I:qE>
/2GG>!B
zY;>u:m	
0><[cZUg^>
[*ncd>0
S>$hkDh$h>[2
UA>N0Wl
Tuesday
Wednesday
Thursday
Saturday
January
February
September
October
November
December
MM/dd/yy
dddd, MMMM dd, yyyy
HH:mm:ss
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
X 843"8
5m8>8=t
bad exception
__based(
__cdecl
__pascal
__stdcall
__thiscall
__fastcall
__vectorcall
__clrcall
__ptr64
__restrict
__unaligned
restrict(
 delete
operator
`vftable'
`vbtable'
`vcall'
`typeof'
`local static guard'
`string'
`vbase destructor'
`vector deleting destructor'
`default constructor closure'
`scalar deleting destructor'
`vector constructor iterator'
`vector destructor iterator'
`vector vbase constructor iterator'
`virtual displacement map'
`eh vector constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`copy constructor closure'
`udt returning'
`local vftable'
`local vftable constructor closure'
 delete[]
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`managed vector constructor iterator'
`managed vector destructor iterator'
`eh vector copy constructor iterator'
`eh vector vbase copy constructor iterator'
`dynamic initializer for '
`dynamic atexit destructor for '
`vector copy constructor iterator'
`vector vbase copy constructor iterator'
`managed vector copy constructor iterator'
`local static thread guard'
 Type Descriptor'
 Base Class Descriptor at (
 Base Class Array'
 Class Hierarchy Descriptor'
 Complete Object Locator'
template-parameter-
generic-type-
`anonymous namespace'
`non-type-template-parameter
`template-parameter
`vtordispex{
`vtordisp{
`adjustor{
`local static destructor helper'
`template static data member constructor helper'
`template static data member destructor helper'
static 
virtual 
private: 
protected: 
public: 
[thunk]:
extern "C" 
unsigned 
volatile
std::nullptr_t
<ellipsis>
,<ellipsis>
 throw(
__int16
__int32
__int64
__int128
wchar_t
UNKNOWN
signed 
 volatile
`unknown ecsu'
struct 
coclass 
cointerface 
volatile 
cli::array<
cli::pin_ptr<
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
MessageBoxW
GetActiveWindow
GetLastActivePopup
GetUserObjectInformationW
GetProcessWindowStation
bad allocation
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
0123456789abcdefghijklmnopqrstuvwxyz
0123456789abcdefABCDEF
0c:\buildslave\vrgdc2015_staging_win64\build\src\mathlib\femodel.cpp
CFeModel::ComputeCollisionTreeBounds
nParent < nDynCount - 1
=blendweights
tangent
optionallycompressedtangentframe
lowprecisionuv
lowprecisionuv1
tangentu_signv
VertexPaintBlendParams
VertexPaintBlendParams1
VertexPaintTintColor
c:\buildslave\vrgdc2015_staging_win64\build\src\meshutils\quickhullsimplifier.cpp
CQuickHullSimplifier::Run
Plane.Offset > qhReal( 0 )
plane.Offset > qhReal( 0 )
Unaccounted
CUtlMemory<struct CQuickHullSimplifier::Face_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
meshutils
Unaccounted
CUtlMemory<struct CQuickHullSimplifier::Cluster_t,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
meshutils
meshUtilsKeyValues
c:\buildslave\vrgdc2015_staging_win64\build\src\meshutils\mesh.cpp
CMesh::AllocateAndCopyMesh
nInputVertexStrideFloats >= nVertexStrideFloats
WeldVertices
remapTable[nMatchIndex] != nEmptyValue
pMeshOut->m_pIndices[i] < (uint32)nNewVerts
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlblockmemory.h
CUtlBlockMemory<float const *,int>::Init
m_nIndexMask + 1 == ( 1 << m_nIndexShift )
Unaccounted
CUtlMemory<float const *,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
meshutils
CUtlBlockMemory<float const *,int>::operator []
IsIdxValid(i)
CUtlBlockMemory<float const *,int>::ChangeSize
m_pMemory
CUtlBlockMemory overflow!
m_pMemory[ i ]
c:\buildslave\vrgdc2015_staging_win64\build\src\thirdparty\quickhull\qhconvex.cpp
qhBuildCentroid
VertexCount > 3
qhWeldVertices
qhConvex::Construct
mIterations.Size() == 0
qhConvex::Simplify
!Cluster.Empty()
Area > qhReal( 0 )
qhConvex::DestroyVertex
!qhInList( Vertex )
qhConvex::DestroyFace
!qhInList( Face )
qhConvex::BuildInitialHull
qhCheckConsistency( Face1 )
qhCheckConsistency( Face2 )
qhCheckConsistency( Face3 )
qhCheckConsistency( Face4 )
qhConvex::NextConflictVertex
Vertex->ConflictFace == Face
qhConvex::AddVertexToHull
Horizon.Size() >= 3
Cone.Size() >= 3
qhConvex::BuildHorizon
Seed->ConflictList.Empty()
qhConvex::BuildCone
Edge->Twin->Twin == Edge
qhConvex::MergeFaces
BestEdge != 0
Face->Mark == 0
Face->Flipped
qhConvex::ResolveVertices
MaxFace->Mark == 0
mOrphanedList.Empty()
qhConvex::ResolveFaces
Nuke->ConflictList.Empty()
qhConvex::ConnectFaces
qhCheckConsistency( Face )
qhCheckConsistency( Twin->Face )
EdgePrev->Twin == TwinNext
TwinNext->Twin == EdgePrev
EdgePrev->Face != TwinNext->Face
EdgeNext->Twin == TwinPrev
TwinPrev->Twin == EdgeNext
EdgeNext->Face != TwinPrev->Face
qhConvex::ConnectEdges
Prev != Next
Prev->Face == Next->Face
Twin->Face->Mark != 1
qhConvex::AbsorbFaces
MergedFaces[ i ]->Mark == 1
ConflictList.Empty()
c:\buildslave\vrgdc2015_staging_win64\build\src\thirdparty\quickhull\qharray.inl
qhArray<class qhVector3>::operator []
0 <= Offset && Offset < Size()
qhArray<class qhVector3>::Back
!Empty()
c:\buildslave\vrgdc2015_staging_win64\build\src\thirdparty\quickhull\qhlist.inl
qhRemove
qhInList( Node )
qhArray<class qhArray<struct qhFace const *> >::operator []
qhArray<struct qhFace const *>::operator []
qhArray<struct qhHalfEdge *>::operator []
qhArray<struct qhFace *>::operator []
qhArray<struct qhFace *>::Back
qhInsert
!qhInList( Node ) && qhInList( Where )
c:\buildslave\vrgdc2015_staging_win64\build\src\thirdparty\quickhull\qhmemory.cpp
qhAlloc
qhAllocHook != 0
qhFreeHook != 0
c:\buildslave\vrgdc2015_staging_win64\build\src\thirdparty\quickhull\qhhalfedge.cpp
qhLinkFace
Edge != Twin
qhLinkFaces
Edge1 != Edge2
qhNewellPlane
Edge->Face == Face
Twin->Twin == Edge
Count > 2
Area > qhReal( 0.0 )
unknown
c:\buildslave\vrgdc2015_staging_win64\build\src\tier1\keyvalues.cpp
CKeyValues_Data::Internal_ClearData
!m_bStoredSubKey
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\vertexkdtree.h
CVertexKDNode::GetLeafVertCount
IsLeaf()
CVertexKDNode::GetLeafVertStart
Unaccounted
CUtlMemory<class CVertexKDNode,int>::Grow
c:\buildslave\vrgdc2015_staging_win64\build\src\public\tier1\utlmemory.h
SunMonTueWedThuFriSat
JanFebMarAprMayJunJulAugSepOctNovDec
RSDSyLn
c:\buildslave\vrgdc2015_staging_win64\build\src\vphysics2\Release\win64\vphysics2.pdb
vphysics2.dll
BinaryProperties_GetValue
CreateInterface
GetResourceManifestCount
GetResourceManifests
InstallSchemaBindings
RnHullClone
RnHullCreate
RnHullCreateBox
RnHullCreateCone
RnHullCreateCylinder
RnHullDestroy
RnMeshClone
RnMeshCreate
RnMeshDestroy
RnShutdown
RnStartup
RnUnitTest
__crt_debugger_hook
AssertMsg_ConditionFailed
Warning
Plat_IsInDebugSession
Plat_ExitProcess
LoggingSystem_RegisterLoggingChannel
GetDefaultMiniDumpTypeFlags
InvokeMiniDumpHandler
g_pMemAlloc
CMemAllocSystemInitialize
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
PushMiniProfilerTS
PopMiniProfilerTS
AppendMiniProfilerToList
RemoveMiniProfilerFromList
g_pGlobalMiniProfilers
Plat_GetCPUFrequency
g_pLastMiniProfiler
CommandLine
Plat_ShouldCollectMiniDumpsForFatalErrors
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@AEBULeafCodeInfo_t@@PEBDZZ
LOG_GENERAL
GetCPUInformation
Plat_GetPlatformError
Plat_VirtualAlloc
Plat_VirtualFree
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@VColor@@PEBDZZ
??0IStack_Annotation@@QEAA@AEBVCCallStackMarkerBase@@@Z
??1IStack_Annotation@@UEAA@XZ
?Lock@CThreadMutex@@QEAAXXZ
?Unlock@CThreadMutex@@QEAAXXZ
?Set@CThreadEvent@@QEAA_NXZ
g_Telemetry
ValveTelemetryExtension_StackDump
??0CThreadMutex@@QEAA@XZ
??1CThreadMutex@@QEAA@XZ
??0CThreadEvent@@QEAA@_N@Z
??1CThreadEvent@@QEAA@XZ
??0CStackTop_ReferenceParentStack@@QEAA@PEBQEBXHAEBVCCallStackMarkerBase@@@Z
??1CStackTop_ReferenceParentStack@@QEAA@XZ
tier0.dll
RegisterStringToken
RandomFloat
g_pThreadPool
RandomInt
??0CUniformRandomStream@@QEAA@XZ
?SetSeed@CUniformRandomStream@@UEAAXH@Z
CreateNewThreadPool
DestroyThreadPool
vstdlib.dll
CloseHandle
GetLastError
ReleaseMutex
WaitForSingleObject
CreateMutexA
GetCurrentProcessId
OpenProcess
ReadProcessMemory
MapViewOfFile
UnmapViewOfFile
CreateFileMappingA
MultiByteToWideChar
WideCharToMultiByte
LCMapStringW
GetProcAddress
GetCurrentThreadId
EncodePointer
DecodePointer
IsDebuggerPresent
IsProcessorFeaturePresent
GetCommandLineA
RtlUnwindEx
RtlPcToFileHeader
RaiseException
RtlLookupFunctionEntry
RtlCaptureContext
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
SetLastError
InitializeCriticalSectionAndSpinCount
GetCurrentProcess
TerminateProcess
TlsAlloc
TlsGetValue
TlsSetValue
TlsFree
GetStartupInfoW
GetModuleHandleW
ExitProcess
GetModuleHandleExW
GetStdHandle
GetFileType
DeleteCriticalSection
GetModuleFileNameA
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetEnvironmentStringsW
FreeEnvironmentStringsW
IsValidCodePage
GetOEMCP
GetCPInfo
GetStringTypeW
EnterCriticalSection
LeaveCriticalSection
WriteFile
GetConsoleCP
GetConsoleMode
SetFilePointerEx
GetModuleFileNameW
LoadLibraryExW
SetStdHandle
WriteConsoleW
OutputDebugStringW
ReadFile
ReadConsoleW
FlushFileBuffers
CreateFileW
KERNEL32.dll
Plat_GetEnv
KeyValuesSystem
0'>0c*>
pb>pAf>
-?[`/?291?
RD?4KF?=GH?9FJ?8HL?
a?y#c?sIe?
position
0123456789ABCDEF
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
Copyright (c) 1992-2004 by P.J. Plauger, licensed by Dinkumware, Ltd. ALL RIGHTS RESERVED.
.?AVCPostConnectCallback@@
.?AV?$CUtlVectorBase@IV?$CUtlMemory@IH@@@@
.?AV?$CUtlMemory@HH@@
.?AV?$CUtlVectorBase@VVector@@V?$CUtlMemory@VVector@@H@@@@
.?AV?$CUtlMemory@GH@@
.?AV?$CUtlMemory@Umatrix3x4_t@@H@@
.?AV?$CUtlVectorBase@PEAVCPhysAggregateData@@V?$CUtlMemory@PEAVCPhysAggregateData@@H@@@@
.?AV?$CUtlMemory@PEAVCPhysAggregateData@@H@@
.?AV?$CUtlVectorBase@PEBUVPhysXBodyPart_t@@V?$CUtlMemoryConservative@PEBUVPhysXBodyPart_t@@@@@@
.?AV?$CUtlVectorBase@URenderSkeletonBone_t@@V?$CUtlMemory@URenderSkeletonBone_t@@H@@@@
.?AV?$CUtlMemory@URenderSkeletonBone_t@@H@@
.?AV?$CUtlVectorBase@VCUtlStringToken@@V?$CUtlMemory@VCUtlStringToken@@H@@@@
.?AV?$CUtlMemory@VCUtlStringToken@@H@@
.?AV?$CUtlVectorBase@URenderBufferBinding_t@@V?$CUtlMemoryFixed@URenderBufferBinding_t@@$03@@@@
.?AV?$CUtlVectorBase@VCMaterialDrawDescriptor@@V?$CUtlMemory@VCMaterialDrawDescriptor@@H@@@@
.?AV?$CUtlMemory@VCMaterialDrawDescriptor@@H@@
.?AV?$CUtlVectorBase@VCHitBox@@V?$CUtlMemory@VCHitBox@@H@@@@
.?AV?$CUtlMemory@VCHitBox@@H@@
.?AV?$CUtlVectorBase@VCHitBoxSet@@V?$CUtlMemory@VCHitBoxSet@@H@@@@
.?AV?$CUtlMemory@VCHitBoxSet@@H@@
.?AV?$CUtlVectorBase@VCSceneObjectData@@V?$CUtlMemoryFixedGrowable@VCSceneObjectData@@$00H@@@@
.?AV?$CUtlMemory@VCSceneObjectData@@H@@
.?AV?$CUtlMemory@PEAVCBaseConstraint@@H@@
.?AV?$CUtlVectorBase@PEAVCBaseConstraint@@V?$CUtlMemory@PEAVCBaseConstraint@@H@@@@
.?AVISequence@@
.?AVIBaseSequence@@
.?AVIVSSequence@@
.?AVCEmptySequence@@
.?AV?$CUtlVectorBase@UPhysicsDebugVertex_t@@V?$CUtlMemory@UPhysicsDebugVertex_t@@H@@@@
.?AV?$CUtlMemory@UPhysicsDebugVertex_t@@H@@
.?AVCSchemaRegistration@@
.?AVCSchemaRegistration_modellib@@
.?AVIAtomicManipulator@@
.?AVISchemaManipulator@@
.?AVCSchemaClassBindingBase@@
.?AVISchemaBinding@@
.?AU?$CAtomicManipulator@VCResourceString@@@@
.?AV?$CSchemaClassBinding@VCVPhysXSurfacePhysicsParams@@@@
.?AV?$CSchemaClassBinding@VCVPhysXSurfaceAudioParams@@@@
.?AV?$CSchemaClassBinding@VCVPhysXSurfaceAudioSounds@@@@
.?AV?$CSchemaClassBinding@VCVPhysXSurfaceGameProperties@@@@
.?AV?$CSchemaClassBinding@VCPhysSurfaceProperties@@@@
.?AV?$CSchemaClassBinding@VCVPhysXSurfacePropertiesList@@@@
.?AV?$CSchemaManipulator@VCResourceString@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@VCPhysSurfaceProperties@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@VCPhysSurfaceProperties@@@@@@
.?AVCSchemaEnumBindingBase@@
.?AU?$CAtomicManipulator@VVector@@@@
.?AU?$CAtomicManipulator@VQuaternion@@@@
.?AU?$CAtomicManipulator@Vmatrix3x4a_t@@@@
.?AU?$CAtomicManipulator@VCTransform@@@@
.?AV?$CSchemaEnumBinding@W4VPhysXFlagEnum_t@VPhysXBodyPart_t@@@@
.?AV?$CSchemaEnumBinding@W4EnumFlags0_t@VPhysXConstraintParams_t@@@@
.?AV?$CSchemaEnumBinding@W4VPhysXFlagEnum_t@VPhysXAggregateData_t@@@@
.?AV?$CSchemaClassBinding@UVPhysics2ShapeDef_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXBodyPart_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXCollisionAttributes_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXRange_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXConstraintParams_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXConstraint2_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXJoint_t@@@@
.?AV?$CSchemaClassBinding@UPhysSoftbodyDesc_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXAggregateData_t@@@@
.?AV?$CSchemaManipulator@VVector@@@@
.?AV?$CSchemaManipulator@VQuaternion@@@@
.?AV?$CSchemaManipulator@Vmatrix3x4a_t@@@@
.?AV?$CSchemaManipulator@VCTransform@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnSphereDesc_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnCapsuleDesc_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnHullDesc_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnMeshDesc_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@G@@@@
.?AU?$CAtomicManipulator@V?$CResourcePointer@VVpropBreakablePartData_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@E@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@I@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@VCResourceString@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnSoftbodyParticle_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnSoftbodySpring_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnSoftbodyCapsule_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@VCTransform@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@Vmatrix3x4a_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UVPhysXBodyPart_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UVPhysXConstraint2_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UVPhysXJoint_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourcePointer@UPhysFeModelDesc_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UVPhysXCollisionAttributes_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnSphereDesc_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnCapsuleDesc_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnHullDesc_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnMeshDesc_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@G@@@@
.?AV?$CSchemaManipulator@V?$CResourcePointer@VVpropBreakablePartData_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@E@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@I@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@VCResourceString@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnSoftbodyParticle_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnSoftbodySpring_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnSoftbodyCapsule_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@VCTransform@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@Vmatrix3x4a_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UVPhysXBodyPart_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UVPhysXConstraint2_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UVPhysXJoint_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourcePointer@UPhysFeModelDesc_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UVPhysXCollisionAttributes_t@@@@@@
.?AU?$CAtomicManipulator@VVector4D@@@@
.?AVISchemaInspectionManipulator@@
.?AV?$CSchemaEnumBinding@W4MeshTranslucencyType_t@@@@
.?AV?$CSchemaEnumBinding@W4MeshDrawPrimitiveFlags_t@@@@
.?AV?$CSchemaEnumBinding@W4FlagEnum_t@RenderSkeletonData_t@@@@
.?AV?$CSchemaEnumBinding@W4AttachmentInfluenceFlags_t@@@@
.?AV?$CSchemaEnumBinding@W4ConstraintType_t@@@@
.?AV?$CSchemaClassBinding@USkeletonBoneBbox_t@@@@
.?AV?$CSchemaClassBinding@URenderSkeletonData_t@@@@
.?AV?$CSchemaClassBinding@URenderBufferBinding_t@@@@
.?AV?$CSchemaClassBinding@UMaterialDrawDescriptor_t@@@@
.?AV?$CSchemaClassBinding@UOnDiskBufferData_t@@@@
.?AV?$CSchemaClassBinding@USceneObjectData_t@@@@
.?AV?$CSchemaClassBinding@UAttachmentData_t@@@@
.?AV?$CSchemaClassBinding@UHitBox_t@@@@
.?AV?$CSchemaClassBinding@UHitBoxSet_t@@@@
.?AV?$CSchemaClassBinding@UConstraintTarget_t@@@@
.?AV?$CSchemaClassBinding@UConstraintSlave_t@@@@
.?AV?$CSchemaClassBinding@UBaseConstraint_t@@@@
.?AV?$CSchemaClassBinding@UPermRenderMeshData_t@@@@
.?AV?$CSchemaManipulator@VVector4D@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@USkeletonBoneBbox_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@M@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URenderBufferBinding_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeIMaterial2@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URenderInputLayoutField_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UMaterialDrawDescriptor_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UHitBox_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UConstraintSlave_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UConstraintTarget_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@USceneObjectData_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCMorphSet@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourcePointer@URenderSkeletonData_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UAttachmentData_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UHitBoxSet_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UBaseConstraint_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UOnDiskBufferData_t@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeIMaterial2@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeCMorphSet@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@USkeletonBoneBbox_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@M@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URenderBufferBinding_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeIMaterial2@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URenderInputLayoutField_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UMaterialDrawDescriptor_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UHitBox_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UConstraintSlave_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UConstraintTarget_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@USceneObjectData_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCMorphSet@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourcePointer@URenderSkeletonData_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UAttachmentData_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UHitBoxSet_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UBaseConstraint_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UOnDiskBufferData_t@@@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeIMaterial2@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeIMaterial2@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeCMorphSet@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeCMorphSet@@@@
.?AV?$CUtlMemory@UConstraintSlave_t@@H@@
.?AV?$CUtlVectorBase@UConstraintSlave_t@@V?$CUtlMemory@UConstraintSlave_t@@H@@@@
.?AV?$CUtlMemory@UConstraintTarget_t@@H@@
.?AV?$CUtlVectorBase@UConstraintTarget_t@@V?$CUtlMemory@UConstraintTarget_t@@H@@@@
.?AVCBaseConstraint@@
.?AU?$CAtomicManipulator@Umatrix3x4_t@@@@
.?AU?$CAtomicManipulator@VColor@@@@
.?AU?$CAtomicManipulator@VCUtlString@@@@
.?AVISchemaCollectionManipulator@@
.?AV?$CSchemaClassBinding@URenderSkeletonBone_t@@@@
.?AV?$CSchemaClassBinding@VCRenderSkeleton@@@@
.?AV?$CSchemaClassBinding@VCMaterialDrawDescriptor@@@@
.?AV?$CSchemaClassBinding@VCSceneObjectData@@@@
.?AV?$CSchemaClassBinding@VCAttachment@@@@
.?AV?$CSchemaClassBinding@VCHitBox@@@@
.?AV?$CSchemaClassBinding@VCHitBoxSet@@@@
.?AV?$CSchemaClassBinding@VCHitBoxSetList@@@@
.?AV?$CSchemaClassBinding@VCRenderMesh@@@@
.?AV?$CSchemaManipulator@Umatrix3x4_t@@@@
.?AV?$CSchemaManipulator@VColor@@@@
.?AV?$CSchemaManipulator@VCUtlString@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@URenderSkeletonBone_t@@V?$CUtlMemory@URenderSkeletonBone_t@@H@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@HV?$CUtlMemory@HH@@@@@@
.?AU?$CAtomicManipulator@V?$CStrongHandle@UInfoForResourceTypeIMaterial2@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@VCMaterialDrawDescriptor@@V?$CUtlMemory@VCMaterialDrawDescriptor@@H@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@VCHitBox@@V?$CUtlMemory@VCHitBox@@H@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@VCHitBoxSet@@V?$CUtlMemory@VCHitBoxSet@@H@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVectorFixedGrowable@VCSceneObjectData@@$00@@@@
.?AU?$CAtomicManipulator@V?$CStrongHandle@UInfoForResourceTypeCMorphSet@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@PEAVCBaseConstraint@@V?$CUtlMemory@PEAVCBaseConstraint@@H@@@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@URenderSkeletonBone_t@@V?$CUtlMemory@URenderSkeletonBone_t@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@URenderSkeletonBone_t@@V?$CUtlMemory@URenderSkeletonBone_t@@H@@@@URenderSkeletonBone_t@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@HV?$CUtlMemory@HH@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@HV?$CUtlMemory@HH@@@@H@@
.?AV?$CSchemaManipulator@V?$CStrongHandle@UInfoForResourceTypeIMaterial2@@@@@@
.?AV?$CSchemaStrongHandleInspectionManipulator@UInfoForResourceTypeIMaterial2@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@VCMaterialDrawDescriptor@@V?$CUtlMemory@VCMaterialDrawDescriptor@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@VCMaterialDrawDescriptor@@V?$CUtlMemory@VCMaterialDrawDescriptor@@H@@@@VCMaterialDrawDescriptor@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@VCHitBox@@V?$CUtlMemory@VCHitBox@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@VCHitBox@@V?$CUtlMemory@VCHitBox@@H@@@@VCHitBox@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@VCHitBoxSet@@V?$CUtlMemory@VCHitBoxSet@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@VCHitBoxSet@@V?$CUtlMemory@VCHitBoxSet@@H@@@@VCHitBoxSet@@@@
.?AV?$CSchemaManipulator@V?$CUtlVectorFixedGrowable@VCSceneObjectData@@$00@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVectorFixedGrowable@VCSceneObjectData@@$00@@VCSceneObjectData@@@@
.?AV?$CSchemaManipulator@V?$CStrongHandle@UInfoForResourceTypeCMorphSet@@@@@@
.?AV?$CSchemaStrongHandleInspectionManipulator@UInfoForResourceTypeCMorphSet@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@PEAVCBaseConstraint@@V?$CUtlMemory@PEAVCBaseConstraint@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@PEAVCBaseConstraint@@V?$CUtlMemory@PEAVCBaseConstraint@@H@@@@PEAVCBaseConstraint@@@@
.?AV?$CSchemaEnumBinding@W4multiplayerBreak_t@@@@
.?AV?$CSchemaClassBinding@VVpropBreakablePartData_t@@@@
.?AV?$CSchemaClassBinding@VCVPhysXMesh@@@@
.?AV?$CSchemaClassBinding@VCVPhysXLevelData@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@VCVPhysXMesh@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@VCVPhysXMesh@@@@@@
.?AV?$CSchemaEnumBinding@W4VersinEnum_t@VPhysXDiskShapeHeader_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXDiskShapeHeader_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXDiskMesh2_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXShapeCompoundHeader2_t@@@@
.?AV?$CSchemaClassBinding@UVPhysXDiskCapsule_t@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@V?$CResourceArray@E@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@V?$CResourceArray@E@@@@@@
.?AV?$CSchemaClassBinding@URnDummy_t@@@@
.?AV?$CSchemaClassBinding@URnSphere_t@@@@
.?AV?$CSchemaClassBinding@URnCapsule_t@@@@
.?AV?$CSchemaClassBinding@URnPlane_t@@@@
.?AV?$CSchemaClassBinding@URnHalfEdge_t@@@@
.?AV?$CSchemaClassBinding@URnFace_t@@@@
.?AV?$CSchemaClassBinding@URnHull_t@@@@
.?AV?$CSchemaClassBinding@URnTriangle_t@@@@
.?AV?$CSchemaClassBinding@URnNode_t@@@@
.?AV?$CSchemaClassBinding@URnMesh_t@@@@
.?AV?$CSchemaClassBinding@URnShapeDesc_t@@@@
.?AV?$CSchemaClassBinding@URnSphereDesc_t@@@@
.?AV?$CSchemaClassBinding@URnCapsuleDesc_t@@@@
.?AV?$CSchemaClassBinding@URnHullDesc_t@@@@
.?AV?$CSchemaClassBinding@URnMeshDesc_t@@@@
.?AV?$CSchemaClassBinding@URnSoftbodyParticle_t@@@@
.?AV?$CSchemaClassBinding@URnSoftbodySpring_t@@@@
.?AV?$CSchemaClassBinding@URnSoftbodyCapsule_t@@@@
.?AV?$CSchemaClassBinding@URnBlendVertex_t@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@VVector@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnPlane_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnHalfEdge_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnFace_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnNode_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@URnTriangle_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@VVector@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnPlane_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnHalfEdge_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnFace_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnNode_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@URnTriangle_t@@@@@@
.?AV?$CSchemaEnumBinding@W4BoneFlags_t@ModelSkeletonData_t@@@@
.?AV?$CSchemaEnumBinding@W4FlagEnum@PermModelInfo_t@@@@
.?AV?$CSchemaEnumBinding@W4ModelBoneFlexComponent_t@@@@
.?AV?$CSchemaClassBinding@UMaterialGroup_t@@@@
.?AV?$CSchemaClassBinding@UModelSkeletonData_t@@@@
.?AV?$CSchemaClassBinding@UPermModelInfo_t@@@@
.?AV?$CSchemaClassBinding@UPermModelExtPart_t@@@@
.?AV?$CSchemaClassBinding@UModelBoneFlexDriverControl_t@@@@
.?AV?$CSchemaClassBinding@UModelBoneFlexDriver_t@@@@
.?AV?$CSchemaClassBinding@UPermModelData_t@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeIMaterial2@@@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@F@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@VQuaternion@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCModel@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UModelBoneFlexDriverControl_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UPermModelExtPart_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCRenderMesh@@@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@_K@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCPhysAggregateData@@@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCAnimationGroupResource@@@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCSequenceGroupResource@@@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UMaterialGroup_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UModelBoneFlexDriver_t@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeCModel@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCRenderMesh@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCPhysAggregateData@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCAnimationGroupResource@@@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCSequenceGroupResource@@@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeCRenderMesh@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeCPhysAggregateData@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeCAnimationGroupResource@@@@@@
.?AU?$CAtomicManipulator@V?$CWeakHandle@UInfoForResourceTypeCSequenceGroupResource@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeIMaterial2@@@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@F@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@VQuaternion@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCModel@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UModelBoneFlexDriverControl_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UPermModelExtPart_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCRenderMesh@@@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@_K@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCPhysAggregateData@@@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCAnimationGroupResource@@@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCSequenceGroupResource@@@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UMaterialGroup_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UModelBoneFlexDriver_t@@@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeCModel@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeCModel@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCRenderMesh@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCPhysAggregateData@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCAnimationGroupResource@@@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceExtReference@V?$CWeakHandle@UInfoForResourceTypeCSequenceGroupResource@@@@@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeCRenderMesh@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeCRenderMesh@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeCPhysAggregateData@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeCPhysAggregateData@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeCAnimationGroupResource@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeCAnimationGroupResource@@@@
.?AV?$CSchemaManipulator@V?$CWeakHandle@UInfoForResourceTypeCSequenceGroupResource@@@@@@
.?AV?$CSchemaWeakHandleInspectionManipulator@UInfoForResourceTypeCSequenceGroupResource@@@@
.?AV?$CSchemaClassBinding@UVertexPositionNormal_t@@@@
.?AV?$CSchemaClassBinding@UVertexPositionColor_t@@@@
.?AV?$CUtlMemory@UBuilderModelBoneFlexDriverControl_t@@H@@
.?AV?$CUtlMemory@UBuilderModelBoneFlexDriver_t@@H@@
.?AV?$CUtlVectorBase@UBuilderModelBoneFlexDriverControl_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriverControl_t@@H@@@@
.?AV?$CUtlVectorBase@UBuilderModelBoneFlexDriver_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriver_t@@H@@@@
.?AV?$CSchemaClassBinding@VCBuilderModelInfo@@@@
.?AV?$CSchemaClassBinding@UBuilderModelBoneFlexDriverControl_t@@@@
.?AV?$CSchemaClassBinding@UBuilderModelBoneFlexDriver_t@@@@
.?AV?$CSchemaClassBinding@UBuilderModelBoneFlexDriverList_t@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@UBuilderModelBoneFlexDriverControl_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriverControl_t@@H@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@UBuilderModelBoneFlexDriver_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriver_t@@H@@@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@UBuilderModelBoneFlexDriverControl_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriverControl_t@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@UBuilderModelBoneFlexDriverControl_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriverControl_t@@H@@@@UBuilderModelBoneFlexDriverControl_t@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@UBuilderModelBoneFlexDriver_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriver_t@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@UBuilderModelBoneFlexDriver_t@@V?$CUtlMemory@UBuilderModelBoneFlexDriver_t@@H@@@@UBuilderModelBoneFlexDriver_t@@@@
.?AV?$CSchemaClassBinding@VCBaseConstraint@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@UConstraintSlave_t@@V?$CUtlMemory@UConstraintSlave_t@@H@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@UConstraintTarget_t@@V?$CUtlMemory@UConstraintTarget_t@@H@@@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@UConstraintSlave_t@@V?$CUtlMemory@UConstraintSlave_t@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@UConstraintSlave_t@@V?$CUtlMemory@UConstraintSlave_t@@H@@@@UConstraintSlave_t@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@UConstraintTarget_t@@V?$CUtlMemory@UConstraintTarget_t@@H@@@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@UConstraintTarget_t@@V?$CUtlMemory@UConstraintTarget_t@@H@@@@UConstraintTarget_t@@@@
.?AV?$CUtlMemory@EH@@
.?AV?$CUtlVectorBase@MV?$CUtlMemory@MH@@@@
.?AV?$CUtlMemory@MH@@
.?AV?$CUtlMemory@_KH@@
.?AVCResourceStream@@
.?AVCResourceStreamVM@@
.?AVCResourceStreamFixed@@
.?AV?$ISchemaSearchTester@PEBVCSchemaClassInfo@@@@
.?AUCValueSearchTester_ClassIntrospectionHandle_t@MDiskDataForResourceType@@
.?AVIResourceAllocatorUtils@@
.?AVIResourceTypeManager@@
.?AVCResourceAllocatorUtils@@
.?AVCBaseIntrospectedTypeManager@@
.?AV?$CUtlMemory@V?$CUtlHashtableEntry@VResourceId_t@@PEBD@@H@@
.?AVCSchemaVisitorBase@@
.?AVCSchemaFieldVisitor@@
.?AVCExtrefTraversal@@
.?AVCResourceReferenceFixupTraversal@@
.?AVCReferenceCleanupTraversal@@
.?AVIStack_Annotation@@
.?AV?$CSchemaFieldVisitorInfoMap@VCExtrefTraversal@@@@
.?AVCSchemaVisitorInfoMapBase@@
.?AV?$CStackAnnotation@PEBVCSchemaClassField@@_NXXXXXXX@@
.?AV?$CUtlVectorBase@VCUtlStringToken@@V?$CUtlMemoryFixedGrowable@VCUtlStringToken@@$07H@@@@
.?AV?$CUtlVectorBase@PEBDV?$CUtlMemoryFixedGrowable@PEBD$07H@@@@
.?AV?$CUtlMemory@PEBDH@@
.?AV?$CUtlVectorBase@PEAVKeyValues3@@V?$CUtlMemoryFixedGrowable@PEAVKeyValues3@@$07H@@@@
.?AV?$CUtlMemory@PEAVKeyValues3@@H@@
.?AV?$CUtlVectorBase@EV?$CUtlMemoryFixedGrowable@E$07H@@@@
.?AV?$CUtlVectorBase@PEAVCKeyValues3Cluster@@V?$CUtlMemoryFixedGrowable@PEAVCKeyValues3Cluster@@$07H@@@@
.?AV?$CUtlMemory@PEAVCKeyValues3Cluster@@H@@
.?AV?$CUtlVectorBase@PEAUStringPool_t@?$CUtlSymbolTableLargeBase@V?$CNonThreadsafeTree@$0A@@@$0A@$0IAA@@@V?$CUtlMemory@PEAUStringPool_t@?$CUtlSymbolTableLargeBase@V?$CNonThreadsafeTree@$0A@@@$0A@$0IAA@@@H@@@@
.?AV?$CUtlMemory@PEAUStringPool_t@?$CUtlSymbolTableLargeBase@V?$CNonThreadsafeTree@$0A@@@$0A@$0IAA@@@H@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@PEAUCUtlSymbolTableLargeBaseTreeEntry_t@@_J@@_J@@
.?AV?$CUtlRBTree@PEAUCUtlSymbolTableLargeBaseTreeEntry_t@@_JV?$CTreeEntryLess@V?$CNonThreadsafeTree@$0A@@@$0A@@@V?$CUtlMemory@U?$UtlRBTreeNode_t@PEAUCUtlSymbolTableLargeBaseTreeEntry_t@@_J@@_J@@@@
.?AV?$CUtlMemory@V?$CUtlHashtableEntry@USaveClassReference_t@@Uempty_t@@@@H@@
.?AV?$CUtlMemory@V?$CUtlHashtableEntry@PEBVCSchemaClassInfo@@PEAVCClassVisitInfo@@@@H@@
.?AV?$CUtlVectorBase@UFieldInfo_t@CClassVisitInfo@@V?$CUtlMemory@UFieldInfo_t@CClassVisitInfo@@H@@@@
.?AV?$CUtlMemory@UFieldInfo_t@CClassVisitInfo@@H@@
.?AV?$CUtlMemory@UClassToTraverse_t@CSchemaInheritanceIterator@@H@@
.?AV?$CUtlMemory@VCUtlTokenReference@@H@@
.?AV?$CFmtStrN@$0BAA@$0A@@@
.?AV?$CUtlVectorBase@UClassToTraverse_t@CSchemaInheritanceIterator@@V?$CUtlMemoryFixedGrowable@UClassToTraverse_t@CSchemaInheritanceIterator@@$07H@@@@
.?AVexception@std@@
.?AVerror_category@std@@
.?AV_Generic_error_category@std@@
.?AV_Iostream_error_category@std@@
.?AV_System_error_category@std@@
.?AVConVar@@
.?AV?$CUtlVectorBase@P6AXPEAVIConVar@@PEBDM@ZV?$CUtlMemory@P6AXPEAVIConVar@@PEBDM@ZH@@@@
.?AV?$CUtlMemory@P6AXPEAVIConVar@@PEBDM@ZH@@
.?AVIConVar@@
.?AVConCommandBase@@
.?AVIConCommandBaseAccessor@@
.?AVCDefaultAccessor@@
.?AVCEmptyConVar@@
.?AVCUtlCharConversion@@
.?AVCUtlCStringConversion@@
.?AVCUtlNoEscConversion@@
.?AV?$CUtlVectorBase@VCUtlTokenReference@@V?$CUtlMemoryFixedGrowable@VCUtlTokenReference@@$07H@@@@
.?AV?$CUtlVectorBase@UTokenWarning_t@@V?$CUtlMemory@UTokenWarning_t@@H@@@@
.?AV?$CUtlMemory@UTokenWarning_t@@H@@
.?AV?$CUtlMemory@U?$UtlRBTreeNode_t@VCStringPoolIndex@CUtlSymbolTable@@G@@G@@
.?AV?$CUtlVectorBase@PEAUStringPool_t@CUtlSymbolTable@@V?$CUtlMemory@PEAUStringPool_t@CUtlSymbolTable@@H@@@@
.?AV?$CUtlMemory@PEAUStringPool_t@CUtlSymbolTable@@H@@
.?AV?$CUtlRBTree@VCStringPoolIndex@CUtlSymbolTable@@GVCLess@2@V?$CUtlMemory@U?$UtlRBTreeNode_t@VCStringPoolIndex@CUtlSymbolTable@@G@@G@@@@
.?AVCSchemaInstallCallback@@
.?AVtype_info@@
.?AVbad_exception@std@@
.?AVDNameNode@@
.?AVcharNode@@
.?AVpcharNode@@
.?AVpDNameNode@@
.?AVDNameStatusNode@@
.?AVpairNode@@
.?AVbad_alloc@std@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AV?$CUtlVectorBase@UFace_t@CQuickHullSimplifier@@V?$CUtlMemoryFixedGrowable@UFace_t@CQuickHullSimplifier@@$0BAA@H@@@@
.?AV?$CUtlMemory@UFace_t@CQuickHullSimplifier@@H@@
.?AV?$CUtlMemory@UCluster_t@CQuickHullSimplifier@@H@@
.?AV?$CUtlVectorBase@UCluster_t@CQuickHullSimplifier@@V?$CUtlMemoryFixedGrowable@UCluster_t@CQuickHullSimplifier@@$0BAA@H@@@@
.?AV?$CUtlMemory@VCVertexKDNode@@H@@
.?AV?$CUtlVectorBase@PEBMV?$CUtlMemory@PEBMH@@@@
.?AV?$CUtlMemory@PEBMH@@
.?AV?$CUtlBlockMemory@PEBMH@@
.?AV?$CUtlVectorBase@VCVertexKDNode@@V?$CUtlMemory@VCVertexKDNode@@H@@@@
.?AV?$CUtlVectorBase@PEBMV?$CUtlMemoryFixedGrowable@PEBM$0EA@H@@@@
.?AV?$CUtlVectorBase@PEBMV?$CUtlBlockMemory@PEBMH@@@@
?UUUUUU
?bXM`8q
?v]37:1
?*!=7FX
?+uigR5
?0E/M()
?f_Fa,N
?/1u73;
?d*{3,Z
