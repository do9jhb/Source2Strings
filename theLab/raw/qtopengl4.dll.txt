!This program cannot be run in DOS mode.
`.rdata
@.reloc
@WATAUH
VWATAUAVH
A^A]A\_^
~)fffff
~6fffff
@SUVWATH
|$ ATAUAVH
 A^A]A\
A$A9@$uc
A A9@ u-
A(A9@(u$
A,A9@,u
A0A9@0u
A4A9@4u	
A8A9@8t
|$ UATAUH
SUVWATAUAVH
0A^A]A\_^][
l$(LcnlL
VWATAUAVH
Lc\$XMcJ
 A^A]A\_^
SUVWATH
0A\_^][
CHH9C@t
t.ffffff
Lc\$8McJ
USVWATAUAVAWH
A_A^A]A\_^[]
L$Hfffffff
CHH9C@t
L$Hfffffff
Z0H9Y0t-
\$8H9^8t,
@UVWATAUH
$uAIcD$
$uEIcD$
$uAIcD$
$uEIcD$
A]A\_^]
USVWATAUAVAWH
xEfffff
A_A^A]A\_^[]
UVWATAUH
0A]A\_^]
=DXT1t7=DXT3t(=DXT5t
@SUVWATAUAVH
@A^A]A\_^][
@SUVWATAUAVAWH
A_A^A]A\_^][
UATAUAVAWH
A_A^A]A\]
ATAUAVH
@A^A]A\
UVWATAUAVAWH
A_A^A]A\_^]
t$ WATAUAVAWH
0A_A^A]A\_
VWATAUAVH
A^A]A\_^
UVWATAUH
@A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
@SUVWATH
0A\_^][
@USVWATAUAVAWH
A_A^A]A\_^[]
VWATAUAVH
0A^A]A\_^
@WATAUH
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
@WATAUH
ATAUAVH
@A^A]A\
@WATAUH
ATAUAVH
@A^A]A\
@WATAUH
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\H
ATAUAVH
@A^A]A\
@WATAUH
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
@WATAUH
ATAUAVH
@A^A]A\
@WATAUH
ATAUAVH
@WATAUH
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
@A^A]A\
ATAUAVH
KHH91t	H
																																																																																																																								
@SWAUAVH
xA^A]_[
UVWATAUH
`A]A\_^]
@USVWATH
H;Q u H
t^fffff
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUH
A]A\_^]
UWATAUAVH
A^A]A\_]
@SUVWATAUAVH
`A^A]A\_^][
SUVWATH
@A\_^][
D$0H;D$8u
VWATAUAVH
Lc\$XMcJ
 A^A]A\_^
Lc\$8McJ
}!fffffff
SUVWATAUH
A]A\_^][
@USVWATH
HcT$8McJ
Lc\$8HcJ
D$0H;D$8u
USVWATAUAVAWH
fffffff
A_A^A]A\_^[]
UVWATAUH
A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWATAUAVH
?+st+{p
A^A]A\_]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUH
8A]A\_^][
@SUVWATAUAVAWH
HA_A^A]A\_^][
USVWATAUAVAWH
A_A^A]A\_^[]
USVWATAUAVAWH
A_A^A]A\_^[]
@VWATAUAVH
0A^A]A\_^
UVWATAUAVAWH
A_A^A]A\_^]
u?L;D$8t8A
t$ WATAUH
SUWATAUAWH
XA_A]A\_][
SUVWATAUAVAWH
hA_A^A]A\_^][
USVWATAUAVAWH
A_A^A]A\_^[]
@SVAVAWH
HA_A^^[
VWATAUAVH
@A^A]A\_^
@UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
p UWATH
UWATAUAVH
A^A]A\_]
UVWATAUH
A]A\_^]
@SUVWATAUAVAWH
u5H;T$8t.H
d$ IcD$
A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
USVWATAUAVH
A^A]A\_^[]
D$09D$`
UVWATAUAVAWH
.Cxz(u&H
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UWATAUAVH
A^A]A\_]
SUVWATAUAVH
A^A]A\_^][
UVWATAUH
A]A\_^]
USVWATAUAVAWH
A_A^A]A\_^[]
USVWATAUAVAWH
9D$0}YH
A_A^A]A\_^[]
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
L$ UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUH
`A]A\_^]
UATAUAVAWH
<7#uhLc
A_A^A]A\]
SUVWATH
0A\_^][
@WATAUH
Lc\$8McJ
VWATAUAVH
@A^A]A\_^
D$0fffff
@UVWATAUH
pA]A\_^]
@USVWATAUAVAWH
hA_A^A]A\_^[]
VWATAUAVH
A^A]A\_^
HcT$pMc
l$@Hcl$`H
l$ Lcl$xH
HcT$pIc
l$@Hcl$`H
l$ Lcl$xL
twVWATH
UATAUAVAWH
A_A^A]A\]
VWATAUAVH
@A^A]A\_^
HcT$8McJ
Lc\$8HcJ
Lc\$8McJ
@WAUAVH
d$XD9w$
@UVWATAUAVAWH
@A_A^A]A\_^]
ATAUAVH
L$@ffff
Icv(Icn
USVWATAUAVAWH
D$l+D$d
L$h+L$`
t$l+t$d
d$hD+d$`A
A_A^A]A\_^[]
USVWATAUAVAWH
A_A^A]A\_^[]
Lc\$8McJ
VWATAUAVH
uEH;T$@t>H
A^A]A\_^H
UVWATAUAVAWH
D$XD+D$PA
D$\+D$T
D$h+L$T
A_A^A]A\_^]
@USVWATAUAVH
F A9P8u
F H9x t
A^A]A\_^[]
@WATAUH
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
ATAUAVH
Lc\$8McJ
SUVWATH
@A\_^][
USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUH
XA]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
t-fffff
@UVWATAUAVAWH
A_A^A]A\_^]
VWATAUAVH
A^A]A\_^
VWATAUAVH
@A^A]A\_^
l$ VWATH
Lc\$8McJ
USVWATAUAVH
pA^A]A\_^[]
@UVWATAUH
0A]A\_^]
VWATAUAVH
@A^A]A\_^
UVWATAUAVAWH
D8{2t9E
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
													
UWATAUAVH
A^A]A\_]
@UVWATAUH
`A]A\_^]
USWAUAWH
HcL$4 D$0
A_A]_[]
USATAUAVI
A^A]A\[]
VWATAUAVH
@A^A]A\_^
@UWATAUH
hA]A\_]
SUVWATAUAVAWH
XA_A^A]A\_^][H
USVWATAUAVH
A^A]A\_^[]
VWATAUAVH
A^A]A\_^
UATAUAVAWH
A_A^A]A\]
USVWATAUH
A]A\_^[]
VWATAUAVH
A^A]A\_^
@USVWATAUAVH
A^A]A\_^[]
UVWATAUAVAWH
D$4A9D$hu
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
ATAUAVH
UVWATAUAVAWH
A_A^A]A\_^]
X UVWAUAVH
A^A]_^]
L$ WATAUAVAW
t$@A_A^A]A\_
B H9A u
|$ ATAUD
|$0A]A\
|$ ATAUD
|$0A]A\
t$ ATAUH
t$0A]A\
t$ ATAUH
t$0A]A\
D$(;L$h
WATAUAVAWH
A_A^A]A\_
@WATAUH
fD9,(u,9s
fffffff
WATAUAVAWH
A_A^A]A\_
@WATAUH
WATAUAVAWH
G@HcG<H
0A_A^A]A\_
C0HcK,H
WATAUAVAWH
G@HcG<H
0A_A^A]A\_
C0HcK,H
B H9A u)
@USVWATAUAVAWH
XA_A^A]A\_^[]
@USVWATAUAVAWH
XA_A^A]A\_^[]
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
D; H9F u"
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
SUAUAWH
B H9A u!
u&H;T; u
SUAUAWH
B H9A u!
u&H;T; u
l$ VATAUAVAWH
A_A^A]A\^
D$xHcD$\L
u&L;x u 
@VATAWH
F0HcN,H
l$ VATAUAVAWH
A_A^A]A\^
D$xHcD$\L
u&L;x u 
@VATAWH
F0HcN,H
UVWATAUH
@A]A\_^]
D$0IcL$,H
A9L$`~+3
USVWATAUAVAWH
L$0D9)u
A_A^A]A\_^[]
@UVWATAUAVAWH
@A_A^A]A\_^]
D$0IcL$,H
A9L$`~+3
USVWATAUAVAWH
L$0D9)u
A_A^A]A\_^[]
@UVWATAUAVAWH
@A_A^A]A\_^]
@VWATAUAVH
0A^A]A\_^
@WATAUH
@WATAUAVAWH
0A_A^A]A\_
@VWATAUAVH
0A^A]A\_^
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
@UVWATAUAVAWH
A_A^A]A\_^]
L$ UVWATAUAVAWH
A_A^A]A\_^]
D$< t&A
UVWATAUH
A]A\_^]
\$ UVWATAUAVAWH
pA_A^A]A\_^]
VWATAUAVH
A^A]A\_^
@UVWATAUAVAWH
;D$LuZH
A_A^A]A\_^]
H9C8t%H
@UVATAUAVH
 A^A]A\^]H
 A^A]A\^]
p H9s t0
D$`Hct$X
@UVWATAUAVAWH
A_A^A]A\_^]
@SATAUH
l$ VAUAVH
@UVWATAUH
@A]A\_^]
@SUVWATAUH
HA]A\_^][
@USVWATAUAVAWH
A_A^A]A\_^[]
t$ WATAUAVAWH
 A_A^A]A\_
p WATAUH
@USVWATAUAVAWH
A_A^A]A\_^[]
fffffff
ATAUAVH
 A^A]A\
x ATAUAWH
UATAUAVAWH
gfffffffH
A_A^A]A\]
@SUVWATH
SVWATAUAVAWH
0A_A^A]A\_^[
u"E9Q t
B(I9A(u
u5E9Q t
E9A u#I
WATAUAVAWH
 A_A^A]A\_
@SVWATAUAVAWH
L!l$HL!l$@
D$PL9oXt
A_A^A]A\_^[
ATAUAVH
0A^A]A\
|$ ATAUAVH
VWATAUAVH
A^A]A\_^
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
E9,$~T3
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
ATAUAVH
@A^A]A\
t$ WATAUH
@SUVWATAUAVH
zux!l$ E3
A^A]A\_^][
WATAUAVAWH
@A_A^A]A\_
USVWATAUH
A]A\_^[]
USVWATAUH
A]A\_^[]
ATAUAVH
x ATAUAVH
< tG<	tC
 A^A]A\
s\HcL$HH
UVWATAUH
D$&8\$&t-8X
@A]A\_^]
D8\$8t#H
!D$8!D$HM
tO<_t<<$t8<<t4<>t0<-t,<a|
<z~$<A|
tb<A|M<P
<1~1<3~$<4t9<5t
D8\$(u|H
M94$tiA
|$ UATAUAVAWH
A_A^A]A\]
/L9\$ t
UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
UWATAUAVH
M94$t|A
uQI91tLH
A^A]A\_]
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVH
PA^A]A\_^][
@UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
0A_A^A]A\_^]
@UATAUAVAWH
!t$(H!t$ A
A_A^A]A\]
@UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
A_A^A]A\_
UATAUAVAWH
A_A^A]A\]
L$ SUVWH
WATAUAVAWH
0A_A^A]A\_
@SUVWATAUAVAWH
?CuND8g
A_A^A]A\_^][
\$ UVWATAUAVAWH
A_A^A]A\_^]
H9L$Xt'H
@SUVWATAUAVH
A^A]A\_^][
!t$(H!t$ H
|$ ATAUAVH
0A^A]A\
\$ UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
|$ UATAUAVAWH
0A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
s WATAUAVAWH
~/8\$vt)H
9t$P~98\$vt3H
A_A^A]A\_
x ATAUAVH
 A^A]A\
7;|$0t,
x ATAUAWH
|$ UATAUAVAWH
A_A^A]A\]
p WATAUAVAWH
A_A^A]A\_
H(H9J(u
QGLFormat::setRedBufferSize: Cannot set negative red buffer size %d
QGLFormat::setGreenBufferSize: Cannot set negative green buffer size %d
QGLFormat::setBlueBufferSize: Cannot set negative blue buffer size %d
QGLFormat::setVersion: Cannot set zero or negative version number %d.%d
QFlags(
2freeTexture(QGLContext *, QPixmapData *, GLuint)
1freeTexture_slot(QGLContext *, QPixmapData *, GLuint)
QGLFormat::setSamples: Cannot have negative number of samples per pixel %d
QGLFormat::setDepthBufferSize: Cannot set negative depth buffer size %d
QGLFormat::setAlphaBufferSize: Cannot set negative alpha buffer size %d
QGLFormat::setAccumBufferSize: Cannot set negative accumulate buffer size %d
QGLFormat::setStencilBufferSize: Cannot set negative stencil buffer size %d
, profile 
, minorVersion 
, majorVersion 
, swapInterval 
, samples 
, alphaBufferSize 
, blueBufferSize 
, greenBufferSize 
, redBufferSize 
, stencilBufferSize 
, accumBufferSize 
, depthBufferSize 
, plane 
options 
QGLFormat(
QGLContext: Unsupported paint device type
Unrecognised OpenGL ES version
OpenGL ES
glGetStringi
GL_EXT_bgra
GL_ARB_texture_non_power_of_two
GL_EXT_framebuffer_blit
GL_ARB_framebuffer_object
GL_EXT_texture_format_BGRA8888
GL_IMG_texture_format_BGRA8888
GL_ARB_pixel_buffer_object
GL_NV_float_buffer
GL_EXT_packed_depth_stencil
GL_EXT_stencil_wrap
GL_EXT_stencil_two_side
GL_EXT_framebuffer_object
GL_ARB_texture_mirrored_repeat
GL_ARB_shader_objects
GL_ARB_fragment_shader
GL_ARB_fragment_program
GL_IMG_texture_compression_pvrtc
GL_OES_compressed_ETC1_RGB8_texture
GL_EXT_texture_compression_s3tc
GL_ARB_texture_compression
GL_SGIS_generate_mipmap
GL_ARB_multisample
GL_ARB_texture_rectangle
QGLContext::bindTexture(): DDS image format not supported.
QGLContext::bindTexture(): DDS image size is not valid.
QGLContext::bindTexture(): DDS texture compression is not supported.
QGLContext::bindTexture(): PVR image size is not valid.
QGLContext::bindTexture(): PVRTC texture compression is not supported.
QGLContext::bindTexture(): ETC1 texture compression is not supported.
QGLContext::bindTexture(): PVR image format 0x%x not supported.
QT_GL_USE_OPENGL1ENGINE
QGLWidget::renderText(): Calling renderText() while a GL 2 paint engine is active on the same device is not allowed.
QGLContext::bindTexture(): could not resolve glCompressedTexImage2DARB.
glCompressedTexImage2DARB
QGLContext::bindTexture(): The GL implementation does not support texture compression extensions.
glActiveTextureARB
glActiveTexture
glAttachObjectARB
glAttachShader
glBindAttribLocationARB
glBindAttribLocation
glBindBufferARB
glBindBufferEXT
glBindBuffer
glBindFramebufferARB
glBindFramebufferEXT
glBindFramebuffer
glBindRenderbufferARB
glBindRenderbufferEXT
glBindRenderbuffer
glBlendColorARB
glBlendColorEXT
glBlendColor
glBlendEquationARB
glBlendEquationEXT
glBlendEquation
glBlendEquationSeparateARB
glBlendEquationSeparateEXT
glBlendEquationSeparate
glBlendFuncSeparateARB
glBlendFuncSeparateEXT
glBlendFuncSeparate
glBufferDataARB
glBufferDataEXT
glBufferData
glBufferSubDataARB
glBufferSubDataEXT
glBufferSubData
glCheckFramebufferStatusARB
glCheckFramebufferStatusEXT
glCheckFramebufferStatus
glCompileShader
glCompressedTexImage2DEXT
glCompressedTexImage2D
glCompressedTexSubImage2DARB
glCompressedTexSubImage2DEXT
glCompressedTexSubImage2D
glCreateProgramObjectARB
glCreateProgram
glCreateShaderObjectARB
glCreateShader
glDeleteBuffersARB
glDeleteBuffersEXT
glDeleteBuffers
glDeleteFramebuffersARB
glDeleteFramebuffersEXT
glDeleteFramebuffers
glDeleteObjectARB
glDeleteProgram
glDeleteRenderbuffersARB
glDeleteRenderbuffersEXT
glDeleteRenderbuffers
glDeleteShader
glDetachObjectARB
glDetachShader
glDisableVertexAttribArrayARB
glDisableVertexAttribArray
glEnableVertexAttribArrayARB
glEnableVertexAttribArray
glFramebufferRenderbufferARB
glFramebufferRenderbufferEXT
glFramebufferRenderbuffer
glFramebufferTexture2DARB
glFramebufferTexture2DEXT
glFramebufferTexture2D
glGenBuffersARB
glGenBuffersEXT
glGenBuffers
glGenerateMipmapARB
glGenerateMipmapEXT
glGenerateMipmap
glGenFramebuffersARB
glGenFramebuffersEXT
glGenFramebuffers
glGenRenderbuffersARB
glGenRenderbuffersEXT
glGenRenderbuffers
glGetActiveAttribARB
glGetActiveAttrib
glGetActiveUniformARB
glGetActiveUniform
glGetAttachedObjectsARB
glGetAttachedShaders
glGetAttribLocationARB
glGetAttribLocation
glGetBufferParameterivARB
glGetBufferParameterivEXT
glGetBufferParameteriv
glGetFramebufferAttachmentParameterivARB
glGetFramebufferAttachmentParameterivEXT
glGetFramebufferAttachmentParameteriv
glGetObjectParameterivARB
glGetProgramiv
glGetInfoLogARB
glGetProgramInfoLog
glGetRenderbufferParameterivARB
glGetRenderbufferParameterivEXT
glGetRenderbufferParameteriv
glGetShaderiv
glGetShaderInfoLog
glGetShaderPrecisionFormatARB
glGetShaderPrecisionFormatEXT
glGetShaderPrecisionFormat
glGetShaderSourceARB
glGetShaderSource
glGetUniformfvARB
glGetUniformfv
glGetUniformivARB
glGetUniformiv
glGetUniformLocationARB
glGetUniformLocation
glGetVertexAttribfvARB
glGetVertexAttribfv
glGetVertexAttribivARB
glGetVertexAttribiv
glGetVertexAttribPointervARB
glGetVertexAttribPointerv
glIsBufferARB
glIsBufferEXT
glIsBuffer
glIsFramebufferARB
glIsFramebufferEXT
glIsFramebuffer
glIsProgramARB
glIsProgram
glIsRenderbufferARB
glIsRenderbufferEXT
glIsRenderbuffer
glIsShaderARB
glIsShader
glLinkProgramARB
glLinkProgram
glReleaseShaderCompilerARB
glReleaseShaderCompiler
glRenderbufferStorageARB
glRenderbufferStorageEXT
glRenderbufferStorage
glSampleCoverageARB
glSampleCoverageEXT
glSampleCoverage
glShaderBinaryARB
glShaderBinary
glShaderSourceARB
glShaderSource
glStencilFuncSeparateARB
glStencilFuncSeparateEXT
glStencilFuncSeparate
glStencilMaskSeparateARB
glStencilMaskSeparateEXT
glStencilMaskSeparate
glStencilOpSeparateARB
glStencilOpSeparateEXT
glStencilOpSeparate
glUniform1fARB
glUniform1f
glUniform1fvARB
glUniform1fv
glUniform1iARB
glUniform1i
glUniform1ivARB
glUniform1iv
glUniform2fARB
glUniform2f
glUniform2fvARB
glUniform2fv
glUniform2iARB
glUniform2i
glUniform2ivARB
glUniform2iv
glUniform3fARB
glUniform3f
glUniform3fvARB
glUniform3fv
glUniform3iARB
glUniform3i
glUniform3ivARB
glUniform3iv
glUniform4fARB
glUniform4f
glUniform4fvARB
glUniform4fv
glUniform4iARB
glUniform4i
glUniform4ivARB
glUniform4iv
glUniformMatrix2fvARB
glUniformMatrix2fv
glUniformMatrix3fvARB
glUniformMatrix3fv
glUniformMatrix4fvARB
glUniformMatrix4fv
glUseProgramObjectARB
glUseProgram
glValidateProgramARB
glValidateProgram
glVertexAttrib1fARB
glVertexAttrib1f
glVertexAttrib1fvARB
glVertexAttrib1fv
glVertexAttrib2fARB
glVertexAttrib2f
glVertexAttrib2fvARB
glVertexAttrib2fv
glVertexAttrib3fARB
glVertexAttrib3f
glVertexAttrib3fvARB
glVertexAttrib3fv
glVertexAttrib4fARB
glVertexAttrib4f
glVertexAttrib4fvARB
glVertexAttrib4fv
glVertexAttribPointerARB
glVertexAttribPointer
GL_EXT_blend_subtract
GL_EXT_blend_func_separate
GL_EXT_blend_equation_separate
GL_EXT_blend_color
GL_ARB_multitexture
QGLPixelBuffer::metric(), Unhandled metric type: %d
QGLFramebufferObject: An undefined error has occurred: 
QGLFramebufferObject: Framebuffer incomplete, attachments must have same number of samples per pixel.
QGLFramebufferObject: Framebuffer incomplete, missing read buffer.
QGLFramebufferObject: Framebuffer incomplete, missing draw buffer.
QGLFramebufferObject: Framebuffer incomplete, attached images must have same format.
QGLFramebufferObject: Framebuffer incomplete, attached images must have same dimensions.
QGLFramebufferObject: Framebuffer incomplete, duplicate attachment.
QGLFramebufferObject: Framebuffer incomplete, missing attachment.
QGLFramebufferObject: Framebuffer incomplete attachment.
QGLFramebufferObject: Unsupported framebuffer format.
QGLFramebufferObject::metric(), Unhandled metric type: %d.
glRenderbufferStorageMultisampleARB
glRenderbufferStorageMultisample
glRenderbufferStorageMultisampleEXT
glBlitFramebufferARB
glBlitFramebuffer
glBlitFramebufferEXT
glMultiTexCoord4f
glActiveStencilFaceEXT
glProgramLocalParameter4fvARB
glGenProgramsARB
glDeleteProgramsARB
glBindProgramARB
glProgramStringARB
glUnmapBufferEXT
glUnmapBuffer
glUnmapBufferARB
glMapBufferEXT
glMapBuffer
glMapBufferARB
glGetBufferSubDataEXT
glGetBufferSubData
glGetBufferSubDataARB
glUniformMatrix4x3fvARB
glUniformMatrix4x2fvARB
glUniformMatrix3x4fvARB
glUniformMatrix3x2fvARB
glUniformMatrix2x4fvARB
glUniformMatrix2x3fvARB
glCompileShaderARB
glUniformMatrix4x3fv
glUniformMatrix4x2fv
glUniformMatrix3x4fv
glUniformMatrix3x2fv
glUniformMatrix2x4fv
glUniformMatrix2x3fv
glFramebufferTextureFaceEXT
glFramebufferTextureLayerEXT
glFramebufferTextureEXT
glProgramParameteriEXT
QGLPaintDevice::metric() - metric %d not known
Pixmap type not supported for GL rendering
QGLPaintDevice::getDevice() - Unknown device type %d
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 1 } };
TEMP R0;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[0], 2D;
ADD R0.x, -R0, c[4];
MUL result.color, fragment.color.primary, R0.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..6],
		{ 1 } };
TEMP R0;
TEMP R1;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.zw, R0.xyxy, R0.z;
MUL R0.zw, R0, c[0].xyxy;
TEX R1.x, R0.zwzw, texture[1], 2D;
ADD R0.xy, fragment.position, c[5];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[0], 2D;
DP4 R1.y, R0, c[6];
ADD R1.x, -R1, c[7];
MUL R0, fragment.color.primary, R1.x;
MUL result.color, R0, R1.y;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R1.x, -R0, c[5];
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R1, fragment.color.primary, R1.x;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MUL R2.xyz, R1, R0;
MAD R2.xyz, -R2, c[5].y, R3;
ADD R2.w, -R0, c[5].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, R1.w, R0.w;
ADD R2.y, -R1.w, c[5].x;
MAD result.color.xyz, R0, R2.y, R1;
MAD result.color.w, -R1, R0, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R1.x, -R0, c[5];
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R1, fragment.color.primary, R1.x;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
ADD R0.xyz, R1, R0;
MIN R2.xyz, R2, R3;
ADD R1.x, R1.w, R0.w;
MAD result.color.xyz, -R2, c[5].y, R0;
MAD result.color.w, -R1, R0, R1.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..4],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R1.xyz, R0, c[3];
RCP R1.z, R1.z;
MUL R1.xy, R1, R1.z;
MUL R1.xy, R1, c[0];
TEX R1.x, R1, texture[1], 2D;
MUL R0.xy, fragment.position, c[4];
TEX R0, R0, texture[0], 2D;
MAX R1.z, R0.w, c[5];
RCP R1.z, R1.z;
MUL R3.xyz, R0, R1.z;
MAD R2.xyz, R3, c[6].x, -c[6].y;
ADD R1.x, -R1, c[5];
MUL R1, fragment.color.primary, R1.x;
MAD R4.xyz, R3, R2, c[6].z;
MAD R2.xyz, R1, c[5].y, -R1.w;
MUL R5.xyz, R0.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[5].x;
MAD R2.xyz, R2, R3, R1.w;
MUL R3.xyz, R1, c[5].y;
MAD R5.xyz, R1.w, R0, R6;
MAD R4.xyz, R1.w, R0, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R0, c[5].w;
SGE R4.xyz, R4, R0.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R0, R2, R4;
MUL R2.xyz, R0, R2;
SGE R3.xyz, R3, R1.w;
MAD R2.xyz, R3, R4, R2;
ADD R2.w, -R0, c[5].x;
MAD R2.xyz, R1, R2.w, R2;
ADD R1.x, R1.w, R0.w;
ADD R1.y, -R1.w, c[5].x;
MAD result.color.xyz, R0, R1.y, R2;
MAD result.color.w, -R1, R0, R1.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R0.x, -R0, c[5];
MUL R1, fragment.color.primary, R0.x;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
ADD R2.w, -R0, c[5].x;
ADD R3.xyz, R1.w, -R1;
ADD R2.xyz, R0.w, -R0;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[5].y;
MAD R2.xyz, R1.w, R0.w, -R2;
MAD R2.xyz, R1, R2.w, R2;
MUL R4.xyz, R1, R2.w;
MUL R3.xyz, R1, R0;
MUL R1.xyz, R1, c[5].y;
ADD R2.w, -R1, c[5].x;
MAD R3.xyz, R3, c[5].y, R4;
MAD R3.xyz, R0, R2.w, R3;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R1.w, R0.w;
ADD R0.xyz, R0, -R3;
SGE R1.xyz, R1, R1.w;
MAD result.color.xyz, R1, R0, R3;
MAD result.color.w, -R1, R0, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R1.x, -R0, c[5];
MUL R1, fragment.color.primary, R1.x;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
ADD R2.w, -R0, c[5].x;
MAD R2.xyz, -R1.w, R0.w, R3;
MUL R4.xyz, R1.w, R2;
MAX R2.xyz, R1, c[5].y;
MUL R5.xyz, R1, R2.w;
ADD R3.w, -R1, c[5].x;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R0, R3.w;
MAD R0.xyz, R0, R3.w, R2;
MAD R1.xyz, R1, R2.w, R4;
MUL R2.x, R1.w, R0.w;
ADD R2.w, R1, R0;
ADD R0.xyz, R0, -R1;
SGE R2.xyz, R3, R2.x;
MAD result.color.xyz, R2, R0, R1;
MAD result.color.w, -R1, R0, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R0.x, -R0, c[5];
MUL R1, fragment.color.primary, R0.x;
MAX R0.x, R1.w, c[5].y;
RCP R0.x, R0.x;
MAD R3.xyz, -R1, R0.x, c[5].x;
MAX R3.xyz, R3, c[5].y;
MUL R0.xy, fragment.position, c[4];
TEX R0, R0, texture[0], 2D;
ADD R2.x, -R1.w, c[5];
MUL R2.xyz, R0, R2.x;
ADD R2.w, -R0, c[5].x;
MAD R2.xyz, R1, R2.w, R2;
MUL R0.xyz, R1.w, R0;
RCP R3.x, R3.x;
RCP R3.y, R3.y;
RCP R3.z, R3.z;
MAD R3.xyz, R0, R3, R2;
MAD R0.xyz, R1, R0.w, R0;
MAD R2.xyz, R1.w, R0.w, R2;
MUL R2.w, R1, R0;
ADD R1.x, R1.w, R0.w;
ADD R2.xyz, R2, -R3;
SGE R0.xyz, R0, R2.w;
MAD result.color.xyz, R0, R2, R3;
MAD result.color.w, -R1, R0, R1.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R1.x, -R0, c[5];
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R1, fragment.color.primary, R1.x;
MUL R2.xyz, R1, R0.w;
MUL R3.xyz, R1.w, R0;
MAX R2.xyz, R2, R3;
ADD R2.w, -R0, c[5].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, R1.w, R0.w;
ADD R2.y, -R1.w, c[5].x;
MAD result.color.xyz, R0, R2.y, R1;
MAD result.color.w, -R1, R0, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R1.x, -R0, c[5];
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R1, fragment.color.primary, R1.x;
MUL R2.xyz, R1, R0.w;
MUL R3.xyz, R1.w, R0;
MIN R2.xyz, R2, R3;
ADD R2.w, -R0, c[5].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, R1.w, R0.w;
ADD R2.y, -R1.w, c[5].x;
MAD result.color.xyz, R0, R2.y, R1;
MAD result.color.w, -R1, R0, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R0.x, -R0, c[5];
MUL R1, fragment.color.primary, R0.x;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
ADD R3.xyz, R1.w, -R1;
ADD R2.xyz, R0.w, -R0;
MUL R2.xyz, R2, R3;
ADD R2.w, -R0, c[5].x;
MUL R2.xyz, R2, c[5].y;
MAD R2.xyz, R1.w, R0.w, -R2;
MAD R2.xyz, R1, R2.w, R2;
MUL R3.xyz, R1, R2.w;
MUL R1.xyz, R1, R0;
ADD R2.w, -R1, c[5].x;
MAD R1.xyz, R1, c[5].y, R3;
MAD R1.xyz, R0, R2.w, R1;
MAD R2.xyz, R0, R2.w, R2;
MUL R0.xyz, R0, c[5].y;
ADD R2.w, R1, R0;
ADD R2.xyz, R2, -R1;
SGE R0.xyz, R0, R0.w;
MAD result.color.xyz, R0, R2, R1;
MAD result.color.w, -R1, R0, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[1], 2D;
ADD R1.x, -R0, c[5];
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R1, fragment.color.primary, R1.x;
ADD R2, R1, R0;
MAD result.color, -R1, R0, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R1.x, R0, texture[1], 2D;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
ADD R1.x, -R1, c[5];
MUL R1, fragment.color.primary, R1.x;
ADD R2.x, -R0.w, c[5];
MUL R2.xyz, R1, R2.x;
MAD R1.xyz, R1, R0, R2;
ADD R2.x, R1.w, R0.w;
ADD R2.y, -R1.w, c[5].x;
MAD result.color.xyz, R0, R2.y, R1;
MAD result.color.w, -R1, R0, R2.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..6],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R1.x, R0, texture[1], 2D;
MUL R0.zw, fragment.position.xyxy, c[6].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R2.xyz, R0, c[4].y;
ADD R1.x, -R1, c[7];
MUL R1, fragment.color.primary, R1.x;
MUL R3.xyz, R1.w, R2;
MUL R2.xyz, R1, c[4].x;
MUL R0.xyz, R0, c[5].z;
MAD R2.xyz, R0.w, R2, R3;
ADD R2.w, -R0, c[7].x;
MUL R1.xyz, R1, c[5].y;
MAD R1.xyz, R2.w, R1, R2;
ADD R2.x, -R1.w, c[7];
MAD result.color.xyz, R2.x, R0, R1;
MUL R0.x, R1.w, R0.w;
MUL R0.z, R0.w, R2.x;
MUL R0.y, R1.w, R2.w;
DP3 result.color.w, R0, c[5];
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R1.x, R0, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R1, c[8];
MUL R1, fragment.color.primary, R1.x;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MUL R2.xyz, R1, R0;
MAD R2.xyz, -R2, c[8].y, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R1.x, R0, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
ADD R1.x, -R1, c[8];
TEX R0, R0, texture[0], 2D;
MUL R1, fragment.color.primary, R1.x;
ADD R2.xyz, R1, R0;
MUL R3.xyz, R1.w, R0;
MUL R1.xyz, R1, R0.w;
MIN R1.xyz, R1, R3;
MAD R2.xyz, -R1, c[8].y, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..7],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R1.xyz, R0, c[3];
RCP R1.z, R1.z;
MUL R1.xy, R1, R1.z;
MUL R1.xy, R1, c[0];
TEX R1.x, R1, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
MAX R1.z, R0.w, c[8];
RCP R1.z, R1.z;
MUL R3.xyz, R0, R1.z;
MAD R2.xyz, R3, c[9].x, -c[9].y;
ADD R1.x, -R1, c[8];
MUL R1, fragment.color.primary, R1.x;
MAD R4.xyz, R3, R2, c[9].z;
MAD R2.xyz, R1, c[8].y, -R1.w;
MUL R5.xyz, R0.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[8].x;
MAD R2.xyz, R2, R3, R1.w;
MUL R3.xyz, R1, c[8].y;
MAD R5.xyz, R1.w, R0, R6;
MAD R4.xyz, R1.w, R0, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R0, c[8].w;
SGE R4.xyz, R4, R0.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R0, R2, R4;
SGE R3.xyz, R3, R1.w;
MUL R2.xyz, R0, R2;
ADD R2.w, -R0, c[8].x;
MAD R2.xyz, R3, R4, R2;
MAD R2.xyz, R1, R2.w, R2;
ADD R1.x, -R1.w, c[8];
MAD R2.xyz, R0, R1.x, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[2], 2D;
ADD R0.x, -R0, c[8];
MUL R1, fragment.color.primary, R0.x;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
ADD R2.w, -R0, c[8].x;
ADD R3.xyz, R1.w, -R1;
ADD R2.xyz, R0.w, -R0;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[8].y;
MAD R2.xyz, R1.w, R0.w, -R2;
MUL R4.xyz, R1, R2.w;
MAD R2.xyz, R1, R2.w, R2;
MUL R3.xyz, R1, R0;
ADD R2.w, -R1, c[8].x;
MAD R3.xyz, R3, c[8].y, R4;
MUL R1.xyz, R1, c[8].y;
SGE R1.xyz, R1, R1.w;
MAD R3.xyz, R0, R2.w, R3;
MAD R2.xyz, R0, R2.w, R2;
ADD R2.xyz, R2, -R3;
MAD R2.xyz, R1, R2, R3;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[2], 2D;
ADD R1.x, -R0, c[8];
MUL R1, fragment.color.primary, R1.x;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MAD R2.xyz, -R1.w, R0.w, R3;
MUL R4.xyz, R1.w, R2;
MAX R2.xyz, R1, c[8].y;
ADD R2.w, -R0, c[8].x;
MUL R5.xyz, R1, R2.w;
ADD R3.w, -R1, c[8].x;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R0, R3.w;
MAD R1.xyz, R1, R2.w, R4;
MUL R2.w, R1, R0;
MAD R2.xyz, R0, R3.w, R2;
ADD R2.xyz, R2, -R1;
SGE R3.xyz, R3, R2.w;
MAD R2.xyz, R3, R2, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[2], 2D;
ADD R0.x, -R0, c[8];
MUL R1, fragment.color.primary, R0.x;
MAX R0.x, R1.w, c[8].y;
RCP R0.x, R0.x;
MAD R2.xyz, -R1, R0.x, c[8].x;
MAX R2.xyz, R2, c[8].y;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R2.w, -R1, c[8].x;
MUL R3.xyz, R0, R2.w;
ADD R2.w, -R0, c[8].x;
MAD R4.xyz, R1, R2.w, R3;
MUL R3.xyz, R1.w, R0;
MUL R2.w, R1, R0;
MAD R1.xyz, R1, R0.w, R3;
SGE R1.xyz, R1, R2.w;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R3, R2, R4;
MAD R4.xyz, R1.w, R0.w, R4;
ADD R4.xyz, R4, -R2;
MAD R2.xyz, R1, R4, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R1.x, R0, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R1, c[8];
MUL R1, fragment.color.primary, R1.x;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MAX R2.xyz, R2, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R1.x, R0, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R1, c[8];
MUL R1, fragment.color.primary, R1.x;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MIN R2.xyz, R2, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[2], 2D;
ADD R0.x, -R0, c[8];
MUL R1, fragment.color.primary, R0.x;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
ADD R2.w, -R0, c[8].x;
ADD R3.xyz, R1.w, -R1;
ADD R2.xyz, R0.w, -R0;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[8].y;
MAD R2.xyz, R1.w, R0.w, -R2;
MUL R4.xyz, R1, R2.w;
MUL R3.xyz, R1, R0;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R3.xyz, R3, c[8].y, R4;
MAD R3.xyz, R0, R2.x, R3;
MAD R1.xyz, R0, R2.x, R1;
MUL R2.xyz, R0, c[8].y;
ADD R1.xyz, R1, -R3;
SGE R2.xyz, R2, R0.w;
MAD R2.xyz, R2, R1, R3;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0.x, R0, texture[2], 2D;
ADD R0.z, -R0.x, c[8].x;
ADD R3.xy, fragment.position, c[6];
MUL R1, fragment.color.primary, R0.z;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R2, R1, R0;
MAD R2, -R1, R0, R2;
MUL R3.xy, R3, c[4];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, c[0].xyxy;
TEX R1.x, R0.zwzw, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R1, c[8];
MUL R1, fragment.color.primary, R1.x;
ADD R2.x, -R0.w, c[8];
MUL R2.xyz, R1, R2.x;
MAD R1.xyz, R1, R0, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..9],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, c[0].xyxy;
TEX R1.x, R0.zwzw, texture[2], 2D;
MUL R0.xy, fragment.position, c[7];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R1, c[10];
MUL R1, fragment.color.primary, R1.x;
MUL R2.xyz, R0, c[4].y;
MUL R3.xyz, R1.w, R2;
MUL R2.xyz, R1, c[4].x;
MAD R2.xyz, R0.w, R2, R3;
ADD R3.xy, fragment.position, c[8];
ADD R2.w, -R0, c[10].x;
MUL R1.xyz, R1, c[5].y;
MAD R2.xyz, R2.w, R1, R2;
MUL R1.xyz, R0, c[5].z;
ADD R3.z, -R1.w, c[10].x;
MAD R2.xyz, R3.z, R1, R2;
MUL R1.y, R1.w, R2.w;
MUL R1.x, R1.w, R0.w;
MUL R1.z, R0.w, R3;
DP3 R2.w, R1, c[5];
MUL R3.xy, R3, c[6];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[9];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[4] = { program.local[0..3] };
TEMP R0;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX result.color, R0, texture[0], 2D;
!!ARBfp1.0
PARAM c[7] = { program.local[0..6] };
TEMP R0;
TEMP R1;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R1.xyz, R0, c[3];
RCP R0.z, R1.z;
MUL R1.xy, R1, R0.z;
ADD R0.xy, fragment.position, c[5];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[0], 2D;
DP4 R1.z, R0, c[6];
MUL R1.xy, R1, c[0];
TEX R0, R1, texture[1], 2D;
MUL result.color, R0, R1.z;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MUL R2.xyz, R0, R1;
MAD R2.xyz, -R2, c[5].x, R3;
ADD R2.w, -R1, c[5].y;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5];
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
ADD R0.xyz, R0, R1;
MIN R2.xyz, R2, R3;
ADD R1.x, R0.w, R1.w;
MAD result.color.xyz, -R2, c[5].x, R0;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..4],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MAX R0.w, R1, c[5].z;
RCP R0.w, R0.w;
MUL R3.xyz, R1, R0.w;
MAD R2.xyz, R3, c[6].x, -c[6].y;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MAD R4.xyz, R3, R2, c[6].z;
MAD R2.xyz, R0, c[5].y, -R0.w;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[5].x;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[5].y;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[5].w;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
MUL R2.xyz, R1, R2;
SGE R3.xyz, R3, R0.w;
MAD R2.xyz, R3, R4, R2;
ADD R2.w, -R1, c[5].x;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, R0.w, R1.w;
ADD R0.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R0.y, R2;
MAD result.color.w, -R0, R1, R0.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[5].y;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[5].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MAD R2.xyz, R0, R2.w, R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MUL R0.xyz, R0, c[5].x;
ADD R2.w, -R0, c[5].y;
MAD R3.xyz, R3, c[5].x, R4;
MAD R3.xyz, R1, R2.w, R3;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R1.xyz, R1, -R3;
SGE R0.xyz, R0, R0.w;
MAD result.color.xyz, R0, R1, R3;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
ADD R2.w, -R1, c[5].x;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[5].y;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[5].x;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R1.xyz, R1, R3.w, R2;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.x, R0.w, R1.w;
ADD R2.w, R0, R1;
ADD R1.xyz, R1, -R0;
SGE R2.xyz, R3, R2.x;
MAD result.color.xyz, R2, R1, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MAX R1.x, R0.w, c[5].y;
RCP R1.x, R1.x;
MAD R3.xyz, -R0, R1.x, c[5].x;
MAX R3.xyz, R3, c[5].y;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R2.x, -R0.w, c[5];
MUL R2.xyz, R1, R2.x;
ADD R2.w, -R1, c[5].x;
MAD R2.xyz, R0, R2.w, R2;
MUL R1.xyz, R0.w, R1;
MAD R0.xyz, R0, R1.w, R1;
MUL R2.w, R0, R1;
RCP R3.x, R3.x;
RCP R3.y, R3.y;
RCP R3.z, R3.z;
MAD R3.xyz, R1, R3, R2;
MAD R2.xyz, R0.w, R1.w, R2;
ADD R1.x, R0.w, R1.w;
ADD R2.xyz, R2, -R3;
SGE R0.xyz, R0, R2.w;
MAD result.color.xyz, R0, R2, R3;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MAX R2.xyz, R2, R3;
ADD R2.w, -R1, c[5].x;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MIN R2.xyz, R2, R3;
ADD R2.w, -R1, c[5].x;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
ADD R2.w, -R1, c[5].y;
MUL R2.xyz, R2, c[5].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R2.w;
MUL R0.xyz, R0, R1;
ADD R2.w, -R0, c[5].y;
MAD R0.xyz, R0, c[5].x, R3;
MAD R0.xyz, R1, R2.w, R0;
MAD R2.xyz, R1, R2.w, R2;
MUL R1.xyz, R1, c[5].x;
ADD R2.w, R0, R1;
ADD R2.xyz, R2, -R0;
SGE R1.xyz, R1, R1.w;
MAD result.color.xyz, R1, R2, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[5] = { program.local[0..4] };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
ADD R2, R0, R1;
MAD result.color, -R0, R1, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
ADD R2.x, -R1.w, c[5];
MUL R2.xyz, R0, R2.x;
MAD R0.xyz, R0, R1, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..6],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R1.xy, fragment.position, c[6];
TEX R1, R1, texture[0], 2D;
MUL R2.xyz, R1, c[4].y;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
MUL R3.xyz, R0.w, R2;
MUL R2.xyz, R0, c[4].x;
MAD R2.xyz, R1.w, R2, R3;
ADD R2.w, -R1, c[7].x;
MUL R0.xyz, R0, c[5].y;
MAD R0.xyz, R2.w, R0, R2;
ADD R2.x, -R0.w, c[7];
MUL R1.xyz, R1, c[5].z;
MAD result.color.xyz, R2.x, R1, R0;
MUL R0.x, R0.w, R1.w;
MUL R0.z, R1.w, R2.x;
MUL R0.y, R0.w, R2.w;
DP3 result.color.w, R0, c[5];
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.zw, R0.xyxy, R0.z;
MUL R1.xy, R0.zwzw, c[0];
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 2D;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MUL R2.xyz, R1, R0;
MAD R2.xyz, -R2, c[8].x, R3;
ADD R2.w, -R0, c[8].y;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8].y;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.zw, R0.xyxy, R0.z;
MUL R1.xy, R0.zwzw, c[0];
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 2D;
ADD R2.xyz, R1, R0;
MUL R3.xyz, R1.w, R0;
MUL R1.xyz, R1, R0.w;
MIN R1.xyz, R1, R3;
MAD R2.xyz, -R1, c[8].x, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..7],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MAX R0.w, R1, c[8].z;
RCP R0.w, R0.w;
MUL R3.xyz, R1, R0.w;
MAD R2.xyz, R3, c[9].x, -c[9].y;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[2], 2D;
MAD R4.xyz, R3, R2, c[9].z;
MAD R2.xyz, R0, c[8].y, -R0.w;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[8].x;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[8].y;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[8].w;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
SGE R3.xyz, R3, R0.w;
MUL R2.xyz, R1, R2;
ADD R2.w, -R1, c[8].x;
MAD R2.xyz, R3, R4, R2;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, -R0.w, c[8];
MAD R2.xyz, R1, R0.x, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[2], 2D;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[8].y;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[8].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R1;
ADD R2.w, -R0, c[8].y;
MAD R3.xyz, R3, c[8].x, R4;
MUL R0.xyz, R0, c[8].x;
SGE R0.xyz, R0, R0.w;
MAD R3.xyz, R1, R2.w, R3;
MAD R2.xyz, R1, R2.w, R2;
ADD R2.xyz, R2, -R3;
MAD R2.xyz, R0, R2, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[2], 2D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[8].y;
ADD R2.w, -R1, c[8].x;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[8].x;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.w, R0, R1;
MAD R2.xyz, R1, R3.w, R2;
ADD R2.xyz, R2, -R0;
SGE R3.xyz, R3, R2.w;
MAD R2.xyz, R3, R2, R0;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[2], 2D;
MAX R1.x, R0.w, c[8].y;
RCP R1.x, R1.x;
MAD R2.xyz, -R0, R1.x, c[8].x;
MAX R2.xyz, R2, c[8].y;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R0, c[8].x;
MUL R3.xyz, R1, R2.w;
ADD R2.w, -R1, c[8].x;
MAD R4.xyz, R0, R2.w, R3;
MUL R3.xyz, R0.w, R1;
MUL R2.w, R0, R1;
MAD R0.xyz, R0, R1.w, R3;
SGE R0.xyz, R0, R2.w;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R3, R2, R4;
MAD R4.xyz, R0.w, R1.w, R4;
ADD R4.xyz, R4, -R2;
MAD R2.xyz, R0, R4, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.zw, R0.xyxy, R0.z;
MUL R1.xy, R0.zwzw, c[0];
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 2D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MAX R2.xyz, R2, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.zw, R0.xyxy, R0.z;
MUL R1.xy, R0.zwzw, c[0];
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 2D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MIN R2.xyz, R2, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[2], 2D;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[8].y;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[8].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, -R0.w, c[8].y;
MAD R3.xyz, R3, c[8].x, R4;
MAD R3.xyz, R1, R2.x, R3;
MAD R0.xyz, R1, R2.x, R0;
MUL R2.xyz, R1, c[8].x;
ADD R0.xyz, R0, -R3;
SGE R2.xyz, R2, R1.w;
MAD R2.xyz, R2, R0, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[8] = { program.local[0..7] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, c[0].xyxy;
ADD R3.xy, fragment.position, c[6];
TEX R1, R0.zwzw, texture[2], 2D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R2, R1, R0;
MAD R2, -R1, R0, R2;
MUL R3.xy, R3, c[4];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R1.xyz, R0, c[3];
RCP R0.z, R1.z;
MUL R1.xy, R1, R0.z;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[2], 2D;
ADD R2.x, -R0.w, c[8];
MUL R2.xyz, R1, R2.x;
MAD R1.xyz, R1, R0, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..9],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R1.xyz, R0, c[3];
RCP R0.z, R1.z;
MUL R1.xy, R1, R0.z;
MUL R0.xy, fragment.position, c[7];
TEX R0, R0, texture[0], 2D;
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[2], 2D;
MUL R2.xyz, R0, c[4].y;
MUL R3.xyz, R1.w, R2;
MUL R2.xyz, R1, c[4].x;
MAD R2.xyz, R0.w, R2, R3;
ADD R3.xy, fragment.position, c[8];
ADD R2.w, -R0, c[10].x;
MUL R1.xyz, R1, c[5].y;
MAD R2.xyz, R2.w, R1, R2;
MUL R1.xyz, R0, c[5].z;
ADD R3.z, -R1.w, c[10].x;
MAD R2.xyz, R3.z, R1, R2;
MUL R1.y, R1.w, R2.w;
MUL R1.x, R1.w, R0.w;
MUL R1.z, R0.w, R3;
DP3 R2.w, R1, c[5];
MUL R3.xy, R3, c[6];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[9];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[4] = { program.local[0..3] };
TEMP R0;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX result.color, R0, texture[0], 1D;
!!ARBfp1.0
PARAM c[7] = { program.local[0..6] };
TEMP R0;
TEMP R1;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.zw, R0.xyxy, R0.z;
MUL R0.zw, R0, c[0].xyxy;
ADD R1.x, R0.z, R0.w;
ADD R0.xy, fragment.position, c[5];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[0], 2D;
DP4 R1.y, R0, c[6];
MUL R1.x, R1, c[0].z;
TEX R0, R1, texture[1], 1D;
MUL result.color, R0, R1.y;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MUL R2.xyz, R0, R1;
MAD R2.xyz, -R2, c[5].x, R3;
ADD R2.w, -R1, c[5].y;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5];
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
ADD R0.xyz, R0, R1;
MIN R2.xyz, R2, R3;
ADD R1.x, R0.w, R1.w;
MAD result.color.xyz, -R2, c[5].x, R0;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..4],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
MAX R0.z, R1.w, c[5];
RCP R0.z, R0.z;
MUL R3.xyz, R1, R0.z;
MAD R2.xyz, R3, c[6].x, -c[6].y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MAD R4.xyz, R3, R2, c[6].z;
MAD R2.xyz, R0, c[5].y, -R0.w;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[5].x;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[5].y;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[5].w;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
MUL R2.xyz, R1, R2;
SGE R3.xyz, R3, R0.w;
MAD R2.xyz, R3, R4, R2;
ADD R2.w, -R1, c[5].x;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, R0.w, R1.w;
ADD R0.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R0.y, R2;
MAD result.color.w, -R0, R1, R0.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[5].y;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[5].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MAD R2.xyz, R0, R2.w, R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MUL R0.xyz, R0, c[5].x;
ADD R2.w, -R0, c[5].y;
MAD R3.xyz, R3, c[5].x, R4;
MAD R3.xyz, R1, R2.w, R3;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R1.xyz, R1, -R3;
SGE R0.xyz, R0, R0.w;
MAD result.color.xyz, R0, R1, R3;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
ADD R2.w, -R1, c[5].x;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[5].y;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[5].x;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R1.xyz, R1, R3.w, R2;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.x, R0.w, R1.w;
ADD R2.w, R0, R1;
ADD R1.xyz, R1, -R0;
SGE R2.xyz, R3, R2.x;
MAD result.color.xyz, R2, R1, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MAX R1.x, R0.w, c[5].y;
RCP R1.x, R1.x;
MAD R3.xyz, -R0, R1.x, c[5].x;
MAX R3.xyz, R3, c[5].y;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R2.x, -R0.w, c[5];
MUL R2.xyz, R1, R2.x;
ADD R2.w, -R1, c[5].x;
MAD R2.xyz, R0, R2.w, R2;
MUL R1.xyz, R0.w, R1;
MAD R0.xyz, R0, R1.w, R1;
MUL R2.w, R0, R1;
RCP R3.x, R3.x;
RCP R3.y, R3.y;
RCP R3.z, R3.z;
MAD R3.xyz, R1, R3, R2;
MAD R2.xyz, R0.w, R1.w, R2;
ADD R1.x, R0.w, R1.w;
ADD R2.xyz, R2, -R3;
SGE R0.xyz, R0, R2.w;
MAD result.color.xyz, R0, R2, R3;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MAX R2.xyz, R2, R3;
ADD R2.w, -R1, c[5].x;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MIN R2.xyz, R2, R3;
ADD R2.w, -R1, c[5].x;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
ADD R2.w, -R1, c[5].y;
MUL R2.xyz, R2, c[5].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R2.w;
MUL R0.xyz, R0, R1;
ADD R2.w, -R0, c[5].y;
MAD R0.xyz, R0, c[5].x, R3;
MAD R0.xyz, R1, R2.w, R0;
MAD R2.xyz, R1, R2.w, R2;
MUL R1.xyz, R1, c[5].x;
ADD R2.w, R0, R1;
ADD R2.xyz, R2, -R0;
SGE R1.xyz, R1, R1.w;
MAD result.color.xyz, R1, R2, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[5] = { program.local[0..4] };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
ADD R2, R0, R1;
MAD result.color, -R0, R1, R2;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
ADD R2.x, -R1.w, c[5];
MUL R2.xyz, R0, R2.x;
MAD R0.xyz, R0, R1, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[5].x;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..6],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[6].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R2.xyz, R1, c[4].y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[1], 1D;
MUL R3.xyz, R0.w, R2;
MUL R2.xyz, R0, c[4].x;
MAD R2.xyz, R1.w, R2, R3;
ADD R2.w, -R1, c[7].x;
MUL R0.xyz, R0, c[5].y;
MAD R0.xyz, R2.w, R0, R2;
ADD R2.x, -R0.w, c[7];
MUL R1.xyz, R1, c[5].z;
MAD result.color.xyz, R2.x, R1, R0;
MUL R0.x, R0.w, R1.w;
MUL R0.z, R1.w, R2.x;
MUL R0.y, R0.w, R2.w;
DP3 result.color.w, R0, c[5];
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.z, R0.x, R0.y;
MUL R1.x, R0.z, c[0].z;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MUL R2.xyz, R1, R0;
MAD R2.xyz, -R2, c[8].x, R3;
ADD R2.w, -R0, c[8].y;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8].y;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.z, R0.x, R0.y;
MUL R1.x, R0.z, c[0].z;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
ADD R2.xyz, R1, R0;
MUL R3.xyz, R1.w, R0;
MUL R1.xyz, R1, R0.w;
MIN R1.xyz, R1, R3;
MAD R2.xyz, -R1, c[8].x, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..7],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
MAX R0.z, R1.w, c[8];
RCP R0.z, R0.z;
MUL R3.xyz, R1, R0.z;
MAD R2.xyz, R3, c[9].x, -c[9].y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[2], 1D;
MAD R4.xyz, R3, R2, c[9].z;
MAD R2.xyz, R0, c[8].y, -R0.w;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[8].x;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[8].y;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[8].w;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
SGE R3.xyz, R3, R0.w;
MUL R2.xyz, R1, R2;
ADD R2.w, -R1, c[8].x;
MAD R2.xyz, R3, R4, R2;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, -R0.w, c[8];
MAD R2.xyz, R1, R0.x, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[2], 1D;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[8].y;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[8].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R1;
ADD R2.w, -R0, c[8].y;
MAD R3.xyz, R3, c[8].x, R4;
MUL R0.xyz, R0, c[8].x;
SGE R0.xyz, R0, R0.w;
MAD R3.xyz, R1, R2.w, R3;
MAD R2.xyz, R1, R2.w, R2;
ADD R2.xyz, R2, -R3;
MAD R2.xyz, R0, R2, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[2], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[8].y;
ADD R2.w, -R1, c[8].x;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[8].x;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.w, R0, R1;
MAD R2.xyz, R1, R3.w, R2;
ADD R2.xyz, R2, -R0;
SGE R3.xyz, R3, R2.w;
MAD R2.xyz, R3, R2, R0;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[2], 1D;
MAX R1.x, R0.w, c[8].y;
RCP R1.x, R1.x;
MAD R2.xyz, -R0, R1.x, c[8].x;
MAX R2.xyz, R2, c[8].y;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R0, c[8].x;
MUL R3.xyz, R1, R2.w;
ADD R2.w, -R1, c[8].x;
MAD R4.xyz, R0, R2.w, R3;
MUL R3.xyz, R0.w, R1;
MUL R2.w, R0, R1;
MAD R0.xyz, R0, R1.w, R3;
SGE R0.xyz, R0, R2.w;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R3, R2, R4;
MAD R4.xyz, R0.w, R1.w, R4;
ADD R4.xyz, R4, -R2;
MAD R2.xyz, R0, R4, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.z, R0.x, R0.y;
MUL R1.x, R0.z, c[0].z;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MAX R2.xyz, R2, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.z, R0.x, R0.y;
MUL R1.x, R0.z, c[0].z;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MIN R2.xyz, R2, R3;
ADD R2.w, -R0, c[8].x;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.x, R0, c[0].z;
TEX R0, R0, texture[2], 1D;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[8].y;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[8].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, -R0.w, c[8].y;
MAD R3.xyz, R3, c[8].x, R4;
MAD R3.xyz, R1, R2.x, R3;
MAD R0.xyz, R1, R2.x, R0;
MUL R2.xyz, R1, c[8].x;
ADD R0.xyz, R0, -R3;
SGE R2.xyz, R2, R1.w;
MAD R2.xyz, R2, R0, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[8] = { program.local[0..7] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, R0.x, c[0];
ADD R3.xy, fragment.position, c[6];
TEX R1, R0.z, texture[2], 1D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R2, R1, R0;
MAD R2, -R1, R0, R2;
MUL R3.xy, R3, c[4];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, c[0].xyxy;
ADD R1.x, R0.z, R0.w;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
MUL R1.x, R1, c[0].z;
TEX R1, R1, texture[2], 1D;
ADD R2.x, -R0.w, c[8];
MUL R2.xyz, R1, R2.x;
MAD R1.xyz, R1, R0, R2;
ADD R2.x, -R1.w, c[8];
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..9],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, c[0].xyxy;
ADD R1.x, R0.z, R0.w;
MUL R0.xy, fragment.position, c[7];
TEX R0, R0, texture[0], 2D;
MUL R1.x, R1, c[0].z;
TEX R1, R1, texture[2], 1D;
MUL R2.xyz, R0, c[4].y;
MUL R3.xyz, R1.w, R2;
MUL R2.xyz, R1, c[4].x;
MAD R2.xyz, R0.w, R2, R3;
ADD R3.xy, fragment.position, c[8];
ADD R2.w, -R0, c[10].x;
MUL R1.xyz, R1, c[5].y;
MAD R2.xyz, R2.w, R1, R2;
MUL R1.xyz, R0, c[5].z;
ADD R3.z, -R1.w, c[10].x;
MAD R2.xyz, R3.z, R1, R2;
MUL R1.y, R1.w, R2.w;
MUL R1.x, R1.w, R0.w;
MUL R1.z, R0.w, R3;
DP3 R2.w, R1, c[5];
MUL R3.xy, R3, c[6];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[9];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[7] = { program.local[0..3],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559 } };
TEMP R0;
TEMP R1;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[4].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[5].x, c[5].y;
MAD R1.z, R1, R1.y, -c[5];
MAD R1.z, R1, R1.y, c[5].w;
MAD R1.z, R1, R1.y, -c[6].x;
MAD R1.y, R1.z, R1, c[6];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[4].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[4].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[4];
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX result.color, R0, texture[0], 1D;
!!ARBfp1.0
PARAM c[10] = { program.local[0..6],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559 } };
TEMP R0;
TEMP R1;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[7].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].x, c[8].y;
MAD R1.z, R1, R1.y, -c[8];
MAD R1.z, R1, R1.y, c[8].w;
MAD R1.z, R1, R1.y, -c[9].x;
MAD R1.y, R1.z, R1, c[9];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[7].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R1.x, R0, c[7];
FLR R1.y, R1.x;
ADD R0.zw, fragment.position.xyxy, c[5].xyxy;
MUL R0.xy, R0.zwzw, c[4];
TEX R0, R0, texture[0], 2D;
ADD R1.x, R1, -R1.y;
DP4 R1.y, R0, c[6];
TEX R0, R1, texture[1], 1D;
MUL result.color, R0, R1.y;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[6].x, c[6].y;
MAD R1.z, R1, R1.y, -c[6];
MAD R1.z, R1, R1.y, c[6].w;
MAD R1.z, R1, R1.y, -c[7].x;
MAD R1.y, R1.z, R1, c[7];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[5].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[5].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[5];
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MUL R2.xyz, R0, R1;
MAD R2.xyz, -R2, c[7].z, R3;
ADD R2.w, -R1, c[7];
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[7].w;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[6].x, c[6].y;
MAD R1.z, R1, R1.y, -c[6];
MAD R1.z, R1, R1.y, c[6].w;
MAD R1.z, R1, R1.y, -c[7].x;
MAD R1.y, R1.z, R1, c[7];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[5].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[5].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[5];
FLR R0.y, R0.x;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
ADD R0.xyz, R0, R1;
MIN R2.xyz, R2, R3;
ADD R1.x, R0.w, R1.w;
MAD result.color.xyz, -R2, c[7].z, R0;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[10] = { program.local[0..4],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 1, 2 },
		{ 9.9999997e-006, 4, 16, 12 },
		{ 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.w, R0.x;
ABS R0.z, R0.y;
ADD R0.z, R0, -R0.w;
ADD R1.x, R0.y, c[5];
ABS R0.z, R0;
CMP R0.y, -R0.z, R0, R1.x;
ABS R0.z, -R0.y;
MAX R1.x, R0.w, R0.z;
RCP R1.y, R1.x;
MIN R1.x, R0.w, R0.z;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[5].y, c[5];
MAD R1.z, R1, R1.y, -c[5].w;
MAD R1.z, R1, R1.y, c[6].x;
MAD R1.z, R1, R1.y, -c[6].y;
MAD R1.y, R1.z, R1, c[6].z;
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[6].w;
ADD R0.z, -R0.w, R0;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].x;
CMP R0.x, R0, R0.w, R0.z;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
CMP R0.x, -R0.y, -R0, R0;
MAX R0.z, R1.w, c[8].x;
RCP R2.x, R0.z;
MUL R3.xyz, R1, R2.x;
MAD R4.xyz, R3, c[8].z, -c[8].w;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[7].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MAD R2.xyz, R0, c[7].w, -R0.w;
MAD R4.xyz, R3, R4, c[9].x;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[7].z;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[7].w;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[8].y;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
MUL R2.xyz, R1, R2;
SGE R3.xyz, R3, R0.w;
MAD R2.xyz, R3, R4, R2;
ADD R2.w, -R1, c[7].z;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, R0.w, R1.w;
ADD R0.y, -R0.w, c[7].z;
MAD result.color.xyz, R1, R0.y, R2;
MAD result.color.w, -R0, R1, R0.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5];
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[5].y, c[5];
MAD R1.z, R1, R1.y, -c[5].w;
MAD R1.z, R1, R1.y, c[6].x;
MAD R1.z, R1, R1.y, -c[6].y;
MAD R1.y, R1.z, R1, c[6].z;
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[6].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[7].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[7];
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[7].z;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MAD R2.xyz, R0, R2.w, R2;
ADD R2.w, -R0, c[7];
MUL R0.xyz, R0, c[7].z;
MAD R2.xyz, R1, R2.w, R2;
MAD R3.xyz, R3, c[7].z, R4;
MAD R1.xyz, R1, R2.w, R3;
ADD R2.w, R0, R1;
ADD R2.xyz, R2, -R1;
SGE R0.xyz, R0, R0.w;
MAD result.color.xyz, R0, R2, R1;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.w, R0.x;
ABS R0.z, R0.y;
ADD R0.z, R0, -R0.w;
ADD R1.x, R0.y, c[5];
ABS R0.z, R0;
CMP R0.y, -R0.z, R0, R1.x;
ABS R0.z, -R0.y;
MAX R1.x, R0.w, R0.z;
RCP R1.y, R1.x;
MIN R1.x, R0.w, R0.z;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[5].y, c[5];
MAD R1.z, R1, R1.y, -c[5].w;
MAD R1.z, R1, R1.y, c[6].x;
MAD R1.z, R1, R1.y, -c[6].y;
MAD R1.y, R1.z, R1, c[6].z;
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[6].w;
ADD R0.z, -R0.w, R0;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[7].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
ADD R2.w, -R1, c[7].z;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[7].w;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[7].z;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R1.xyz, R1, R3.w, R2;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.x, R0.w, R1.w;
ADD R2.w, R0, R1;
ADD R1.xyz, R1, -R0;
SGE R2.xyz, R3, R2.x;
MAD result.color.xyz, R2, R1, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5];
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[5].y, c[5];
MAD R1.z, R1, R1.y, -c[5].w;
MAD R1.z, R1, R1.y, c[6].x;
MAD R1.z, R1, R1.y, -c[6].y;
MAD R1.y, R1.z, R1, c[6].z;
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[6].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[7].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MAX R1.x, R0.w, c[7].w;
RCP R1.x, R1.x;
MAD R1.xyz, -R0, R1.x, c[7].z;
MAX R2.xyz, R1, c[7].w;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R0, c[7].z;
MUL R3.xyz, R1, R2.w;
ADD R2.w, -R1, c[7].z;
MAD R3.xyz, R0, R2.w, R3;
MUL R1.xyz, R0.w, R1;
MAD R0.xyz, R0, R1.w, R1;
MUL R2.w, R0, R1;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R1, R2, R3;
MAD R3.xyz, R0.w, R1.w, R3;
ADD R1.x, R0.w, R1.w;
ADD R3.xyz, R3, -R2;
SGE R0.xyz, R0, R2.w;
MAD result.color.xyz, R0, R3, R2;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[6].x, c[6].y;
MAD R1.z, R1, R1.y, -c[6];
MAD R1.z, R1, R1.y, c[6].w;
MAD R1.z, R1, R1.y, -c[7].x;
MAD R1.y, R1.z, R1, c[7];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[5].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[5].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[5];
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MAX R2.xyz, R2, R3;
ADD R2.w, -R1, c[7].z;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[7].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[6].x, c[6].y;
MAD R1.z, R1, R1.y, -c[6];
MAD R1.z, R1, R1.y, c[6].w;
MAD R1.z, R1, R1.y, -c[7].x;
MAD R1.y, R1.z, R1, c[7];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[5].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[5].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[5];
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MIN R2.xyz, R2, R3;
ADD R2.w, -R1, c[7].z;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[7].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5];
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[5].y, c[5];
MAD R1.z, R1, R1.y, -c[5].w;
MAD R1.z, R1, R1.y, c[6].x;
MAD R1.z, R1, R1.y, -c[6].y;
MAD R1.y, R1.z, R1, c[6].z;
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[6].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[7].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R1.xy, fragment.position, c[4];
TEX R1, R1, texture[0], 2D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
ADD R2.w, -R1, c[7];
MUL R2.xyz, R2, c[7].z;
MAD R2.xyz, R0.w, R1.w, -R2;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R2.w;
MUL R0.xyz, R0, R1;
ADD R2.w, -R0, c[7];
MAD R0.xyz, R0, c[7].z, R3;
MAD R0.xyz, R1, R2.w, R0;
MAD R2.xyz, R1, R2.w, R2;
MUL R1.xyz, R1, c[7].z;
ADD R2.w, R0, R1;
ADD R2.xyz, R2, -R0;
SGE R1.xyz, R1, R1.w;
MAD result.color.xyz, R1, R2, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[6].x, c[6].y;
MAD R1.z, R1, R1.y, -c[6];
MAD R1.z, R1, R1.y, c[6].w;
MAD R1.z, R1, R1.y, -c[7].x;
MAD R1.y, R1.z, R1, c[7];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[5].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[5].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[5];
FLR R0.y, R0.x;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
ADD R2, R0, R1;
MAD result.color, -R0, R1, R2;
!!ARBfp1.0
PARAM c[8] = { program.local[0..4],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[5].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[6].x, c[6].y;
MAD R1.z, R1, R1.y, -c[6];
MAD R1.z, R1, R1.y, c[6].w;
MAD R1.z, R1, R1.y, -c[7].x;
MAD R1.y, R1.z, R1, c[7];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[5].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[5].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[4].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[5];
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
ADD R2.x, -R1.w, c[7].z;
MUL R2.xyz, R0, R2.x;
MAD R0.xyz, R0, R1, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[7].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[10] = { program.local[0..6],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[7].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].x, c[8].y;
MAD R1.z, R1, R1.y, -c[8];
MAD R1.z, R1, R1.y, c[8].w;
MAD R1.z, R1, R1.y, -c[9].x;
MAD R1.y, R1.z, R1, c[9];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[7].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[7].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[6].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R2.xyz, R1, c[4].y;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[7];
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[1], 1D;
MUL R3.xyz, R0.w, R2;
MUL R2.xyz, R0, c[4].x;
MAD R2.xyz, R1.w, R2, R3;
ADD R2.w, -R1, c[9].z;
MUL R0.xyz, R0, c[5].y;
MAD R0.xyz, R2.w, R0, R2;
ADD R2.x, -R0.w, c[9].z;
MUL R1.xyz, R1, c[5].z;
MAD result.color.xyz, R2.x, R1, R0;
MUL R0.x, R0.w, R1.w;
MUL R0.z, R1.w, R2.x;
MUL R0.y, R0.w, R2.w;
DP3 result.color.w, R0, c[5];
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[9].x, c[9].y;
MAD R1.z, R1, R1.y, -c[9];
MAD R1.z, R1, R1.y, c[9].w;
MAD R1.z, R1, R1.y, -c[10].x;
MAD R1.y, R1.z, R1, c[10];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[8].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[8].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.z, R0.x, c[8].x;
FLR R0.w, R0.z;
ADD R1.x, R0.z, -R0.w;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MUL R2.xyz, R1, R0;
MAD R2.xyz, -R2, c[10].z, R3;
ADD R2.w, -R0, c[10];
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[10].w;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[9].x, c[9].y;
MAD R1.z, R1, R1.y, -c[9];
MAD R1.z, R1, R1.y, c[9].w;
MAD R1.z, R1, R1.y, -c[10].x;
MAD R1.y, R1.z, R1, c[10];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[8].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[8].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.z, R0.x, c[8].x;
FLR R0.w, R0.z;
ADD R1.x, R0.z, -R0.w;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
ADD R2.xyz, R1, R0;
MUL R3.xyz, R1.w, R0;
MUL R1.xyz, R1, R0.w;
MIN R1.xyz, R1, R3;
MAD R2.xyz, -R1, c[10].z, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[13] = { program.local[0..7],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 1, 2 },
		{ 9.9999997e-006, 4, 16, 12 },
		{ 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.w, R0.x;
ABS R0.z, R0.y;
ADD R0.z, R0, -R0.w;
ADD R1.x, R0.y, c[8];
ABS R0.z, R0;
CMP R0.y, -R0.z, R0, R1.x;
ABS R0.z, -R0.y;
MAX R1.x, R0.w, R0.z;
RCP R1.y, R1.x;
MIN R1.x, R0.w, R0.z;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].y, c[8];
MAD R1.z, R1, R1.y, -c[8].w;
MAD R1.z, R1, R1.y, c[9].x;
MAD R1.z, R1, R1.y, -c[9].y;
MAD R1.y, R1.z, R1, c[9].z;
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[9].w;
ADD R0.z, -R0.w, R0;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[10].x;
CMP R0.x, R0, R0.w, R0.z;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
CMP R0.x, -R0.y, -R0, R0;
MAX R0.z, R1.w, c[11].x;
RCP R2.x, R0.z;
MUL R3.xyz, R1, R2.x;
MAD R4.xyz, R3, c[11].z, -c[11].w;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[10].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[2], 1D;
MAD R2.xyz, R0, c[10].w, -R0.w;
MAD R4.xyz, R3, R4, c[12].x;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[10].z;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[10].w;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[11].y;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
SGE R3.xyz, R3, R0.w;
MUL R2.xyz, R1, R2;
ADD R2.w, -R1, c[10].z;
MAD R2.xyz, R3, R4, R2;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, -R0.w, c[10].z;
MAD R2.xyz, R1, R0.x, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8];
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].y, c[8];
MAD R1.z, R1, R1.y, -c[8].w;
MAD R1.z, R1, R1.y, c[9].x;
MAD R1.z, R1, R1.y, -c[9].y;
MAD R1.y, R1.z, R1, c[9].z;
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[9].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[10].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[10].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[2], 1D;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[10];
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[10].z;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R1;
ADD R2.w, -R0, c[10];
MAD R3.xyz, R3, c[10].z, R4;
MUL R0.xyz, R0, c[10].z;
SGE R0.xyz, R0, R0.w;
MAD R3.xyz, R1, R2.w, R3;
MAD R2.xyz, R1, R2.w, R2;
ADD R2.xyz, R2, -R3;
MAD R2.xyz, R0, R2, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.w, R0.x;
ABS R0.z, R0.y;
ADD R0.z, R0, -R0.w;
ADD R1.x, R0.y, c[8];
ABS R0.z, R0;
CMP R0.y, -R0.z, R0, R1.x;
ABS R0.z, -R0.y;
MAX R1.x, R0.w, R0.z;
RCP R1.y, R1.x;
MIN R1.x, R0.w, R0.z;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].y, c[8];
MAD R1.z, R1, R1.y, -c[8].w;
MAD R1.z, R1, R1.y, c[9].x;
MAD R1.z, R1, R1.y, -c[9].y;
MAD R1.y, R1.z, R1, c[9].z;
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[9].w;
ADD R0.z, -R0.w, R0;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[10].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[10].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[2], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[10].w;
ADD R2.w, -R1, c[10].z;
ADD R3.w, -R0, c[10].z;
MUL R5.xyz, R0, R2.w;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.w, R0, R1;
MAD R2.xyz, R1, R3.w, R2;
ADD R2.xyz, R2, -R0;
SGE R3.xyz, R3, R2.w;
MAD R2.xyz, R3, R2, R0;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8];
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].y, c[8];
MAD R1.z, R1, R1.y, -c[8].w;
MAD R1.z, R1, R1.y, c[9].x;
MAD R1.z, R1, R1.y, -c[9].y;
MAD R1.y, R1.z, R1, c[9].z;
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[9].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[10].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[10].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[2], 1D;
MAX R1.x, R0.w, c[10].w;
RCP R1.x, R1.x;
MAD R1.xyz, -R0, R1.x, c[10].z;
MAX R2.xyz, R1, c[10].w;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R0, c[10].z;
MUL R3.xyz, R1, R2.w;
ADD R2.w, -R1, c[10].z;
MAD R4.xyz, R0, R2.w, R3;
MUL R3.xyz, R0.w, R1;
MUL R2.w, R0, R1;
MAD R0.xyz, R0, R1.w, R3;
SGE R0.xyz, R0, R2.w;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R3, R2, R4;
MAD R4.xyz, R0.w, R1.w, R4;
ADD R4.xyz, R4, -R2;
MAD R2.xyz, R0, R4, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[9].x, c[9].y;
MAD R1.z, R1, R1.y, -c[9];
MAD R1.z, R1, R1.y, c[9].w;
MAD R1.z, R1, R1.y, -c[10].x;
MAD R1.y, R1.z, R1, c[10];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[8].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[8].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.z, R0.x, c[8].x;
FLR R0.w, R0.z;
ADD R1.x, R0.z, -R0.w;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MAX R2.xyz, R2, R3;
ADD R2.w, -R0, c[10].z;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[10].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[9].x, c[9].y;
MAD R1.z, R1, R1.y, -c[9];
MAD R1.z, R1, R1.y, c[9].w;
MAD R1.z, R1, R1.y, -c[10].x;
MAD R1.y, R1.z, R1, c[10];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[8].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[8].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.z, R0.x, c[8].x;
FLR R0.w, R0.z;
ADD R1.x, R0.z, -R0.w;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MIN R2.xyz, R2, R3;
ADD R2.w, -R0, c[10].z;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[10].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.0020000001, -0.01348047, 0.05747731, 0.1212391 },
		{ 0.1956359, 0.33299461, 0.99999559, 1.570796 },
		{ 3.141593, 0.15915494, 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8];
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[8].y, c[8];
MAD R1.z, R1, R1.y, -c[8].w;
MAD R1.z, R1, R1.y, c[9].x;
MAD R1.z, R1, R1.y, -c[9].y;
MAD R1.y, R1.z, R1, c[9].z;
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[9].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[10].x;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[10].y;
FLR R0.y, R0.x;
ADD R0.x, R0, -R0.y;
TEX R0, R0, texture[2], 1D;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R1, c[10];
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[10].z;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, -R0.w, c[10].w;
MAD R3.xyz, R3, c[10].z, R4;
MAD R3.xyz, R1, R2.x, R3;
MAD R0.xyz, R1, R2.x, R0;
MUL R2.xyz, R1, c[10].z;
ADD R0.xyz, R0, -R3;
SGE R2.xyz, R2, R1.w;
MAD R2.xyz, R2, R0, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[6];
MUL R0.xy, R0, c[4];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[7];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ADD R3.xy, fragment.position, c[6];
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[9].x, c[9].y;
MAD R1.z, R1, R1.y, -c[9];
MAD R1.z, R1, R1.y, c[9].w;
MAD R1.z, R1, R1.y, -c[10].x;
MAD R1.y, R1.z, R1, c[10];
MUL R1.x, R1.y, R1;
ADD R0.z, -R0, R0.w;
ADD R1.y, -R1.x, c[8].w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[8].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R0.x, R0, c[8];
FLR R0.y, R0.x;
ADD R0.z, R0.x, -R0.y;
TEX R1, R0.z, texture[2], 1D;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R2, R1, R0;
MAD R2, -R1, R0, R2;
MUL R3.xy, R3, c[4];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..7],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[8].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[9].x, c[9].y;
MAD R1.z, R1, R1.y, -c[9];
MAD R1.z, R1, R1.y, c[9].w;
MAD R1.z, R1, R1.y, -c[10].x;
MAD R1.y, R1.z, R1, c[10];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[8].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[8].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R1.x, R0, c[8];
FLR R1.y, R1.x;
MUL R0.xy, fragment.position, c[5];
TEX R0, R0, texture[0], 2D;
ADD R1.x, R1, -R1.y;
TEX R1, R1, texture[2], 1D;
ADD R2.x, -R0.w, c[10].z;
MUL R2.xyz, R1, R2.x;
MAD R1.xyz, R1, R0, R2;
ADD R2.x, -R1.w, c[10].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[6];
MUL R1.xy, R1, c[4];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[7];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[13] = { program.local[0..9],
		{ 0.15915494, 0.0020000001, 3.141593, 1.570796 },
		{ -0.01348047, 0.05747731, 0.1212391, 0.1956359 },
		{ 0.33299461, 0.99999559, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[2];
MAD R0.xyz, fragment.position.x, c[1], R0;
ADD R0.xyz, R0, c[3];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
ABS R0.z, R0.x;
ABS R0.w, R0.y;
ADD R0.w, R0, -R0.z;
ADD R1.x, R0.y, c[10].y;
ABS R0.w, R0;
CMP R0.y, -R0.w, R0, R1.x;
ABS R0.w, -R0.y;
MAX R1.x, R0.z, R0.w;
RCP R1.y, R1.x;
MIN R1.x, R0.z, R0.w;
MUL R1.x, R1, R1.y;
MUL R1.y, R1.x, R1.x;
MAD R1.z, R1.y, c[11].x, c[11].y;
MAD R1.z, R1, R1.y, -c[11];
MAD R1.z, R1, R1.y, c[11].w;
MAD R1.z, R1, R1.y, -c[12].x;
MAD R1.y, R1.z, R1, c[12];
MUL R1.x, R1.y, R1;
ADD R1.y, -R1.x, c[10].w;
ADD R0.z, -R0, R0.w;
CMP R0.z, -R0, R1.y, R1.x;
ADD R0.w, -R0.z, c[10].z;
CMP R0.x, R0, R0.w, R0.z;
CMP R0.x, -R0.y, -R0, R0;
ADD R0.x, R0, c[0];
MUL R1.x, R0, c[10];
FLR R1.y, R1.x;
MUL R0.xy, fragment.position, c[7];
TEX R0, R0, texture[0], 2D;
ADD R1.x, R1, -R1.y;
TEX R1, R1, texture[2], 1D;
MUL R2.xyz, R0, c[4].y;
MUL R3.xyz, R1.w, R2;
MUL R2.xyz, R1, c[4].x;
MAD R2.xyz, R0.w, R2, R3;
ADD R3.xy, fragment.position, c[8];
ADD R2.w, -R0, c[12].z;
MUL R1.xyz, R1, c[5].y;
MAD R2.xyz, R2.w, R1, R2;
MUL R1.xyz, R0, c[5].z;
ADD R3.z, -R1.w, c[12];
MAD R2.xyz, R3.z, R1, R2;
MUL R1.y, R1.w, R2.w;
MUL R1.x, R1.w, R0.w;
MUL R1.z, R0.w, R3;
DP3 R2.w, R1, c[5];
MUL R3.xy, R3, c[6];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[9];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[6] = { program.local[0..4],
		{ 2, 4 } };
TEMP R0;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
MUL R0.xy, R0, c[0];
ADD R0.z, R0, R0.w;
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.z, c[5];
MUL R0.x, R0, c[5];
MAD R0.z, R0.x, R0.x, -R0.y;
MOV R0.y, c[5].x;
RSQ R0.z, R0.z;
MUL R0.w, R0.y, c[1].x;
RCP R0.y, R0.z;
RCP R0.z, R0.w;
ADD R0.x, -R0, R0.y;
MUL R0.x, R0, R0.z;
TEX result.color, R0, texture[0], 1D;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 4 } };
TEMP R0;
TEMP R1;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.z, c[8];
MUL R0.x, R0, c[8];
MAD R0.y, R0.x, R0.x, -R0;
RSQ R0.y, R0.y;
RCP R0.y, R0.y;
ADD R1.x, -R0, R0.y;
MOV R0.x, c[8];
MUL R0.x, R0, c[1];
RCP R1.y, R0.x;
ADD R0.zw, fragment.position.xyxy, c[6].xyxy;
MUL R0.zw, R0, c[5].xyxy;
TEX R0, R0.zwzw, texture[0], 2D;
MUL R1.x, R1, R1.y;
DP4 R1.y, R0, c[7];
TEX R0, R1, texture[1], 1D;
MUL result.color, R0, R1.y;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[6];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MUL R2.xyz, R0, R1;
MAD R2.xyz, -R2, c[6].x, R3;
ADD R2.w, -R1, c[6].z;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[6].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[6];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
ADD R0.xyz, R0, R1;
MIN R2.xyz, R2, R3;
ADD R1.x, R0.w, R1.w;
MAD result.color.xyz, -R2, c[6].x, R0;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[8] = { program.local[0..5],
		{ 2, 4, 1, 9.9999997e-006 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.z, c[6];
MUL R0.x, R0, c[6];
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MAD R0.y, R0.x, R0.x, -R0;
RSQ R0.y, R0.y;
RCP R0.y, R0.y;
ADD R0.y, -R0.x, R0;
MOV R0.x, c[6];
MUL R0.x, R0, c[1];
MAX R0.z, R1.w, c[6].w;
RCP R0.z, R0.z;
MUL R3.xyz, R1, R0.z;
MAD R4.xyz, R3, c[7].x, -c[7].y;
RCP R0.x, R0.x;
MUL R0.x, R0.y, R0;
TEX R0, R0, texture[1], 1D;
MAD R2.xyz, R0, c[6].x, -R0.w;
MAD R4.xyz, R3, R4, c[7].z;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[6].z;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[6].x;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[6].y;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
MUL R2.xyz, R1, R2;
SGE R3.xyz, R3, R0.w;
MAD R2.xyz, R3, R4, R2;
ADD R2.w, -R1, c[6].z;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, R0.w, R1.w;
ADD R0.y, -R0.w, c[6].z;
MAD result.color.xyz, R1, R0.y, R2;
MAD result.color.w, -R0, R1, R0.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[6].x;
MOV R0.x, c[6];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[6].y;
MAD R0.z, R0.y, R0.y, -R0;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
ADD R2.w, -R1, c[6].z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.x, R0, R0.z;
TEX R0, R0, texture[1], 1D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[6].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MAD R2.xyz, R0, R2.w, R2;
ADD R2.w, -R0, c[6].z;
MUL R0.xyz, R0, c[6].x;
MAD R2.xyz, R1, R2.w, R2;
MAD R3.xyz, R3, c[6].x, R4;
MAD R1.xyz, R1, R2.w, R3;
ADD R2.w, R0, R1;
ADD R2.xyz, R2, -R1;
SGE R0.xyz, R0, R0.w;
MAD result.color.xyz, R0, R2, R1;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[6];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
ADD R2.w, -R1, c[6].z;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[6].w;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[6].z;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R1.xyz, R1, R3.w, R2;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.x, R0.w, R1.w;
ADD R2.w, R0, R1;
ADD R1.xyz, R1, -R0;
SGE R2.xyz, R3, R2.x;
MAD result.color.xyz, R2, R1, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[6].x;
MOV R0.x, c[6];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[6].y;
MAD R0.z, R0.y, R0.y, -R0;
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.x, R0, R0.z;
TEX R0, R0, texture[1], 1D;
MAX R1.x, R0.w, c[6].w;
RCP R1.x, R1.x;
MAD R1.xyz, -R0, R1.x, c[6].z;
MAX R2.xyz, R1, c[6].w;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R0, c[6].z;
MUL R3.xyz, R1, R2.w;
ADD R2.w, -R1, c[6].z;
MAD R3.xyz, R0, R2.w, R3;
MUL R1.xyz, R0.w, R1;
MAD R0.xyz, R0, R1.w, R1;
MUL R2.w, R0, R1;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R1, R2, R3;
MAD R3.xyz, R0.w, R1.w, R3;
ADD R1.x, R0.w, R1.w;
ADD R3.xyz, R3, -R2;
SGE R0.xyz, R0, R2.w;
MAD result.color.xyz, R0, R3, R2;
MAD result.color.w, -R0, R1, R1.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[6];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MAX R2.xyz, R2, R3;
ADD R2.w, -R1, c[6].z;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[6].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[6];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[1], 1D;
MUL R2.xyz, R0, R1.w;
MUL R3.xyz, R0.w, R1;
MIN R2.xyz, R2, R3;
ADD R2.w, -R1, c[6].z;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[6].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[6].x;
MOV R0.x, c[6];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[6].y;
MAD R0.z, R0.y, R0.y, -R0;
MUL R1.xy, fragment.position, c[5];
TEX R1, R1, texture[0], 2D;
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
ADD R2.w, -R1, c[6].z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.x, R0, R0.z;
TEX R0, R0, texture[1], 1D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[6].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R2.w;
MUL R0.xyz, R0, R1;
ADD R2.w, -R0, c[6].z;
MAD R0.xyz, R0, c[6].x, R3;
MAD R0.xyz, R1, R2.w, R0;
MAD R2.xyz, R1, R2.w, R2;
MUL R1.xyz, R1, c[6].x;
ADD R2.w, R0, R1;
ADD R2.xyz, R2, -R0;
SGE R1.xyz, R1, R1.w;
MAD result.color.xyz, R1, R2, R0;
MAD result.color.w, -R0, R1, R2;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[6];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[1], 1D;
ADD R2, R0, R1;
MAD result.color, -R0, R1, R2;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[6].x;
MUL R0.z, R0, c[6].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.x, R0.x;
RCP R0.z, R0.x;
ADD R0.y, -R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[5].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MOV R0.x, c[6];
MUL R0.x, R0, c[1];
RCP R0.x, R0.x;
MUL R0.x, R0.y, R0;
TEX R0, R0, texture[1], 1D;
ADD R2.x, -R1.w, c[6].z;
MUL R2.xyz, R0, R2.x;
MAD R0.xyz, R0, R1, R2;
ADD R2.x, R0.w, R1.w;
ADD R2.y, -R0.w, c[6].z;
MAD result.color.xyz, R1, R2.y, R0;
MAD result.color.w, -R0, R1, R2.x;
!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[8].x;
MUL R0.z, R0, c[8].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.x, R0.x;
RCP R0.z, R0.x;
ADD R0.y, -R0, R0.z;
MUL R0.zw, fragment.position.xyxy, c[7].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R2.xyz, R1, c[5].y;
MOV R0.x, c[8];
MUL R0.x, R0, c[1];
RCP R0.x, R0.x;
MUL R0.x, R0.y, R0;
TEX R0, R0, texture[1], 1D;
MUL R3.xyz, R0.w, R2;
MUL R2.xyz, R0, c[5].x;
MAD R2.xyz, R1.w, R2, R3;
ADD R2.w, -R1, c[8].z;
MUL R0.xyz, R0, c[6].y;
MAD R0.xyz, R2.w, R0, R2;
ADD R2.x, -R0.w, c[8].z;
MUL R1.xyz, R1, c[6].z;
MAD result.color.xyz, R2.x, R1, R0;
MUL R0.x, R0.w, R1.w;
MUL R0.z, R1.w, R2.x;
MUL R0.y, R0.w, R2.w;
DP3 result.color.w, R0, c[6];
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[9].x;
MUL R0.z, R0, c[9].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[9];
MUL R0.x, R0, c[1];
RCP R0.z, R0.z;
ADD R0.z, -R0.y, R0;
RCP R0.w, R0.x;
MUL R1.x, R0.z, R0.w;
MUL R0.xy, fragment.position, c[6];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R2.xyz, R1.w, R0;
MAD R3.xyz, R1, R0.w, R2;
MUL R2.xyz, R1, R0;
MAD R2.xyz, -R2, c[9].x, R3;
ADD R2.w, -R0, c[9].z;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[9].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[7];
MUL R1.xy, R1, c[5];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[8];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[9].x;
MUL R0.z, R0, c[9].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[9];
MUL R0.x, R0, c[1];
RCP R0.z, R0.z;
ADD R0.z, -R0.y, R0;
RCP R0.w, R0.x;
MUL R1.x, R0.z, R0.w;
MUL R0.xy, fragment.position, c[6];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
ADD R2.xyz, R1, R0;
MUL R3.xyz, R1.w, R0;
MUL R1.xyz, R1, R0.w;
MIN R1.xyz, R1, R3;
MAD R2.xyz, -R1, c[9].x, R2;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[7];
MUL R1.xy, R1, c[5];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[8];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[11] = { program.local[0..8],
		{ 2, 4, 1, 9.9999997e-006 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.z, c[9];
MUL R0.x, R0, c[9];
MUL R0.zw, fragment.position.xyxy, c[6].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MAD R0.y, R0.x, R0.x, -R0;
RSQ R0.y, R0.y;
RCP R0.y, R0.y;
ADD R0.y, -R0.x, R0;
MOV R0.x, c[9];
MUL R0.x, R0, c[1];
MAX R0.z, R1.w, c[9].w;
RCP R0.z, R0.z;
MUL R3.xyz, R1, R0.z;
MAD R4.xyz, R3, c[10].x, -c[10].y;
RCP R0.x, R0.x;
MUL R0.x, R0.y, R0;
TEX R0, R0, texture[2], 1D;
MAD R2.xyz, R0, c[9].x, -R0.w;
MAD R4.xyz, R3, R4, c[10].z;
MUL R5.xyz, R1.w, R2;
MUL R6.xyz, R5, R4;
RSQ R2.w, R3.x;
RCP R4.x, R2.w;
RSQ R2.w, R3.y;
RSQ R3.w, R3.z;
RCP R4.y, R2.w;
RCP R4.z, R3.w;
ADD R4.xyz, -R3, R4;
MUL R6.xyz, R3, R6;
MUL R4.xyz, R5, R4;
ADD R3.xyz, -R3, c[9].z;
MAD R2.xyz, R2, R3, R0.w;
MUL R3.xyz, R0, c[9].x;
MAD R5.xyz, R0.w, R1, R6;
MAD R4.xyz, R0.w, R1, R4;
ADD R6.xyz, R4, -R5;
MUL R4.xyz, R1, c[9].y;
SGE R4.xyz, R4, R1.w;
MAD R4.xyz, R4, R6, R5;
MAD R4.xyz, -R1, R2, R4;
SGE R3.xyz, R3, R0.w;
MUL R2.xyz, R1, R2;
ADD R2.w, -R1, c[9].z;
MAD R2.xyz, R3, R4, R2;
MAD R2.xyz, R0, R2.w, R2;
ADD R0.x, -R0.w, c[9].z;
MAD R2.xyz, R1, R0.x, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[7];
MUL R0.xy, R0, c[5];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[8];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[9].x;
MOV R0.x, c[9];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[9].y;
MAD R0.z, R0.y, R0.y, -R0;
MUL R1.xy, fragment.position, c[6];
TEX R1, R1, texture[0], 2D;
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
ADD R2.w, -R1, c[9].z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.x, R0, R0.z;
TEX R0, R0, texture[2], 1D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[9].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MAD R2.xyz, R0, R2.w, R2;
MUL R3.xyz, R0, R1;
ADD R2.w, -R0, c[9].z;
MAD R3.xyz, R3, c[9].x, R4;
MUL R0.xyz, R0, c[9].x;
SGE R0.xyz, R0, R0.w;
MAD R3.xyz, R1, R2.w, R3;
MAD R2.xyz, R1, R2.w, R2;
ADD R2.xyz, R2, -R3;
MAD R2.xyz, R0, R2, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[7];
MUL R0.xy, R0, c[5];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[8];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[9].x;
MUL R0.z, R0, c[9].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[9];
MUL R0.w, R0.x, c[1].x;
RCP R0.z, R0.z;
ADD R0.x, -R0.y, R0.z;
RCP R0.y, R0.w;
MUL R0.zw, fragment.position.xyxy, c[6].xyxy;
TEX R1, R0.zwzw, texture[0], 2D;
MUL R0.x, R0, R0.y;
TEX R0, R0, texture[2], 1D;
MUL R2.xyz, R0.w, R1;
MAD R3.xyz, R0, R1.w, R2;
MAD R2.xyz, -R0.w, R1.w, R3;
MUL R4.xyz, R0.w, R2;
MAX R2.xyz, R0, c[9].w;
ADD R2.w, -R1, c[9].z;
MUL R5.xyz, R0, R2.w;
ADD R3.w, -R0, c[9].z;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R4, R2, R5;
MUL R4.xyz, R1, R3.w;
MAD R0.xyz, R0, R2.w, R4;
MUL R2.w, R0, R1;
MAD R2.xyz, R1, R3.w, R2;
ADD R2.xyz, R2, -R0;
SGE R3.xyz, R3, R2.w;
MAD R2.xyz, R3, R2, R0;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[7];
MUL R0.xy, R0, c[5];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[8];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[9].x;
MOV R0.x, c[9];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[9].y;
MAD R0.z, R0.y, R0.y, -R0;
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.x, R0, R0.z;
TEX R0, R0, texture[2], 1D;
MAX R1.x, R0.w, c[9].w;
RCP R1.x, R1.x;
MAD R1.xyz, -R0, R1.x, c[9].z;
MAX R2.xyz, R1, c[9].w;
MUL R1.xy, fragment.position, c[6];
TEX R1, R1, texture[0], 2D;
ADD R2.w, -R0, c[9].z;
MUL R3.xyz, R1, R2.w;
ADD R2.w, -R1, c[9].z;
MAD R4.xyz, R0, R2.w, R3;
MUL R3.xyz, R0.w, R1;
MUL R2.w, R0, R1;
MAD R0.xyz, R0, R1.w, R3;
SGE R0.xyz, R0, R2.w;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R3, R2, R4;
MAD R4.xyz, R0.w, R1.w, R4;
ADD R4.xyz, R4, -R2;
MAD R2.xyz, R0, R4, R2;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[7];
MUL R0.xy, R0, c[5];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[8];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[9].x;
MUL R0.z, R0, c[9].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[9];
MUL R0.x, R0, c[1];
RCP R0.z, R0.z;
ADD R0.z, -R0.y, R0;
RCP R0.w, R0.x;
MUL R1.x, R0.z, R0.w;
MUL R0.xy, fragment.position, c[6];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MAX R2.xyz, R2, R3;
ADD R2.w, -R0, c[9].z;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[9].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[7];
MUL R1.xy, R1, c[5];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[8];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[9].x;
MUL R0.z, R0, c[9].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.z, R0.x;
MOV R0.x, c[9];
MUL R0.x, R0, c[1];
RCP R0.z, R0.z;
ADD R0.z, -R0.y, R0;
RCP R0.w, R0.x;
MUL R1.x, R0.z, R0.w;
MUL R0.xy, fragment.position, c[6];
TEX R0, R0, texture[0], 2D;
TEX R1, R1, texture[2], 1D;
MUL R3.xyz, R1.w, R0;
MUL R2.xyz, R1, R0.w;
MIN R2.xyz, R2, R3;
ADD R2.w, -R0, c[9].z;
MAD R1.xyz, R1, R2.w, R2;
ADD R2.x, -R1.w, c[9].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[7];
MUL R1.xy, R1, c[5];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[8];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[9].x;
MOV R0.x, c[9];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[9].y;
MAD R0.z, R0.y, R0.y, -R0;
MUL R1.xy, fragment.position, c[6];
TEX R1, R1, texture[0], 2D;
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
ADD R2.w, -R1, c[9].z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.x, R0, R0.z;
TEX R0, R0, texture[2], 1D;
ADD R3.xyz, R0.w, -R0;
ADD R2.xyz, R1.w, -R1;
MUL R2.xyz, R2, R3;
MUL R2.xyz, R2, c[9].x;
MAD R2.xyz, R0.w, R1.w, -R2;
MUL R4.xyz, R0, R2.w;
MUL R3.xyz, R0, R1;
MAD R0.xyz, R0, R2.w, R2;
ADD R2.x, -R0.w, c[9].z;
MAD R3.xyz, R3, c[9].x, R4;
MAD R3.xyz, R1, R2.x, R3;
MAD R0.xyz, R1, R2.x, R0;
MUL R2.xyz, R1, c[9].x;
ADD R0.xyz, R0, -R3;
SGE R2.xyz, R2, R1.w;
MAD R2.xyz, R2, R0, R3;
ADD R0.z, R0.w, R1.w;
MAD R2.w, -R0, R1, R0.z;
ADD R0.xy, fragment.position, c[7];
MUL R0.xy, R0, c[5];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[8];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.y, R0.x, c[9].x;
MOV R0.x, c[9];
MUL R0.z, -R0, c[1].x;
MUL R0.z, R0, c[9].y;
MAD R0.z, R0.y, R0.y, -R0;
ADD R3.xy, fragment.position, c[7];
MUL R0.w, R0.x, c[1].x;
RSQ R0.z, R0.z;
RCP R0.x, R0.z;
RCP R0.z, R0.w;
ADD R0.x, -R0.y, R0;
MUL R0.z, R0.x, R0;
TEX R1, R0.z, texture[2], 1D;
MUL R0.xy, fragment.position, c[6];
TEX R0, R0, texture[0], 2D;
ADD R2, R1, R0;
MAD R2, -R1, R0, R2;
MUL R3.xy, R3, c[5];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[8];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[9].x;
MUL R0.z, R0, c[9].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.x, R0.x;
RCP R0.z, R0.x;
ADD R1.x, -R0.y, R0.z;
MOV R0.x, c[9];
MUL R0.z, R0.x, c[1].x;
RCP R1.y, R0.z;
MUL R0.xy, fragment.position, c[6];
TEX R0, R0, texture[0], 2D;
MUL R1.x, R1, R1.y;
TEX R1, R1, texture[2], 1D;
ADD R2.x, -R0.w, c[9].z;
MUL R2.xyz, R1, R2.x;
MAD R1.xyz, R1, R0, R2;
ADD R2.x, -R1.w, c[9].z;
MAD R2.xyz, R0, R2.x, R1;
ADD R1.z, R1.w, R0.w;
MAD R2.w, -R1, R0, R1.z;
ADD R1.xy, fragment.position, c[7];
MUL R1.xy, R1, c[5];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[8];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[12] = { program.local[0..10],
		{ 2, 4, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xyz, fragment.position.y, c[3];
MAD R0.xyz, fragment.position.x, c[2], R0;
ADD R0.xyz, R0, c[4];
RCP R0.z, R0.z;
MUL R0.xy, R0, R0.z;
MUL R0.zw, R0.xyxy, R0.xyxy;
ADD R0.z, R0, R0.w;
MUL R0.xy, R0, c[0];
ADD R0.x, R0, R0.y;
MUL R0.z, -R0, c[1].x;
MUL R0.y, R0.x, c[11].x;
MUL R0.z, R0, c[11].y;
MAD R0.x, R0.y, R0.y, -R0.z;
RSQ R0.x, R0.x;
RCP R0.z, R0.x;
ADD R1.x, -R0.y, R0.z;
MOV R0.x, c[11];
MUL R0.z, R0.x, c[1].x;
RCP R1.y, R0.z;
MUL R0.xy, fragment.position, c[8];
TEX R0, R0, texture[0], 2D;
MUL R1.x, R1, R1.y;
TEX R1, R1, texture[2], 1D;
MUL R2.xyz, R0, c[5].y;
MUL R3.xyz, R1.w, R2;
MUL R2.xyz, R1, c[5].x;
MAD R2.xyz, R0.w, R2, R3;
ADD R3.xy, fragment.position, c[9];
ADD R2.w, -R0, c[11].z;
MUL R1.xyz, R1, c[6].y;
MAD R2.xyz, R2.w, R1, R2;
MUL R1.xyz, R0, c[6].z;
ADD R3.z, -R1.w, c[11];
MAD R2.xyz, R3.z, R1, R2;
MUL R1.y, R1.w, R2.w;
MUL R1.x, R1.w, R0.w;
MUL R1.z, R0.w, R3;
DP3 R2.w, R1, c[6];
MUL R3.xy, R3, c[7];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[10];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
MOV result.color, fragment.color.primary;
!!ARBfp1.0
PARAM c[3] = { program.local[0..2] };
TEMP R0;
ADD R0.xy, fragment.position, c[1];
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[0], 2D;
DP4 R0.x, R0, c[2];
MUL result.color, fragment.color.primary, R0.x;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
MUL R1.xyz, fragment.color.primary.w, R0;
MAD R2.xyz, fragment.color.primary, R0.w, R1;
MUL R1.xyz, fragment.color.primary, R0;
MAD R1.xyz, -R1, c[1].x, R2;
ADD R1.w, -R0, c[1].y;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, fragment.color.primary, R0;
ADD R2.x, -fragment.color.primary.w, c[1].y;
MAD result.color.xyz, R0, R2.x, R1;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
MUL R2.xyz, fragment.color.primary.w, R0;
MUL R1.xyz, fragment.color.primary, R0.w;
ADD R1.w, fragment.color.primary, R0;
MIN R1.xyz, R1, R2;
ADD R0.xyz, fragment.color.primary, R0;
MAD result.color.xyz, -R1, c[1].x, R0;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[3] = { program.local[0],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
MAX R1.x, R0.w, c[1].z;
RCP R1.x, R1.x;
MUL R2.xyz, R0, R1.x;
MAD R1.xyz, R2, c[2].x, -c[2].y;
MAD R3.xyz, R2, R1, c[2].z;
MAD R1.xyz, fragment.color.primary, c[1].y, -fragment.color.primary.w;
MUL R4.xyz, R0.w, R1;
MUL R5.xyz, R4, R3;
RSQ R1.w, R2.x;
RCP R3.x, R1.w;
RSQ R2.w, R2.z;
RSQ R1.w, R2.y;
MUL R5.xyz, R2, R5;
RCP R3.z, R2.w;
RCP R3.y, R1.w;
ADD R3.xyz, -R2, R3;
MUL R3.xyz, R4, R3;
ADD R2.xyz, -R2, c[1].x;
MAD R1.xyz, R1, R2, fragment.color.primary.w;
MUL R2.xyz, fragment.color.primary, c[1].y;
MAD R4.xyz, fragment.color.primary.w, R0, R5;
MAD R3.xyz, fragment.color.primary.w, R0, R3;
ADD R5.xyz, R3, -R4;
MUL R3.xyz, R0, c[1].w;
SGE R3.xyz, R3, R0.w;
MAD R3.xyz, R3, R5, R4;
MAD R3.xyz, -R0, R1, R3;
MUL R1.xyz, R0, R1;
SGE R2.xyz, R2, fragment.color.primary.w;
MAD R2.xyz, R2, R3, R1;
ADD R1.x, -R0.w, c[1];
MAD R2.xyz, fragment.color.primary, R1.x, R2;
ADD R1.x, fragment.color.primary.w, R0.w;
ADD R1.y, -fragment.color.primary.w, c[1].x;
MAD result.color.xyz, R0, R1.y, R2;
MAD result.color.w, -fragment.color.primary, R0, R1.x;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
ADD R1.w, -R0, c[1].y;
ADD R2.xyz, fragment.color.primary.w, -fragment.color.primary;
ADD R1.xyz, R0.w, -R0;
MUL R1.xyz, R1, R2;
MUL R1.xyz, R1, c[1].x;
MAD R1.xyz, fragment.color.primary.w, R0.w, -R1;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
MUL R3.xyz, fragment.color.primary, R1.w;
MUL R2.xyz, fragment.color.primary, R0;
ADD R1.w, -fragment.color.primary, c[1].y;
MAD R2.xyz, R2, c[1].x, R3;
MAD R2.xyz, R0, R1.w, R2;
MAD R0.xyz, R0, R1.w, R1;
ADD R1.xyz, R0, -R2;
MUL R0.xyz, fragment.color.primary, c[1].x;
ADD R1.w, fragment.color.primary, R0;
SGE R0.xyz, R0, fragment.color.primary.w;
MAD result.color.xyz, R0, R1, R2;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
MUL R1.xyz, fragment.color.primary.w, R0;
MAD R2.xyz, fragment.color.primary, R0.w, R1;
MAD R1.xyz, -fragment.color.primary.w, R0.w, R2;
MUL R3.xyz, fragment.color.primary.w, R1;
MAX R1.xyz, fragment.color.primary, c[1].y;
ADD R1.w, -R0, c[1].x;
MUL R4.xyz, fragment.color.primary, R1.w;
ADD R2.w, -fragment.color.primary, c[1].x;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.z, R1.z;
MAD R1.xyz, R3, R1, R4;
MUL R3.xyz, R0, R2.w;
MAD R0.xyz, R0, R2.w, R1;
MAD R1.xyz, fragment.color.primary, R1.w, R3;
MUL R1.w, fragment.color.primary, R0;
SGE R2.xyz, R2, R1.w;
ADD R0.xyz, R0, -R1;
ADD R1.w, fragment.color.primary, R0;
MAD result.color.xyz, R2, R0, R1;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
MAX R1.y, fragment.color.primary.w, c[1];
RCP R2.x, R1.y;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -fragment.color.primary.w, c[1];
MUL R1.xyz, R0, R1.x;
ADD R1.w, -R0, c[1].x;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
MAD R2.xyz, -fragment.color.primary, R2.x, c[1].x;
MAX R2.xyz, R2, c[1].y;
MUL R0.xyz, fragment.color.primary.w, R0;
MUL R1.w, fragment.color.primary, R0;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.z, R2.z;
MAD R2.xyz, R0, R2, R1;
MAD R1.xyz, fragment.color.primary.w, R0.w, R1;
MAD R0.xyz, fragment.color.primary, R0.w, R0;
SGE R0.xyz, R0, R1.w;
ADD R1.xyz, R1, -R2;
ADD R1.w, fragment.color.primary, R0;
MAD result.color.xyz, R0, R1, R2;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
MUL R2.xyz, fragment.color.primary.w, R0;
MUL R1.xyz, fragment.color.primary, R0.w;
MAX R1.xyz, R1, R2;
ADD R1.w, -R0, c[1].x;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, fragment.color.primary, R0;
ADD R2.x, -fragment.color.primary.w, c[1];
MAD result.color.xyz, R0, R2.x, R1;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
MUL R2.xyz, fragment.color.primary.w, R0;
MUL R1.xyz, fragment.color.primary, R0.w;
MIN R1.xyz, R1, R2;
ADD R1.w, -R0, c[1].x;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, fragment.color.primary, R0;
ADD R2.x, -fragment.color.primary.w, c[1];
MAD result.color.xyz, R0, R2.x, R1;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
ADD R1.w, -R0, c[1].y;
ADD R2.xyz, fragment.color.primary.w, -fragment.color.primary;
ADD R1.xyz, R0.w, -R0;
MUL R1.xyz, R1, R2;
MUL R1.xyz, R1, c[1].x;
MAD R1.xyz, fragment.color.primary.w, R0.w, -R1;
MUL R3.xyz, fragment.color.primary, R1.w;
MUL R2.xyz, fragment.color.primary, R0;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, -fragment.color.primary, c[1].y;
MAD R2.xyz, R2, c[1].x, R3;
MAD R2.xyz, R0, R1.w, R2;
MAD R1.xyz, R0, R1.w, R1;
MUL R0.xyz, R0, c[1].x;
ADD R1.w, fragment.color.primary, R0;
ADD R1.xyz, R1, -R2;
SGE R0.xyz, R0, R0.w;
MAD result.color.xyz, R0, R1, R2;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[1] = { program.local[0] };
TEMP R0;
TEMP R1;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
ADD R1, fragment.color.primary, R0;
MAD result.color, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[0];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R0.w, c[1];
MUL R1.xyz, fragment.color.primary, R1.x;
ADD R1.w, fragment.color.primary, R0;
MAD R1.xyz, fragment.color.primary, R0, R1;
ADD R2.x, -fragment.color.primary.w, c[1];
MAD result.color.xyz, R0, R2.x, R1;
MAD result.color.w, -fragment.color.primary, R0, R1;
!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[2];
TEX R0, R0, texture[0], 2D;
MUL R1.xyz, R0, c[0].y;
MUL R2.xyz, fragment.color.primary.w, R1;
MUL R1.xyz, fragment.color.primary, c[0].x;
MAD R2.xyz, R0.w, R1, R2;
MUL R0.xyz, R0, c[1].z;
ADD R1.w, -R0, c[3].x;
MUL R1.xyz, fragment.color.primary, c[1].y;
MAD R1.xyz, R1.w, R1, R2;
ADD R2.x, -fragment.color.primary.w, c[3];
MAD result.color.xyz, R2.x, R0, R1;
MUL R0.x, fragment.color.primary.w, R0.w;
MUL R0.z, R0.w, R2.x;
MUL R0.y, fragment.color.primary.w, R1.w;
DP3 result.color.w, R0, c[1];
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
MUL R1.xyz, fragment.color.primary.w, R0;
MAD R2.xyz, fragment.color.primary, R0.w, R1;
MUL R1.xyz, fragment.color.primary, R0;
MAD R1.xyz, -R1, c[4].x, R2;
ADD R1.w, -R0, c[4].y;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, -fragment.color.primary, c[4].y;
MAD R2.xyz, R0, R1.w, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
ADD R1.xyz, fragment.color.primary, R0;
MUL R3.xyz, fragment.color.primary.w, R0;
MUL R2.xyz, fragment.color.primary, R0.w;
MIN R2.xyz, R2, R3;
MAD R2.xyz, -R2, c[4].x, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[6] = { program.local[0..3],
		{ 1, 2, 9.9999997e-006, 4 },
		{ 16, 12, 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
MAX R1.x, R0.w, c[4].z;
RCP R1.x, R1.x;
MUL R2.xyz, R0, R1.x;
MAD R1.xyz, R2, c[5].x, -c[5].y;
MAD R3.xyz, R2, R1, c[5].z;
MAD R1.xyz, fragment.color.primary, c[4].y, -fragment.color.primary.w;
MUL R4.xyz, R0.w, R1;
MUL R5.xyz, R4, R3;
RSQ R1.w, R2.x;
RSQ R2.w, R2.z;
RCP R3.x, R1.w;
RSQ R1.w, R2.y;
MUL R5.xyz, R2, R5;
RCP R3.z, R2.w;
RCP R3.y, R1.w;
ADD R3.xyz, -R2, R3;
MUL R3.xyz, R4, R3;
ADD R2.xyz, -R2, c[4].x;
MAD R1.xyz, R1, R2, fragment.color.primary.w;
MUL R2.xyz, fragment.color.primary, c[4].y;
MAD R4.xyz, fragment.color.primary.w, R0, R5;
MAD R3.xyz, fragment.color.primary.w, R0, R3;
ADD R5.xyz, R3, -R4;
MUL R3.xyz, R0, c[4].w;
SGE R3.xyz, R3, R0.w;
MAD R3.xyz, R3, R5, R4;
MAD R3.xyz, -R0, R1, R3;
MUL R1.xyz, R0, R1;
SGE R2.xyz, R2, fragment.color.primary.w;
MAD R2.xyz, R2, R3, R1;
ADD R1.x, -R0.w, c[4];
MAD R2.xyz, fragment.color.primary, R1.x, R2;
ADD R1.x, -fragment.color.primary.w, c[4];
MAD R2.xyz, R0, R1.x, R2;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[1];
TEX R1, R0, texture[0], 2D;
ADD R0.w, -R1, c[4].y;
MUL R3.xyz, fragment.color.primary, R0.w;
ADD R2.xyz, fragment.color.primary.w, -fragment.color.primary;
ADD R0.xyz, R1.w, -R1;
MUL R0.xyz, R0, R2;
MUL R0.xyz, R0, c[4].x;
MAD R0.xyz, fragment.color.primary.w, R1.w, -R0;
MAD R0.xyz, fragment.color.primary, R0.w, R0;
MUL R2.xyz, fragment.color.primary, R1;
MAD R2.xyz, R2, c[4].x, R3;
ADD R0.w, -fragment.color.primary, c[4].y;
MAD R3.xyz, R1, R0.w, R0;
MAD R2.xyz, R1, R0.w, R2;
MUL R0.xyz, fragment.color.primary, c[4].x;
SGE R0.xyz, R0, fragment.color.primary.w;
ADD R3.xyz, R3, -R2;
MAD R2.xyz, R0, R3, R2;
ADD R0.z, fragment.color.primary.w, R1.w;
MAD R2.w, -fragment.color.primary, R1, R0.z;
ADD R0.xy, fragment.position, c[2];
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[3];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 1, 9.9999997e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
ADD R1.w, -R0, c[4].x;
MUL R1.xyz, fragment.color.primary.w, R0;
MAD R2.xyz, fragment.color.primary, R0.w, R1;
MAD R1.xyz, -fragment.color.primary.w, R0.w, R2;
MUL R3.xyz, fragment.color.primary.w, R1;
MAX R1.xyz, fragment.color.primary, c[4].y;
ADD R2.w, -fragment.color.primary, c[4].x;
MUL R4.xyz, fragment.color.primary, R1.w;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.z, R1.z;
MAD R3.xyz, R3, R1, R4;
MUL R1.xyz, R0, R2.w;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
MAD R3.xyz, R0, R2.w, R3;
MUL R1.w, fragment.color.primary, R0;
ADD R3.xyz, R3, -R1;
SGE R2.xyz, R2, R1.w;
MAD R2.xyz, R2, R3, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 1, 1e-006 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -fragment.color.primary.w, c[4];
MAX R1.y, fragment.color.primary.w, c[4];
MUL R2.xyz, R0, R1.x;
ADD R1.w, -R0, c[4].x;
MAD R3.xyz, fragment.color.primary, R1.w, R2;
RCP R1.y, R1.y;
MAD R1.xyz, -fragment.color.primary, R1.y, c[4].x;
MAX R1.xyz, R1, c[4].y;
MUL R2.xyz, fragment.color.primary.w, R0;
MUL R1.w, fragment.color.primary, R0;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.z, R1.z;
MAD R1.xyz, R2, R1, R3;
MAD R3.xyz, fragment.color.primary.w, R0.w, R3;
MAD R2.xyz, fragment.color.primary, R0.w, R2;
ADD R3.xyz, R3, -R1;
SGE R2.xyz, R2, R1.w;
MAD R2.xyz, R2, R3, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
MUL R2.xyz, fragment.color.primary.w, R0;
MUL R1.xyz, fragment.color.primary, R0.w;
MAX R1.xyz, R1, R2;
ADD R1.w, -R0, c[4].x;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, -fragment.color.primary, c[4].x;
MAD R2.xyz, R0, R1.w, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
MUL R2.xyz, fragment.color.primary.w, R0;
MUL R1.xyz, fragment.color.primary, R0.w;
MIN R1.xyz, R1, R2;
ADD R1.w, -R0, c[4].x;
MAD R1.xyz, fragment.color.primary, R1.w, R1;
ADD R1.w, -fragment.color.primary, c[4].x;
MAD R2.xyz, R0, R1.w, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 2, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[1];
TEX R1, R0, texture[0], 2D;
ADD R0.w, -R1, c[4].y;
MUL R3.xyz, fragment.color.primary, R0.w;
ADD R2.xyz, fragment.color.primary.w, -fragment.color.primary;
ADD R0.xyz, R1.w, -R1;
MUL R0.xyz, R0, R2;
MUL R0.xyz, R0, c[4].x;
MAD R0.xyz, fragment.color.primary.w, R1.w, -R0;
MAD R0.xyz, fragment.color.primary, R0.w, R0;
MUL R2.xyz, fragment.color.primary, R1;
MAD R2.xyz, R2, c[4].x, R3;
ADD R0.w, -fragment.color.primary, c[4].y;
MAD R3.xyz, R1, R0.w, R0;
MAD R2.xyz, R1, R0.w, R2;
MUL R0.xyz, R1, c[4].x;
SGE R0.xyz, R0, R1.w;
ADD R3.xyz, R3, -R2;
MAD R2.xyz, R0, R3, R2;
ADD R0.z, fragment.color.primary.w, R1.w;
MAD R2.w, -fragment.color.primary, R1, R0.z;
ADD R0.xy, fragment.position, c[2];
MUL R0.xy, R0, c[0];
TEX R0, R0, texture[1], 2D;
ADD R2, R2, -R1;
DP4 R0.x, R0, c[3];
MAD result.color, R0.x, R2, R1;
!!ARBfp1.0
PARAM c[4] = { program.local[0..3] };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
ADD R1.xy, fragment.position, c[2];
ADD R2, fragment.color.primary, R0;
MUL R1.xy, R1, c[0];
MAD R2, -fragment.color.primary, R0, R2;
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
MUL R0.xy, fragment.position, c[1];
TEX R0, R0, texture[0], 2D;
ADD R1.x, -R0.w, c[4];
MUL R1.xyz, fragment.color.primary, R1.x;
MAD R1.xyz, fragment.color.primary, R0, R1;
ADD R1.w, -fragment.color.primary, c[4].x;
MAD R2.xyz, R0, R1.w, R1;
ADD R1.z, fragment.color.primary.w, R0.w;
MAD R2.w, -fragment.color.primary, R0, R1.z;
ADD R1.xy, fragment.position, c[2];
MUL R1.xy, R1, c[0];
TEX R1, R1, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[3];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[7] = { program.local[0..5],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R0.xy, fragment.position, c[3];
TEX R0, R0, texture[0], 2D;
MUL R1.xyz, R0, c[0].y;
MUL R2.xyz, fragment.color.primary.w, R1;
MUL R1.xyz, fragment.color.primary, c[0].x;
MAD R2.xyz, R0.w, R1, R2;
ADD R3.xy, fragment.position, c[4];
ADD R1.w, -R0, c[6].x;
MUL R1.xyz, fragment.color.primary, c[1].y;
MAD R2.xyz, R1.w, R1, R2;
MUL R1.xyz, R0, c[1].z;
ADD R2.w, -fragment.color.primary, c[6].x;
MAD R2.xyz, R2.w, R1, R2;
MUL R1.z, R0.w, R2.w;
MUL R1.x, fragment.color.primary.w, R0.w;
MUL R1.y, fragment.color.primary.w, R1.w;
DP3 R2.w, R1, c[1];
MUL R3.xy, R3, c[2];
TEX R1, R3, texture[1], 2D;
ADD R2, R2, -R0;
DP4 R1.x, R1, c[5];
MAD result.color, R1.x, R2, R0;
!!ARBfp1.0
PARAM c[6] = { program.local[0..3],
		{ -2, 1, -0.5, 2 },
		{ 3 } };
TEMP R0;
TEMP R1;
TEMP R2;
ADD R0.xy, fragment.position, c[3];
MUL R1.xyz, R0.y, c[1];
MAD R0.xyz, R0.x, c[0], R1;
ADD R0.xyz, R0, c[2];
RCP R2.z, R0.z;
MUL R0.zw, R0.xyxy, R2.z;
MUL R2.xy, R0.zwzw, fragment.texcoord[0];
MOV R1.xy, c[0];
MOV R1.zw, c[1].xyxy;
MOV R0.x, c[0].z;
MOV R0.y, c[1].z;
MAD R0, R0.zzww, -R0.xyxy, R1.xzyw;
MUL R1.xy, R2, fragment.texcoord[0];
MUL R0, R2.z, R0;
MUL R1.xy, R1, c[4].x;
MUL R1.zw, R1.xyxy, R0.xyxz;
MUL R0.zw, R1.xyxy, R0.xyyw;
ADD R0.y, R0.z, R0.w;
ADD R0.x, R1.z, R1.w;
MUL R0.xy, R0, R0;
ADD R0.x, R0, R0.y;
MUL R0.zw, R2.xyxy, R2.xyxy;
ADD R0.z, R0, R0.w;
ADD R0.y, -R0.z, c[4];
RSQ R0.x, R0.x;
MAD_SAT R0.x, R0, R0.y, -c[4].z;
MUL R0.y, -R0.x, c[4].w;
ADD R0.y, R0, c[5].x;
MUL R0.x, R0, R0;
MUL result.color, R0.x, R0.y;
!!ARBfp1.0
PARAM c[1] = { { 0.5, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R3.z, fragment.position.x, c[0].x;
ADD R0.y, fragment.position, -c[0].x;
MAX R4.x, fragment.texcoord[0].y, R0.y;
ADD R0.x, fragment.position.y, c[0];
MIN R3.w, R0.x, fragment.texcoord[0].x;
ADD R2.z, fragment.position.x, -c[0].x;
MOV R2.w, R3.z;
MOV R0.yw, R4.x;
MOV R0.xz, R3.w;
MAD R0, fragment.texcoord[1].xxzz, R0, fragment.texcoord[1].yyww;
MAD R0.zw, fragment.position.x, c[0].y, -R0;
MOV R2.x, R0;
MOV R2.y, R0.z;
MOV R1.w, R0;
MOV R1.z, R0.y;
MIN R1.xy, R2, R1.zwzw;
SGE R0.xy, R1.zwzw, R2;
ADD R0.zw, -fragment.texcoord[0], -fragment.texcoord[0];
MAD R3.xy, R0, R0.zwzw, fragment.texcoord[0].zwzw;
ADD R0, -R1.xxyy, R2.zwzw;
MAD R0, R0, R3.xxyy, R4.x;
ADD R3.xy, R0.ywzw, R0.xzzw;
ADD R4.zw, R3.w, -R0.xyxz;
ADD R0.zw, -R4.x, R0.xyyw;
ADD R0.xy, R3.z, -R1;
MAX R1.zw, R2.xyxy, R1;
MUL R0.xy, R0, R0.zwzw;
MAD R3.xy, -R3, c[0].x, R3.w;
ADD R2.w, R3.z, -R2.z;
MUL R2.xy, R3, R2.w;
ADD R2.w, R3, -R4.x;
ADD R3.xy, -R2.z, R1.zwzw;
MUL R3.xy, R4.zwzw, R3;
ADD R4.zw, R1.xyxy, R1;
MAD R0.zw, R4, c[0].x, -R2.z;
MAD R0.xy, -R0, c[0].x, R2.w;
MAD R4.zw, R0, R2.w, -R0.xyxy;
SGE R0.zw, R3.z, R1;
MAD R0.xy, R0.zwzw, R4.zwzw, R0;
MAD R3.xy, R3, c[0].x, -R2;
MAD R0.zw, R0, R3.xyxy, R2.xyxy;
ADD R2.xy, R0.zwzw, -R0;
SGE R0.zw, R2.z, R1.xyxy;
MAD R0.xy, R0.zwzw, R2, R0;
SGE R0.zw, R1, R2.z;
ADD R0.xy, R0, -R2.w;
SGE R1.xy, R3.z, R1;
MAD R0.xy, R1, R0, R2.w;
MAD R0.x, -R0, R0.z, R2.w;
SGE R0.z, R3.w, R4.x;
MAD R0.x, -R0.y, R0.w, R0;
MUL result.color, R0.x, R0.z;
QGLOffscreen
context
cleanupGLContextRefs(const QGLContext*)
QGLProgramCache
context
cleanupPrograms(const QGLContext*)
QGLPrivateCleanup
context
cleanupGLContextRefs(const QGLContext*)
QGLGradientCache
context
cleanupGLContextRefs(const QGLContext*)
QGLGlyphCache
cleanupContext(const QGLContext*)
fontEngineDestroyed(QObject*)
widgetDestroyed(QObject*)
2aboutToDestroyContext(const QGLContext*)
1cleanupGLContextRefs(const QGLContext*)
QOpenGLPaintEnginePrivate: Unhandled fragment variable:
1cleanupPrograms(const QGLContext*)
1fontEngineDestroyed(QObject*)
1cleanupContext(const QGLContext*)
2destroyed(QObject*)
1widgetDestroyed(QObject*)
QGLOffscreen: Invalid offscreen fbo (size %dx%d)
QOpenGLPaintEngine: paint device doesn't have a valid GL context.
#define lowp
#define mediump
#define highp
QGLShader: could not create shader
QGLShader::compile(%s)[%s]: %s
QGLShader::compile(%s): %s
Geometry
Fragment
GL_EXT_geometry_shader4
#extension
#version
QGLShader: Unable to open file
QGLShaderProgram: shader programs are not supported
QGLShaderProgram: could not create shader program
): shader program is not linked
QGLShaderProgram::attributeLocation(
not supported
QGLShaderProgram::setAttributeValue: rows
QGLShaderProgram::uniformLocation(
QGLShaderProgram::setUniformValue: size
2destroyed()
1shaderDestroyed()
QGLShaderProgram::addShader: Program and shader are not associated with same context.
QGLShader::link[
QGLShader::link:
uniform lowp vec4 shadowColor;lowp vec4 customShader(lowp sampler2D src, highp vec2 srcCoords){    return shadowColor * texture2D(src, srcCoords.yx).a;}
uniform lowp vec4 colorizeColor;uniform lowp float colorizeStrength;lowp vec4 customShader(lowp sampler2D src, highp vec2 srcCoords){        lowp vec4 srcPixel = texture2D(src, srcCoords);        lowp float gray = dot(srcPixel.rgb, vec3(0.212671, 0.715160, 0.072169));        lowp vec3 colorized = 1.0-((1.0-gray)*(1.0-colorizeColor.rgb));        return vec4(mix(srcPixel.rgb, colorized * srcPixel.a, colorizeStrength), srcPixel.a);}
colorizeStrength
colorizeColor
; i++) {
    sum += matrix[i] * texture2D(src,srcCoords+inv_texture_size*offset[i]);
  return sum;
  int i = 0;
  lowp vec4 sum = vec4(0.0);
  for (i = 0; i < 
lowp vec4 customShader(lowp sampler2D src, highp vec2 srcCoords) {
uniform highp vec2 offset[
uniform highp vec2 inv_texture_size;
uniform mediump float matrix[
shadowColor
inv_texture_size
    lowp vec4 customShader(lowp sampler2D imageTexture, highp vec2 textureCoords) {         return texture2D(imageTexture, textureCoords);     }
imageTexture
QT_GL_SWAPBUFFER_PRESERVE
hijackWindow() context created for
1deleted(QObject*)
QGLWindowSurface: Flushing to native child widget, may lead to significant performance loss
QGLWindowSurface: Using plain widget as window surface
QGLWindowSurface: Failed to create valid pixelbuffer, falling back
Created Window Surface Pixelbuffer, Sample buffers:
QGLWindowSurface: Failed to create valid FBO, falling back
with samples
Created Window Surface FBO
QGLPixmapData::metric(): Invalid metric
ffffff9@"
, falling back to raster paint engine
Failed to create pixmap texture buffer of size 
    varying   highp   vec2      textureCoords;
    uniform           sampler2D maskTexture;
    lowp vec4 applyMask(lowp vec4 src) 
        lowp vec4 mask = texture2D(maskTexture, textureCoords); 
        return src * mask; 
    varying   highp   vec2      textureCoords;
    uniform           sampler2D maskTexture;
    lowp vec4 applyMask(lowp vec4 src) 
        lowp vec4 mask = texture2D(maskTexture, textureCoords); 
        return src.a * mask; 
    varying   highp   vec2      textureCoords;
    uniform           sampler2D maskTexture;
    lowp vec4 applyMask(lowp vec4 src) 
        lowp vec4 mask = texture2D(maskTexture, textureCoords); 
        return src * mask.a; 
    lowp vec4 srcPixel(); 
    void main() 
        gl_FragColor = srcPixel(); 
    uniform   lowp    float     globalOpacity; 
    lowp vec4 srcPixel(); 
    void main() 
        gl_FragColor = srcPixel()*globalOpacity; 
    lowp vec4 srcPixel(); 
    lowp vec4 compose(lowp vec4); 
    void main() 
        gl_FragColor = compose(srcPixel()); 
    uniform   lowp    float     globalOpacity; 
    lowp vec4 srcPixel(); 
    lowp vec4 compose(lowp vec4); 
    void main() 
        gl_FragColor = compose(srcPixel()*globalOpacity); 
    lowp vec4 srcPixel(); 
    lowp vec4 applyMask(lowp vec4); 
    void main() 
        gl_FragColor = applyMask(srcPixel()); 
    uniform   lowp    float     globalOpacity; 
    lowp vec4 srcPixel(); 
    lowp vec4 applyMask(lowp vec4); 
    void main() 
        gl_FragColor = applyMask(srcPixel()*globalOpacity); 
    lowp vec4 srcPixel(); 
    lowp vec4 applyMask(lowp vec4); 
    lowp vec4 compose(lowp vec4); 
    void main() 
        gl_FragColor = applyMask(compose(srcPixel())); 
    uniform   lowp    float     globalOpacity; 
    lowp vec4 srcPixel(); 
    lowp vec4 applyMask(lowp vec4); 
    lowp vec4 compose(lowp vec4); 
    void main() 
        gl_FragColor = applyMask(compose(srcPixel()*globalOpacity))); 
    varying   lowp    float     opacity; 
    lowp vec4 srcPixel(); 
    void main() 
        gl_FragColor = srcPixel() * opacity; 
    lowp vec4 srcPixel() 
        return vec4(0.98, 0.06, 0.75, 1.0); 
    varying   highp   vec2      textureCoords; 
    uniform          sampler2D imageTexture; 
    lowp vec4 srcPixel() 
        lowp vec4 sample = texture2D(imageTexture, textureCoords); 
        sample.rgb = sample.rgb * sample.a; 
        return sample; 
    varying   highp   vec2      textureCoords; 
    uniform   lowp    vec4      patternColor; 
    uniform           sampler2D imageTexture; 
    lowp vec4 srcPixel() 
        return patternColor * (1.0 - texture2D(imageTexture, textureCoords).r); 
    varying   highp   vec2      textureCoords; 
    uniform           sampler2D imageTexture; 
    lowp vec4 srcPixel() 
        return customShader(imageTexture, textureCoords); 
    varying   highp   vec2      textureCoords; 
    uniform           sampler2D imageTexture; 
    lowp vec4 srcPixel() 
return texture2D(imageTexture, textureCoords); 
    uniform   lowp    vec4      fragmentColor; 
    lowp vec4 srcPixel() 
        return fragmentColor; 
    varying   highp   vec2      brushTextureCoords; 
    uniform   lowp    vec4      patternColor; 
    uniform           sampler2D brushTexture; 
    lowp vec4 srcPixel() 
        return patternColor * (1.0 - texture2D(brushTexture, brushTextureCoords).r); 
    varying   highp   vec2      brushTextureCoords; 
    uniform           sampler2D brushTexture; 
    lowp vec4 srcPixel() 
        return texture2D(brushTexture, brushTextureCoords); 
    attribute highp   vec2      vertexCoordsArray; 
    attribute highp   vec3      pmvMatrix1; 
    attribute highp   vec3      pmvMatrix2; 
    attribute highp   vec3      pmvMatrix3; 
    uniform   mediump vec2      halfViewportSize; 
    uniform   highp   vec2      invertedTextureSize; 
    uniform   highp   mat3      brushTransform; 
    varying   highp   vec2      brushTextureCoords; 
    void setPosition(void) 
        highp mat3 pmvMatrix = mat3(pmvMatrix1, pmvMatrix2, pmvMatrix3); 
        vec3 transformedPos = pmvMatrix * vec3(vertexCoordsArray.xy, 1.0); 
        gl_Position.xy = transformedPos.xy / transformedPos.z; 
        mediump vec2 viewportCoords = (gl_Position.xy + 1.0) * halfViewportSize; 
        mediump vec3 hTexCoords = brushTransform * vec3(viewportCoords, 1); 
        mediump float invertedHTexCoordsZ = 1.0 / hTexCoords.z; 
        gl_Position = vec4(gl_Position.xy * invertedHTexCoordsZ, 0.0, invertedHTexCoordsZ); 
        brushTextureCoords.xy = (hTexCoords.xy * invertedTextureSize) * gl_Position.w; 
    uniform           sampler2D brushTexture; 
    uniform   highp   float     fmp2_m_radius2; 
    uniform   highp   float     inverse_2_fmp2_m_radius2; 
    uniform   highp   float     sqrfr; 
    varying   highp   float     b; 
    varying   highp   vec2      A; 
    uniform   highp   vec3      bradius; 
    lowp vec4 srcPixel() 
        highp float c = sqrfr-dot(A, A); 
        highp float det = b*b - 4.0*fmp2_m_radius2*c; 
        lowp vec4 result = vec4(0.0); 
        if (det >= 0.0) { 
            highp float detSqrt = sqrt(det); 
            highp float w = max((-b - detSqrt) * inverse_2_fmp2_m_radius2, (-b + detSqrt) * inverse_2_fmp2_m_radius2); 
            if (bradius.y + w * bradius.z >= 0.0) 
                result = texture2D(brushTexture, vec2(w, 0.5)); 
        } 
        return result; 
    attribute highp   vec2      vertexCoordsArray;
    attribute highp   vec3      pmvMatrix1; 
    attribute highp   vec3      pmvMatrix2; 
    attribute highp   vec3      pmvMatrix3; 
    uniform   mediump vec2      halfViewportSize; 
    uniform   highp   mat3      brushTransform; 
    uniform   highp   vec2      fmp; 
    uniform   highp   vec3      bradius; 
    varying   highp   float     b; 
    varying   highp   vec2      A; 
    void setPosition(void) 
        highp mat3 pmvMatrix = mat3(pmvMatrix1, pmvMatrix2, pmvMatrix3); 
        vec3 transformedPos = pmvMatrix * vec3(vertexCoordsArray.xy, 1.0); 
        gl_Position.xy = transformedPos.xy / transformedPos.z; 
        mediump vec2 viewportCoords = (gl_Position.xy + 1.0) * halfViewportSize; 
        mediump vec3 hTexCoords = brushTransform * vec3(viewportCoords, 1); 
        mediump float invertedHTexCoordsZ = 1.0 / hTexCoords.z; 
        gl_Position = vec4(gl_Position.xy * invertedHTexCoordsZ, 0.0, invertedHTexCoordsZ); 
        A = hTexCoords.xy * invertedHTexCoordsZ; 
        b = bradius.x + 2.0 * dot(A, fmp); 
    #define INVERSE_2PI 0.1591549430918953358 
    uniform           sampler2D brushTexture; 
    uniform   mediump float     angle; 
    varying   highp   vec2      A; 
    lowp vec4 srcPixel() 
        highp float t; 
        if (abs(A.y) == abs(A.x)) 
            t = (atan(-A.y + 0.002, A.x) + angle) * INVERSE_2PI; 
        else 
            t = (atan(-A.y, A.x) + angle) * INVERSE_2PI; 
        return texture2D(brushTexture, vec2(t - floor(t), 0.5)); 
    attribute highp   vec2      vertexCoordsArray; 
    attribute highp   vec3      pmvMatrix1; 
    attribute highp   vec3      pmvMatrix2; 
    attribute highp   vec3      pmvMatrix3; 
    uniform   mediump vec2      halfViewportSize; 
    uniform   highp   mat3      brushTransform; 
    varying   highp   vec2      A; 
    void setPosition(void) 
        highp mat3 pmvMatrix = mat3(pmvMatrix1, pmvMatrix2, pmvMatrix3); 
        vec3 transformedPos = pmvMatrix * vec3(vertexCoordsArray.xy, 1.0); 
        gl_Position.xy = transformedPos.xy / transformedPos.z; 
        mediump vec2  viewportCoords = (gl_Position.xy + 1.0) * halfViewportSize; 
        mediump vec3 hTexCoords = brushTransform * vec3(viewportCoords, 1); 
        mediump float invertedHTexCoordsZ = 1.0 / hTexCoords.z; 
        gl_Position = vec4(gl_Position.xy * invertedHTexCoordsZ, 0.0, invertedHTexCoordsZ); 
        A = hTexCoords.xy * invertedHTexCoordsZ; 
    uniform           sampler2D brushTexture; 
    varying   mediump float     index; 
    lowp vec4 srcPixel() 
        mediump vec2 val = vec2(index, 0.5); 
        return texture2D(brushTexture, val); 
    attribute highp   vec2      vertexCoordsArray; 
    attribute highp   vec3      pmvMatrix1; 
    attribute highp   vec3      pmvMatrix2; 
    attribute highp   vec3      pmvMatrix3; 
    uniform   mediump vec2      halfViewportSize; 
    uniform   highp   vec3      linearData; 
    uniform   highp   mat3      brushTransform; 
    varying   mediump float     index; 
    void setPosition() 
        highp mat3 pmvMatrix = mat3(pmvMatrix1, pmvMatrix2, pmvMatrix3); 
        vec3 transformedPos = pmvMatrix * vec3(vertexCoordsArray.xy, 1.0); 
        gl_Position.xy = transformedPos.xy / transformedPos.z; 
        mediump vec2 viewportCoords = (gl_Position.xy + 1.0) * halfViewportSize; 
        mediump vec3 hTexCoords = brushTransform * vec3(viewportCoords, 1); 
        mediump float invertedHTexCoordsZ = 1.0 / hTexCoords.z; 
        gl_Position = vec4(gl_Position.xy * invertedHTexCoordsZ, 0.0, invertedHTexCoordsZ); 
        index = (dot(linearData.xy, hTexCoords.xy) * linearData.z) * invertedHTexCoordsZ; 
    uniform           sampler2D brushTexture; 
    uniform   lowp    vec4      patternColor; 
    varying   highp   vec2      patternTexCoords;
    lowp vec4 srcPixel() 
        return patternColor * (1.0 - texture2D(brushTexture, patternTexCoords).r); 
    attribute highp   vec2      vertexCoordsArray; 
    attribute highp   vec3      pmvMatrix1; 
    attribute highp   vec3      pmvMatrix2; 
    attribute highp   vec3      pmvMatrix3; 
    uniform   mediump vec2      halfViewportSize; 
    uniform   highp   vec2      invertedTextureSize; 
    uniform   highp   mat3      brushTransform; 
    varying   highp   vec2      patternTexCoords; 
    void setPosition(void) 
        highp mat3 pmvMatrix = mat3(pmvMatrix1, pmvMatrix2, pmvMatrix3); 
        vec3 transformedPos = pmvMatrix * vec3(vertexCoordsArray.xy, 1.0); 
        gl_Position.xy = transformedPos.xy / transformedPos.z; 
        mediump vec2 viewportCoords = (gl_Position.xy + 1.0) * halfViewportSize; 
        mediump vec3 hTexCoords = brushTransform * vec3(viewportCoords, 1.0); 
        mediump float invertedHTexCoordsZ = 1.0 / hTexCoords.z; 
        gl_Position = vec4(gl_Position.xy * invertedHTexCoordsZ, 0.0, invertedHTexCoordsZ); 
        patternTexCoords.xy = (hTexCoords.xy * 0.125) * invertedHTexCoordsZ; 
    attribute highp   vec4      vertexCoordsArray; 
    void setPosition(void) 
        gl_Position = vertexCoordsArray; 
    uniform highp mat3 matrix; 
    attribute highp vec2 vertexCoordsArray; 
    void setPosition(void) 
      gl_Position = vec4(matrix * vec3(vertexCoordsArray, 1), 1);
    attribute highp   vec2      vertexCoordsArray; 
    attribute highp   vec3      pmvMatrix1; 
    attribute highp   vec3      pmvMatrix2; 
    attribute highp   vec3      pmvMatrix3; 
    void setPosition(void) 
        highp mat3 pmvMatrix = mat3(pmvMatrix1, pmvMatrix2, pmvMatrix3); 
        vec3 transformedPos = pmvMatrix * vec3(vertexCoordsArray.xy, 1.0); 
        gl_Position = vec4(transformedPos.xy, 0.0, transformedPos.z); 
    attribute highp   vec2      textureCoordArray; 
    attribute lowp    float     opacityArray; 
    varying   highp   vec2      textureCoords; 
    varying   lowp    float     opacity; 
    void setPosition(); 
    void main(void) 
        setPosition(); 
        textureCoords = textureCoordArray; 
        opacity = opacityArray; 
    attribute highp   vec2      textureCoordArray; 
    varying   highp   vec2      textureCoords; 
    void setPosition(); 
    void main(void) 
        setPosition(); 
        textureCoords = textureCoordArray; 
    void setPosition(); 
    void main(void) 
        setPosition(); 
Errors linking blit shader:
textureCoordArray
Fragment shader for blitShaderProg (MainFragmentShader & ImageSrcFragmentShader) failed to compile
Vertex shader for blitShaderProg (MainWithTexCoordsVertexShader & UntransformedPositionVertexShader) failed to compile
Errors linking simple shader:
pmvMatrix3
pmvMatrix2
pmvMatrix1
vertexCoordsArray
Fragment shader for simpleShaderProg (MainFragmentShader & ShockingPinkSrcFragmentShader) failed to compile
Vertex shader for simpleShaderProg (MainVertexShader & PositionOnlyVertexShader) failed to compile
patternColor
globalOpacity
maskTexture
fragmentColor
linearData
halfViewportSize
fmp2_m_radius2
inverse_2_fmp2_m_radius2
bradius
invertedTextureSize
brushTransform
brushTexture
  Error Log:
Shader program failed to link,
opacityArray
failed to compile!
Warning:
QGLEngineShaderManager::useCorrectShaderProg() - Unsupported composition mode
QGLEngineShaderManager::useCorrectShaderProg() - Unknown mask type
QGLEngineShaderManager::useCorrectShaderProg() - Qt::NoBrush style is set
QGLEngineShaderManager - Ignoring custom shader stage for non image src
QGL2PaintEngineEx: Unimplemented fill style
Unsupported composition mode
?333333
Painter path exceeds +/-32767 pixels.
Custom shader is already set on a painter
QGLCustomShaderStage::setOnPainter() - paint engine not OpenGL2
Inconsistent polygon. (#6)
Inconsistent polygon. (#5)
Inconsistent polygon. (#4)
Inconsistent polygon. (#2)
Inconsistent polygon. (#1)
Inconsistent polygon. (#3)
QGLTextureGlyphCache::createTextureData: Called with no context
QGLTextureGlyphCache::resizeTextureData: Called with no context
QGLTextureGlyphCache::fillTexture: Called with no context
QGLContext::generateFontDisplayLists: Could not generate display lists for font '%s'
wglGetPixelFormatAttribivARB
QGLContext::chooseContext(): Context profile not supported.
wglCreateContextAttribsARB
QGLContext::chooseContext(): OpenGL version string is null.
QGLContext::chooseContext(): Unexpected OpenGL version string format.
QGLContext: ChoosePixelFormat failed
wglChoosePixelFormatARB
QGLWidget::setContext: Context must refer to this widget
QGLWidget::setContext: Cannot set null context
QGLCmap::resize(): size out of range
QGLCmap::set(): Index out of range
wglGetSwapIntervalEXT
wglSwapIntervalEXT
QGLContext::chooseContext(): Failed to get pixmap rendering context of suitable depth.
QGLContext::chooseContext(): Failed to get pixmap rendering context.
QGLContext::chooseContext(): Cannot create overlay context for invalid widget
QGLContext::chooseContext(): Paint device cannot be null
wglDestroyPbufferARB
wglReleasePbufferDCARB
WGL_ARB_pixel_format
WGL_ARB_pbuffer
wglGetExtensionsStringARB
QGLPixelBuffer: Unable to create pbuffer context - giving up.
QGLPixelBuffer: Unable to share display lists - with share widget.
QGLPixelBuffer: Unable to create pbuffer [w=%d, h=%d] - giving up.
QGLPixelBuffer: Unable to find a pixel format with pbuffer  - giving up.
WGL_ARB_render_texture
wglQueryPbufferARB
wglGetPbufferDCARB
wglCreatePbufferARB
wglBindTexImageARB
wglReleaseTexImageARB
QGLWidget
updateGL()
updateOverlayGL()
QGLTextureDestroyer
context,boundPixmap,id
freeTexture(QGLContext*,QPixmapData*,GLuint)
freeTexture_slot(QGLContext*,QPixmapData*,GLuint)
QGLSignalProxy
context
aboutToDestroyContext(const QGLContext*)
QGLShader
QGLShaderProgram
shaderDestroyed()
QGraphicsShaderEffect
QGLWindowSurface
deleted(QObject*)
QWindowSurface
QGLEngineSharedShaders
QGLEngineShaderManager
Qt_GetCustomAllocators
tier0.dll
bad exception
CorExitProcess
HH:mm:ss
dddd, MMMM dd, yyyy
MM/dd/yy
December
November
October
September
February
January
Saturday
Thursday
Wednesday
Tuesday
Unknown exception
 Complete Object Locator'
 Class Hierarchy Descriptor'
 Base Class Array'
 Base Class Descriptor at (
 Type Descriptor'
`local static thread guard'
`managed vector copy constructor iterator'
`vector vbase copy constructor iterator'
`vector copy constructor iterator'
`dynamic atexit destructor for '
`dynamic initializer for '
`eh vector vbase copy constructor iterator'
`eh vector copy constructor iterator'
`managed vector destructor iterator'
`managed vector constructor iterator'
`placement delete[] closure'
`placement delete closure'
`omni callsig'
 delete[]
`local vftable constructor closure'
`local vftable'
`udt returning'
`copy constructor closure'
`eh vector vbase constructor iterator'
`eh vector destructor iterator'
`eh vector constructor iterator'
`virtual displacement map'
`vector vbase constructor iterator'
`vector destructor iterator'
`vector constructor iterator'
`scalar deleting destructor'
`default constructor closure'
`vector deleting destructor'
`vbase destructor'
`string'
`local static guard'
`typeof'
`vcall'
`vbtable'
`vftable'
operator
 delete
__unaligned
__restrict
__ptr64
__clrcall
__fastcall
__thiscall
__stdcall
__pascal
__cdecl
__based(
`non-type-template-parameter
unsigned 
<ellipsis>
,<ellipsis>
 throw(
`template-parameter
cli::pin_ptr<
cli::array<
`anonymous namespace'
generic-type-
template-parameter-
`unknown ecsu'
struct 
coclass 
cointerface 
extern "C" 
[thunk]:
public: 
protected: 
private: 
virtual 
static 
`template static data member destructor helper'
`template static data member constructor helper'
`local static destructor helper'
`adjustor{
`vtordisp{
`vtordispex{
volatile 
volatile
 volatile
signed 
<unknown>
wchar_t
UNKNOWN
__int128
__int32
__int64
__int16
std::nullptr_t
GetProcessWindowStation
GetUserObjectInformationW
GetLastActivePopup
GetActiveWindow
MessageBoxW
SystemFunction036
_nextafter
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
LC_TIME
LC_NUMERIC
LC_MONETARY
LC_CTYPE
LC_COLLATE
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
united-states
united-kingdom
trinidad & tobago
south-korea
south-africa
south korea
south africa
puerto-rico
pr-china
pr china
new-zealand
hong-kong
holland
great britain
england
britain
america
swedish-finland
spanish-venezuela
spanish-uruguay
spanish-puerto rico
spanish-peru
spanish-paraguay
spanish-panama
spanish-nicaragua
spanish-modern
spanish-mexican
spanish-honduras
spanish-guatemala
spanish-el salvador
spanish-ecuador
spanish-dominican republic
spanish-costa rica
spanish-colombia
spanish-chile
spanish-bolivia
spanish-argentina
portuguese-brazilian
norwegian-nynorsk
norwegian-bokmal
norwegian
italian-swiss
irish-english
german-swiss
german-luxembourg
german-lichtenstein
german-austrian
french-swiss
french-luxembourg
french-canadian
french-belgian
english-usa
english-us
english-uk
english-trinidad y tobago
english-south africa
english-nz
english-jamaica
english-ire
english-caribbean
english-can
english-belize
english-aus
english-american
dutch-belgian
chinese-traditional
chinese-singapore
chinese-simplified
chinese-hongkong
chinese
canadian
belgian
australian
american-english
american english
american
Norwegian-Nynorsk
y{,T.	D
C:\Valve\ThirdPartyCode\lgpl\qt\qt_valve_win64\lib\QtOpenGL4.pdb
glReadPixels
glGetTexImage
glGetTexLevelParameteriv
glTexImage2D
glGetIntegerv
glDisableClientState
glDrawArrays
glEnableClientState
glTexCoordPointer
glVertexPointer
glBlendFunc
glEnable
glDisable
glShadeModel
glLoadIdentity
glPushMatrix
glMatrixMode
glPushAttrib
glPushClientAttrib
glPopClientAttrib
glPopAttrib
glPopMatrix
glGetFloatv
glBindTexture
glIsEnabled
glIndexi
glColor4f
glClearIndex
glClearColor
glFlush
glDrawBuffer
glGetString
glGetError
glGetBooleanv
glTexParameterf
glGenTextures
glPixelStorei
glScissor
glOrtho
glViewport
glTranslated
glAlphaFunc
glGetDoublev
glTexParameteri
glDeleteTextures
glClearDepth
glDepthRange
glCopyTexImage2D
glClear
glLoadMatrixd
glVertex2d
glTexCoord4f
glTexCoord2f
glCopyTexSubImage2D
glPointSize
glLineWidth
glDepthFunc
glColorMask
glDepthMask
glBegin
glTexSubImage2D
glTexImage1D
glTexGenfv
glTexGeni
glVertex2f
glCullFace
glStencilFunc
glStencilOp
glClearStencil
glStencilMask
glPixelTransferi
glTexEnvf
glPolygonMode
glLoadMatrixf
glRotatef
glDrawElements
wglDescribeLayerPlane
wglUseFontBitmapsW
wglGetProcAddress
wglShareLists
wglCreateLayerContext
wglMakeCurrent
wglGetCurrentContext
wglGetCurrentDC
wglCreateContext
wglDeleteContext
wglRealizeLayerPalette
wglSwapLayerBuffers
wglSetLayerPaletteEntries
OPENGL32.dll
DescribePixelFormat
DeleteDC
SelectObject
CreateCompatibleDC
SetPaletteEntries
RealizePalette
SelectPalette
DeleteObject
GetStockObject
SetPixelFormat
ChoosePixelFormat
SwapBuffers
CreatePalette
CreateDIBSection
GDI32.dll
ReleaseDC
CreateWindowExW
DestroyWindow
USER32.dll
?isNull@QImage@@QEBA_NXZ
??1QImage@@UEAA@XZ
??4QImage@@QEAAAEAV0@$$QEAV0@@Z
?mirrored@QImage@@QEBA?AV1@_N0@Z
F&?scanLine@QImage@@QEAAPEAEH@Z
?bits@QImage@@QEAAPEAEXZ
??0QImage@@QEAA@AEBVQSize@@W4Format@0@@Z
?cacheKey@QPixmapData@@QEBA_JXZ
?bytesPerLine@QImage@@QEBAHXZ
G&?scanLine@QImage@@QEBAPEBEH@Z
?height@QImage@@QEBAHXZ
{8?width@QImage@@QEBAHXZ
/?size@QImage@@QEBA?AVQSize@@XZ
7?updatesEnabled@QWidget@@QEBA_NXZ
??1QPen@@QEAA@XZ
??1QFont@@QEAA@XZ
+?setPen@QPainter@@QEAAXAEBVQPen@@@Z
?drawText@QPainter@@QEAAXAEBVQPointF@@AEBVQString@@@Z
)?setFont@QPainter@@QEAAXAEBVQFont@@@Z
+?setPen@QPainter@@QEAAXAEBVQColor@@@Z
??0QFont@@QEAA@AEBV0@@Z
?font@QPainter@@QEBAAEBVQFont@@XZ
??0QPen@@QEAA@AEBV0@@Z
 ?pen@QPainter@@QEBAAEBVQPen@@XZ
U,?setRgbF@QColor@@QEAAXNNNN@Z
?invalidate@QColor@@AEAAXXZ
??1QPainter@@QEAA@XZ
?convertToFormat@QImage@@QEBA?AV1@W4Format@1@V?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
??0QImage@@QEAA@HHW4Format@0@@Z
?format@QImage@@QEBA?AW4Format@1@XZ
??1QWidget@@UEAA@XZ
?.?setVisible@QWidget@@UEAAX_N@Z
f/?sizeHint@QWidget@@UEBA?AVQSize@@XZ
?minimumSizeHint@QWidget@@UEBA?AVQSize@@XZ
?heightForWidth@QWidget@@UEBAHH@Z
?mousePressEvent@QWidget@@MEAAXPEAVQMouseEvent@@@Z
?mouseReleaseEvent@QWidget@@MEAAXPEAVQMouseEvent@@@Z
?mouseDoubleClickEvent@QWidget@@MEAAXPEAVQMouseEvent@@@Z
?mouseMoveEvent@QWidget@@MEAAXPEAVQMouseEvent@@@Z
Q8?wheelEvent@QWidget@@MEAAXPEAVQWheelEvent@@@Z
?keyPressEvent@QWidget@@MEAAXPEAVQKeyEvent@@@Z
?keyReleaseEvent@QWidget@@MEAAXPEAVQKeyEvent@@@Z
?focusInEvent@QWidget@@MEAAXPEAVQFocusEvent@@@Z
?focusOutEvent@QWidget@@MEAAXPEAVQFocusEvent@@@Z
?enterEvent@QWidget@@MEAAXPEAVQEvent@@@Z
?leaveEvent@QWidget@@MEAAXPEAVQEvent@@@Z
?moveEvent@QWidget@@MEAAXPEAVQMoveEvent@@@Z
?closeEvent@QWidget@@MEAAXPEAVQCloseEvent@@@Z
?contextMenuEvent@QWidget@@MEAAXPEAVQContextMenuEvent@@@Z
|2?tabletEvent@QWidget@@MEAAXPEAVQTabletEvent@@@Z
?actionEvent@QWidget@@MEAAXPEAVQActionEvent@@@Z
?dragEnterEvent@QWidget@@MEAAXPEAVQDragEnterEvent@@@Z
?dragMoveEvent@QWidget@@MEAAXPEAVQDragMoveEvent@@@Z
?dragLeaveEvent@QWidget@@MEAAXPEAVQDragLeaveEvent@@@Z
?dropEvent@QWidget@@MEAAXPEAVQDropEvent@@@Z
.?showEvent@QWidget@@MEAAXPEAVQShowEvent@@@Z
?hideEvent@QWidget@@MEAAXPEAVQHideEvent@@@Z
8?winEvent@QWidget@@MEAA_NPEAUtagMSG@@PEAJ@Z
?changeEvent@QWidget@@MEAAXPEAVQEvent@@@Z
?inputMethodEvent@QWidget@@MEAAXPEAVQInputMethodEvent@@@Z
?inputMethodQuery@QWidget@@UEBA?AVQVariant@@W4InputMethodQuery@Qt@@@Z
?focusNextPrevChild@QWidget@@MEAA_N_N@Z
1?styleChange@QWidget@@MEAAXAEAVQStyle@@@Z
?enabledChange@QWidget@@MEAAX_N@Z
 ?paletteChange@QWidget@@MEAAXAEBVQPalette@@@Z
?fontChange@QWidget@@MEAAXAEBVQFont@@@Z
8?windowActivationChange@QWidget@@MEAAX_N@Z
?languageChange@QWidget@@MEAAXXZ
?devType@QWidget@@UEBAHXZ
?getDC@QWidget@@UEBAPEAUHDC__@@XZ
$?releaseDC@QWidget@@UEBAXPEAUHDC__@@@Z
?metric@QWidget@@MEBAHW4PaintDeviceMetric@QPaintDevice@@@Z
%?rgb@QColor@@QEBAIXZ
$?redF@QColor@@QEBANXZ
?greenF@QColor@@QEBANXZ
?blueF@QColor@@QEBANXZ
?alphaF@QColor@@QEBANXZ
??1QWidgetPrivate@@UEAA@XZ
??0QWidgetPrivate@@QEAA@H@Z
?hasHeightForWidth@QWidgetPrivate@@UEBA_NXZ
f'?setAutoFillBackground@QWidget@@QEAAX_N@Z
['?setAttribute@QWidget@@QEAAXW4WidgetAttribute@Qt@@_N@Z
??0QWidget@@IEAA@AEAVQWidgetPrivate@@PEAV0@V?$QFlags@W4WindowType@Qt@@@@@Z
(?setColor@QImage@@QEAAXHI@Z
(?setColorCount@QImage@@QEAAXH@Z
??1QColormap@@QEAA@XZ
?colormap@QColormap@@QEBA?BV?$QVector@VQColor@@@@XZ
?instance@QColormap@@SA?AV1@H@Z
??0QImage@@QEAA@XZ
~8?width@QPaintDevice@@QEBAHXZ
?height@QPaintDevice@@QEBAHXZ
?key@QFont@@QEBA?AVQString@@XZ
?addImageHook@QImagePixmapCleanupHooks@@QEAAXP6AX_J@Z@Z
?addPixmapDataDestructionHook@QImagePixmapCleanupHooks@@QEAAXP6AXPEAVQPixmapData@@@Z@Z
?addPixmapDataModificationHook@QImagePixmapCleanupHooks@@QEAAXP6AXPEAVQPixmapData@@@Z@Z
?instance@QImagePixmapCleanupHooks@@SAPEAV1@XZ
?end@QPainter@@QEAA_NXZ
$?rect@QWidget@@QEBA?AVQRect@@XZ
??0QPainter@@QEAA@PEAVQPaintDevice@@@Z
 ?painter@QPaintEngine@@QEBAPEAVQPainter@@XZ
?bits@QImage@@QEBAPEBEXZ
?isDetached@QImage@@QEBA_NXZ
?hasAlphaChannel@QImage@@QEBA_NXZ
<&?scaled@QImage@@QEBA?AV1@HHW4AspectRatioMode@Qt@@W4TransformationMode@3@@Z
??0QImage@@QEAA@AEBV0@@Z
O$?qt_widget_private@@YAPEAVQWidgetPrivate@@PEAVQWidget@@@Z
$?removeImageHook@QImagePixmapCleanupHooks@@QEAAXP6AX_J@Z@Z
$?removePixmapDataDestructionHook@QImagePixmapCleanupHooks@@QEAAXP6AXPEAVQPixmapData@@@Z@Z
$?removePixmapDataModificationHook@QImagePixmapCleanupHooks@@QEAAXP6AXPEAVQPixmapData@@@Z@Z
?enableCleanupHooks@QImagePixmapCleanupHooks@@SAXAEBVQImage@@@Z
?cacheKey@QImage@@QEBA_JXZ
?enableCleanupHooks@QImagePixmapCleanupHooks@@SAXAEBVQPixmap@@@Z
?depth@QPixmap@@QEBAHXZ
h3?toImage@QPixmap@@QEBA?AVQImage@@XZ
?cacheKey@QPixmap@@QEBA_JXZ
!?pixmapData@QPixmap@@QEBAPEAVQPixmapData@@XZ
?isNull@QPixmap@@QEBA_NXZ
??1QPixmap@@UEAA@XZ
??0QPixmap@@QEAA@XZ
??0QPixmap@@QEAA@AEBV0@@Z
??0QPixmap@@QEAA@AEBVQSize@@@Z
?event@QWidget@@MEAA_NPEAVQEvent@@@Z
?drawPixmap@QPainter@@QEAAXAEBVQPointF@@AEBVQPixmap@@@Z
?,?setRedirected@QWidgetPrivate@@QEAAXPEAVQPaintDevice@@AEBVQPoint@@@Z
??0QColor@@QEAA@I@Z
?getDC@QPaintDevice@@UEBAPEAUHDC__@@XZ
$?releaseDC@QPaintDevice@@UEBAXPEAUHDC__@@@Z
"?qt_defaultDpiY@@YAHXZ
"?qt_defaultDpiX@@YAHXZ
??1QPaintDevice@@UEAA@XZ
??0QPaintDevice@@IEAA@XZ
G ?paintDevice@QPaintEngine@@QEBAPEAVQPaintDevice@@XZ
?color@QBrush@@QEBAAEBVQColor@@XZ
?brush@QPalette@@QEBAAEBVQBrush@@W4ColorGroup@1@W4ColorRole@1@@Z
 ?palette@QWidget@@QEBAAEBVQPalette@@XZ
?backgroundRole@QWidget@@QEBA?AW4ColorRole@QPalette@@XZ
2?testAttribute_helper@QWidget@@AEBA_NW4WidgetAttribute@Qt@@@Z
?autoFillBackground@QWidget@@QEBA_NXZ
??1QBrush@@QEAA@XZ
??0QTransform@@QEAA@AEBV0@@Z
??0QBrush@@QEAA@AEBV0@@Z
?blue@QColor@@QEBAHXZ
?green@QColor@@QEBAHXZ
$?red@QColor@@QEBAHXZ
?alpha@QColor@@QEBAHXZ
?isSolid@QPen@@QEBA_NXZ
1?style@QPen@@QEBA?AW4PenStyle@Qt@@XZ
?isCosmetic@QPen@@QEBA_NXZ
7?type@QTransform@@QEBA?AW4TransformationType@1@XZ
8?widthF@QPen@@QEBANXZ
??1QPainterPath@@QEAA@XZ
??0QPainterPath@@QEAA@AEBV0@@Z
??1QPaintEngine@@UEAA@XZ
?drawEllipse@QPaintEngineEx@@UEAAXAEBVQRect@@@Z
?getDC@QPaintEngine@@UEBAPEAUHDC__@@XZ
$?releaseDC@QPaintEngine@@UEBAXPEAUHDC__@@@Z
?coordinateOffset@QPaintEngine@@UEBA?AVQPoint@@XZ
?draw@QPaintEngineEx@@UEAAXAEBVQVectorPath@@@Z
1?stroke@QPaintEngineEx@@UEAAXAEBVQVectorPath@@AEBVQPen@@@Z
?clip@QPaintEngineEx@@UEAAXAEBVQPainterPath@@W4ClipOperation@Qt@@@Z
?clip@QPaintEngineEx@@UEAAXAEBVQRegion@@W4ClipOperation@Qt@@@Z
?clip@QPaintEngineEx@@UEAAXAEBVQRect@@W4ClipOperation@Qt@@@Z
?fillRect@QPaintEngineEx@@UEAAXAEBVQRectF@@AEBVQColor@@@Z
?fillRect@QPaintEngineEx@@UEAAXAEBVQRectF@@AEBVQBrush@@@Z
?drawRoundedRect@QPaintEngineEx@@UEAAXAEBVQRectF@@NNW4SizeMode@Qt@@@Z
?drawPixmap@QPaintEngineEx@@UEAAXAEBVQPointF@@AEBVQPixmap@@@Z
?drawImage@QPaintEngineEx@@UEAAXAEBVQPointF@@AEBVQImage@@@Z
?drawPixmapFragments@QPaintEngineEx@@UEAAXPEBVQRectF@@0HAEBVQPixmap@@V?$QFlags@W4PixmapFragmentHint@QPainter@@@@@Z
?drawPixmapFragments@QPaintEngineEx@@UEAAXPEBVPixmapFragment@QPainter@@HAEBVQPixmap@@V?$QFlags@W4PixmapFragmentHint@QPainter@@@@@Z
?2?sync@QPaintEngineEx@@UEAAXXZ
?beginNativePainting@QPaintEngineEx@@UEAAXXZ
?endNativePainting@QPaintEngineEx@@UEAAXXZ
!?pixmapFilter@QPaintEngineEx@@UEAAPEAVQPixmapFilter@@HPEBV2@@Z
?flags@QPaintEngineEx@@UEBAIXZ
??0QTessellator@@QEAA@XZ
??1QTessellator@@UEAA@XZ
2?tessellate@QTessellator@@QEAA?AVQRectF@@PEBVQPointF@@H@Z
f.?setWinding@QTessellator@@QEAAX_N@Z
?elementAt@QPainterPath@@QEBAAEBVElement@1@H@Z
?elementCount@QPainterPath@@QEBAHXZ
??1QPolygonF@@QEAA@XZ
?boundingRect@QPolygonF@@QEBA?AVQRectF@@XZ
X3?toFillPolygon@QPainterPath@@QEBA?AVQPolygonF@@AEBVQTransform@@@Z
??0QPainterPath@@QEAA@XZ
?controlPointRect@QPainterPath@@QEBA?AVQRectF@@XZ
??4QPainterPath@@QEAAAEAV0@$$QEAV0@@Z
?map@QTransform@@QEBA?AVQPainterPath@@AEBV2@@Z
?addEllipse@QPainterPath@@QEAAXAEBVQRectF@@@Z
??1QRegion@@QEAA@XZ
??1QPainterState@@UEAA@XZ
??4QRegion@@QEAAAEAV0@AEBV0@@Z
??0QRegion@@QEAA@XZ
??0QPainterState@@QEAA@AEBV0@@Z
??0QPainterState@@QEAA@XZ
?copy@QPixmap@@QEBA?AV1@HHHH@Z
?height@QPixmap@@QEBAHXZ
8?width@QPixmap@@QEBAHXZ
?copy@QImage@@QEBA?AV1@HHHH@Z
??8QColor@@QEBA_NAEBV0@@Z
"?qt_isExtendedRadialGradient@@YA_NAEBVQBrush@@@Z
?brush@QPen@@QEBA?AVQBrush@@XZ
?mapRect@QTransform@@QEBA?AVQRectF@@AEBV2@@Z
??DQTransform@@QEBA?AV0@AEBV0@@Z
?inverted@QTransform@@QEBA?AV1@PEA_N@Z
??0QTransform@@QEAA@NNNNNN@Z
 /?size@QPixmap@@QEBA?AVQSize@@XZ
$3?texture@QBrush@@QEBA?AVQPixmap@@XZ
/?split@QBezier@@QEBAXPEAV1@0@Z
?fromPoints@QBezier@@SA?AV1@AEBVQPointF@@000@Z
?color@QPen@@QEBA?AVQColor@@XZ
??0QColor@@QEAA@W4GlobalColor@Qt@@@Z
??4QPen@@QEAAAEAV0@AEBV0@@Z
1?style@QBrush@@QEBA?AW4BrushStyle@Qt@@XZ
??4QBrush@@QEAAAEAV0@AEBV0@@Z
??4QTransform@@QEAAAEAV0@AEBV0@@Z
?drawTextItem@QPaintEngine@@UEAAXAEBVQPointF@@AEBVQTextItem@@@Z
??1QStaticTextItem@@QEAA@XZ
)?setFontEngine@QStaticTextItem@@QEAAXPEAVQFontEngine@@@Z
??0QStaticTextItem@@QEAA@XZ
?getGlyphPositions@QFontEngine@@QEAAXAEBUQGlyphLayout@@AEBVQTransform@@V?$QFlags@W4RenderFlag@QTextItem@@@@AEAV?$QVarLengthArray@I$0BAA@@@AEAV?$QVarLengthArray@UQFixedPoint@@$0BAA@@@@Z
?fromTranslate@QTransform@@SA?AV1@NN@Z
?determinant@QTransform@@QEBANXZ
??1QPaintEngineExPrivate@@UEAA@XZ
??0QTransform@@QEAA@XZ
??0QBrush@@QEAA@XZ
??0QPen@@QEAA@XZ
??0QPaintEngineExPrivate@@QEAA@XZ
??1QPainterPathStroker@@QEAA@XZ
C)?setFillRule@QPainterPath@@QEAAXW4FillRule@Qt@@@Z
?createStroke@QPainterPathStroker@@QEBA?AVQPainterPath@@AEBV2@@Z
\.?setWidth@QPainterPathStroker@@QEAAXN@Z
(?setDashOffset@QPainterPathStroker@@QEAAXN@Z
?dashOffset@QPen@@QEBANXZ
+?setMiterLimit@QPainterPathStroker@@QEAAXN@Z
?miterLimit@QPen@@QEBANXZ
*?setJoinStyle@QPainterPathStroker@@QEAAXW4PenJoinStyle@Qt@@@Z
?joinStyle@QPen@@QEBA?AW4PenJoinStyle@Qt@@XZ
'?setCapStyle@QPainterPathStroker@@QEAAXW4PenCapStyle@Qt@@@Z
?capStyle@QPen@@QEBA?AW4PenCapStyle@Qt@@XZ
(?setDashPattern@QPainterPathStroker@@QEAAXW4PenStyle@Qt@@@Z
(?setDashPattern@QPainterPathStroker@@QEAAXAEBV?$QVector@N@@@Z
?dashPattern@QPen@@QEBA?AV?$QVector@N@@XZ
??0QPainterPathStroker@@QEAA@XZ
??0QPaintEngineEx@@IEAA@AEAVQPaintEngineExPrivate@@@Z
$?rects@QRegion@@QEBA?AV?$QVector@VQRect@@@@XZ
G2?systemClip@QPaintEngine@@QEBA?AVQRegion@@XZ
?fillRule@QPainterPath@@QEBA?AW4FillRule@Qt@@XZ
2?tessellateRect@QTessellator@@QEAAXAEBVQPointF@@0N@Z
2?tessellateConvex@QTessellator@@QEAAXPEBVQPointF@@H@Z
-?setState@QPaintEngineEx@@UEAAXPEAVQPainterState@@@Z
?color@QImage@@QEBAIH@Z
"?qt_imageForBrush@@YA?AVQImage@@H_N@Z
%3?textureImage@QBrush@@QEBA?AVQImage@@XZ
?map@QTransform@@QEBAXNNPEAN0@Z
?interpolationMode@QGradient@@QEBA?AW4InterpolationMode@1@XZ
%?rgba@QColor@@QEBAIXZ
1?stops@QGradient@@QEBA?AV?$QVector@U?$QPair@NVQColor@@@@@@XZ
??8QPen@@QEBA_NAEBV0@@Z
??8QPainterPath@@QEBA_NAEBV0@@Z
?angle@QConicalGradient@@QEBANXZ
?center@QConicalGradient@@QEBA?AVQPointF@@XZ
6?translate@QTransform@@QEAAAEAV1@NN@Z
c$?radius@QRadialGradient@@QEBANXZ
?focalPoint@QRadialGradient@@QEBA?AVQPointF@@XZ
?center@QRadialGradient@@QEBA?AVQPointF@@XZ
?map@QTransform@@QEBA?AVQPointF@@AEBV2@@Z
?finalStop@QLinearGradient@@QEBA?AVQPointF@@XZ
/?start@QLinearGradient@@QEBA?AVQPointF@@XZ
?gradient@QBrush@@QEBAPEBVQGradient@@XZ
6?transform@QBrush@@QEBA?AVQTransform@@XZ
?isQBitmap@QPixmap@@QEBA_NXZ
??ZQRegion@@QEAAAEAV0@AEBV0@@Z
??0QRegion@@QEAA@AEBVQRect@@W4RegionType@0@@Z
?intersected@QRegion@@QEBA?AV1@AEBV1@@Z
?boundingRect@QRegion@@QEBA?AVQRect@@XZ
??IQRegion@@QEBA?BV0@AEBV0@@Z
??_4QRegion@@QEAAAEAV0@AEBV0@@Z
??_5QRegion@@QEAAAEAV0@AEBV0@@Z
??0QRegion@@QEAA@AEBV0@@Z
??D@YA?AVQRegion@@AEBV0@AEBVQTransform@@@Z
?contains@QPainterPath@@QEBA_NAEBVQRectF@@@Z
?addRect@QPainterPath@@QEAAXAEBVQRectF@@@Z
??4QRegion@@QEAAAEAV0@$$QEAV0@@Z
8?window@QWidget@@QEBAPEAV1@XZ
?isEmpty@QRegion@@QEBA_NXZ
?drawPoints@QPaintEngine@@UEAAXPEBVQPointF@@H@Z
'?setCapStyle@QPen@@QEAAXW4PenCapStyle@Qt@@@Z
?drawPoints@QPaintEngineEx@@UEAAXPEBVQPointF@@H@Z
??0QBrush@@QEAA@W4BrushStyle@Qt@@@Z
??1QPolygon@@QEAA@XZ
??0QRegion@@QEAA@AEBVQPolygon@@W4FillRule@Qt@@@Z
3?toPolygon@QPolygonF@@QEBA?AVQPolygon@@XZ
W3?toFillPolygon@QPainterPath@@QEBA?AVQPolygonF@@AEBVQMatrix@@@Z
??0QMatrix@@QEAA@XZ
?moveTo@QPainterPath@@QEAAXAEBVQPointF@@@Z
?lineTo@QPainterPath@@QEAAXAEBVQPointF@@@Z
?cubicTo@QPainterPath@@QEAAXAEBVQPointF@@00@Z
?compositionMode@QPaintEngineState@@QEBA?AW4CompositionMode@QPainter@@XZ
%?renderHints@QPaintEngineState@@QEBA?AV?$QFlags@W4RenderHint@QPainter@@@@XZ
?clipRegion@QPaintEngineState@@QEBA?AVQRegion@@XZ
?clipOperation@QPaintEngineState@@QEBA?AW4ClipOperation@Qt@@XZ
?clipPath@QPaintEngineState@@QEBA?AVQPainterPath@@XZ
?clipRegion@QPainter@@QEBA?AVQRegion@@XZ
?isClipEnabled@QPaintEngineState@@QEBA_NXZ
?font@QPaintEngineState@@QEBA?AVQFont@@XZ
?brushOrigin@QPaintEngineState@@QEBA?AVQPointF@@XZ
 ?pen@QPaintEngineState@@QEBA?AVQPen@@XZ
?brush@QPaintEngineState@@QEBA?AVQBrush@@XZ
6?transform@QPaintEngineState@@QEBA?AVQTransform@@XZ
?opacity@QPaintEngineState@@QEBANXZ
0?state@QPaintEngineState@@QEBA?AV?$QFlags@W4DirtyFlag@QPaintEngine@@@@XZ
?hasClipping@QPainter@@QEBA_NXZ
??8QTransform@@QEBA_NAEBV0@@Z
??0QPolygonF@@QEAA@XZ
??4QBrush@@QEAAAEAV0@$$QEAV0@@Z
?isEmpty@QPainterPath@@QEBA_NXZ
b.?setWidthF@QPen@@QEAAXN@Z
#?qt_scaleForTransform@@YA_NAEBVQTransform@@PEAN@Z
 ?penNeedsResolving@QPaintEngineState@@QEBA_NXZ
?drawPath@QPaintEngineEx@@UEAAXAEBVQPainterPath@@@Z
-?setTransform@QBrush@@QEAAXAEBVQTransform@@@Z
??0QBrush@@QEAA@AEBVQImage@@@Z
6&?scale@QTransform@@QEAAAEAV1@NN@Z
>&?scaled@QPixmap@@QEBA?AV1@HHW4AspectRatioMode@Qt@@W4TransformationMode@3@@Z
?fill@QPixmap@@QEAAXAEBVQColor@@@Z
?drawEllipse@QPaintEngineEx@@UEAAXAEBVQRectF@@@Z
??0QPen@@QEAA@W4PenStyle@Qt@@@Z
"?qt_draw_helper@@YAXPEAVQPainterPrivate@@AEBVQPainterPath@@W4DrawOperation@1@@Z
#?qt_painterPathFromVectorPath@@YA?AVQPainterPath@@AEBVQVectorPath@@@Z
'?setBrush@QPainter@@QEAAXAEBVQBrush@@@Z
?brush@QPainter@@QEBAAEBVQBrush@@XZ
?drawRects@QPaintEngineEx@@UEAAXPEBVQRectF@@H@Z
?drawLines@QPaintEngineEx@@UEAAXPEBVQLineF@@H@Z
??0QPainterPath@@QEAA@AEBVQPointF@@@Z
?brushNeedsResolving@QPaintEngineState@@QEBA_NXZ
?drawPolygon@QPaintEngineEx@@UEAAXPEBVQPointF@@HW4PolygonDrawMode@QPaintEngine@@@Z
??1QGraphicsSystem@@UEAA@XZ
?createPixmapData@QGraphicsSystem@@UEAAPEAVQPixmapData@@PEAV2@@Z
!?platformExtension@QGraphicsSystem@@UEAAPEAVQGraphicsSystemEx@@XZ
??1QPixmapFilter@@UEAA@XZ
1?strength@QPixmapColorizeFilter@@QEBANXZ
?color@QPixmapColorizeFilter@@QEBA?AVQColor@@XZ
&?rows@QPixmapConvolutionFilter@@AEBAHXZ
?columns@QPixmapConvolutionFilter@@AEBAHXZ
??0QPixmapConvolutionFilter@@QEAA@PEAVQObject@@@Z
?metaObject@QPixmapConvolutionFilter@@UEBAPEBUQMetaObject@@XZ
>#?qt_metacast@QPixmapConvolutionFilter@@UEAAPEAXPEBD@Z
"?qt_metacall@QPixmapConvolutionFilter@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?boundingRectFor@QPixmapConvolutionFilter@@UEBA?AVQRectF@@AEBV2@@Z
??1QPixmapConvolutionFilter@@UEAA@XZ
?drawPixmap@QPainter@@QEAAXAEBVQRectF@@AEBVQPixmap@@0@Z
??0QPixmapBlurFilter@@QEAA@PEAVQObject@@@Z
?metaObject@QPixmapBlurFilter@@UEBAPEBUQMetaObject@@XZ
<#?qt_metacast@QPixmapBlurFilter@@UEAAPEAXPEBD@Z
"?qt_metacall@QPixmapBlurFilter@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?boundingRectFor@QPixmapBlurFilter@@UEBA?AVQRectF@@AEBV2@@Z
??1QPixmapBlurFilter@@UEAA@XZ
??0QPixmapDropShadowFilter@@QEAA@PEAVQObject@@@Z
?metaObject@QPixmapDropShadowFilter@@UEBAPEBUQMetaObject@@XZ
?#?qt_metacast@QPixmapDropShadowFilter@@UEAAPEAXPEBD@Z
"?qt_metacall@QPixmapDropShadowFilter@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?boundingRectFor@QPixmapDropShadowFilter@@UEBA?AVQRectF@@AEBV2@@Z
??1QPixmapDropShadowFilter@@UEAA@XZ
?color@QPixmapDropShadowFilter@@QEBA?AVQColor@@XZ
$?rect@QPixmap@@QEBA?AVQRect@@XZ
?devType@QImage@@UEBAHXZ
J ?paintEngine@QImage@@UEBAPEAVQPaintEngine@@XZ
?metric@QImage@@MEBAHW4PaintDeviceMetric@QPaintDevice@@@Z
??0QPixmapColorizeFilter@@QEAA@PEAVQObject@@@Z
?metaObject@QPixmapColorizeFilter@@UEBAPEBUQMetaObject@@XZ
=#?qt_metacast@QPixmapColorizeFilter@@UEAAPEAXPEBD@Z
"?qt_metacall@QPixmapColorizeFilter@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?boundingRectFor@QPixmapFilter@@UEBA?AVQRectF@@AEBV2@@Z
?convolutionKernel@QPixmapConvolutionFilter@@AEBAPEBNXZ
"?qt_halfScaled@@YA?AVQImage@@AEBV1@@Z
B,?setRenderHint@QPainter@@QEAAXW4RenderHint@1@_N@Z
L ?paintEngine@QPainter@@QEBAPEAVQPaintEngine@@XZ
$?rect@QImage@@QEBA?AVQRect@@XZ
"?qt_blurImage@@YAXAEAVQImage@@N_NH@Z
?blurHints@QPixmapBlurFilter@@QEBA?AV?$QFlags@W4BlurHint@QGraphicsBlurEffect@@@@XZ
"?qt_memrotate90_gl@@YAXPEBIHHHPEAIH@Z
?drawImage@QPainter@@QEAAXHHAEBVQImage@@HHHHV?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
0(?setCompositionMode@QPainter@@QEAAXW4CompositionMode@1@@Z
?fill@QImage@@QEAAXI@Z
b$?radius@QPixmapBlurFilter@@QEBANXZ
?drawPixmap@QPainter@@QEAAXAEBVQPointF@@AEBVQPixmap@@AEBVQRectF@@@Z
(?setColorTable@QImage@@QEAAXV?$QVector@I@@@Z
?colorTable@QImage@@QEBA?AV?$QVector@I@@XZ
?alphaChannel@QImage@@QEBA?AV1@XZ
?offset@QPixmapDropShadowFilter@@QEBA?AVQPointF@@XZ
?blurRadius@QPixmapDropShadowFilter@@QEBANXZ
??1QGraphicsEffectPrivate@@UEAA@XZ
??0QGraphicsEffectPrivate@@QEAA@XZ
??0QGraphicsEffect@@IEAA@AEAVQGraphicsEffectPrivate@@PEAVQObject@@@Z
?boundingRectFor@QGraphicsEffect@@UEBA?AVQRectF@@AEBV2@@Z
/?sourceChanged@QGraphicsEffect@@MEAAXV?$QFlags@W4ChangeFlag@QGraphicsEffect@@@@@Z
??1QGraphicsEffect@@UEAA@XZ
.?setWorldTransform@QPainter@@QEAAXAEBVQTransform@@_N@Z
8?worldTransform@QPainter@@QEBAAEBVQTransform@@XZ
/?sourcePixmap@QGraphicsEffect@@IEBA?AVQPixmap@@W4CoordinateSystem@Qt@@PEAVQPoint@@W4PixmapPadMode@1@@Z
/?sourceIsPixmap@QGraphicsEffect@@IEBA_NXZ
??0QRasterWindowSurface@@QEAA@PEAVQWidget@@_N@Z
8?windowType@QWidget@@QEBA?AW4WindowType@Qt@@XZ
H ?paintDevice@QRasterWindowSurface@@UEAAPEAVQPaintDevice@@XZ
?flush@QRasterWindowSurface@@UEAAXPEAVQWidget@@AEBVQRegion@@AEBVQPoint@@@Z
)?setGeometry@QRasterWindowSurface@@UEAAXAEBVQRect@@@Z
u&?scroll@QRasterWindowSurface@@UEAA_NAEBVQRegion@@HH@Z
?beginPaint@QRasterWindowSurface@@UEAAXAEBVQRegion@@@Z
?endPaint@QWindowSurface@@UEAAXAEBVQRegion@@@Z
?buffer@QWindowSurface@@UEAAPEAVQImage@@PEBVQWidget@@@Z
?grabWidget@QWindowSurface@@UEBA?AVQPixmap@@PEBVQWidget@@AEBVQRect@@@Z
?offset@QWindowSurface@@UEBA?AVQPoint@@PEBVQWidget@@@Z
?features@QRasterWindowSurface@@UEBA?AV?$QFlags@W4WindowSurfaceFeature@QWindowSurface@@@@XZ
??1QRasterWindowSurface@@UEAA@XZ
R$?qt_win_owndc_required@@3_NA
#?qt_paint_device_metric@@YAHPEBVQPaintDevice@@W4PaintDeviceMetric@1@@Z
8?window@QWindowSurface@@QEBAPEAVQWidget@@XZ
)?setGeometry@QWindowSurface@@UEAAXAEBVQRect@@@Z
??1QWindowSurface@@UEAA@XZ
??0QWindowSurface@@QEAA@PEAVQWidget@@_N@Z
?d_func@QWidget@@AEAAPEAVQWidgetPrivate@@XZ
?allWidgets@QWidgetPrivate@@2PEAV?$QSet@PEAVQWidget@@@@EA
\%?resize@QWidget@@QEAAXAEBVQSize@@@Z
?createExtra@QWidgetPrivate@@QEAAXXZ
??GQRegion@@QEBA?BV0@AEBV0@@Z
#?qt_qwidget_data@@YAPEAVQWidgetData@@PEAVQWidget@@@Z
?geometry@QWindowSurface@@QEBA?AVQRect@@XZ
?nativeParentWidget@QWidget@@QEBAPEAV1@XZ
?copy@QImage@@QEBA?AV1@AEBVQRect@@@Z
?mapTo@QWidget@@QEBA?AVQPoint@@PEAV1@AEBV2@@Z
,?setSerialNumber@QPixmapData@@IEAAXH@Z
??1QPixmapData@@UEAA@XZ
??0QPixmapData@@QEAA@W4PixelType@0@H@Z
?mask@QPixmapData@@UEBA?AVQBitmap@@XZ
*?setMask@QPixmapData@@UEAAXAEBVQBitmap@@@Z
6?transformed@QPixmapData@@UEBA?AVQPixmap@@AEBVQTransform@@W4TransformationMode@Qt@@@Z
J'?setAlphaChannel@QPixmapData@@UEAAXAEBVQPixmap@@@Z
?alphaChannel@QPixmapData@@UEBA?AVQPixmap@@XZ
i3?toImage@QPixmapData@@UEBA?AVQImage@@AEBVQRect@@@Z
?buffer@QPixmapData@@UEAAPEAVQImage@@XZ
&?runtimeData@QPixmapData@@UEBAPEAV1@XZ
?depth@QImage@@QEBAHXZ
?detach@QImage@@QEAAXXZ
??4QImage@@QEAAAEAV0@AEBV0@@Z
?convertInPlace@QImageData@@QEAA_NW4Format@QImage@@V?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
?checkForAlphaPixels@QImageData@@QEBA_NXZ
?depth@QPaintDevice@@QEBAHXZ
?desktop@QApplication@@SAPEAVQDesktopWidget@@XZ
??4QColor@@QEAAAEAV0@AEBV0@@Z
m$?read@QImageReader@@QEAA?AVQImage@@XZ
??1QImageReader@@QEAA@XZ
??0QImageReader@@QEAA@AEBVQString@@AEBVQByteArray@@@Z
?fromFile@QPixmapData@@UEAA_NAEBVQString@@PEBDV?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
??0QImageReader@@QEAA@PEAVQIODevice@@AEBVQByteArray@@@Z
?copy@QPixmapData@@UEAAXPEBV1@AEBVQRect@@@Z
!?pointAt@QBezier@@QEBA?AVQPointF@@N@Z
?bounds@QBezier@@QEBA?AVQRectF@@XZ
'?setBlueF@QColor@@QEAAXN@Z
)?setGreenF@QColor@@QEAAXN@Z
=,?setRedF@QColor@@QEAAXN@Z
N'?setAlphaF@QColor@@QEAAXN@Z
!?qHasPixmapTexture@@YA_NAEBVQBrush@@@Z
?focalRadius@QRadialGradient@@QEBANXZ
?centerRadius@QRadialGradient@@QEBANXZ
7?updateState@QPaintEngineEx@@UEAAXAEBVQPaintEngineState@@@Z
?drawRects@QPaintEngineEx@@UEAAXPEBVQRect@@H@Z
?drawLines@QPaintEngineEx@@UEAAXPEBVQLine@@H@Z
?drawPoints@QPaintEngineEx@@UEAAXPEBVQPoint@@H@Z
?drawPolygon@QPaintEngineEx@@UEAAXPEBVQPoint@@HW4PolygonDrawMode@QPaintEngine@@@Z
?drawTiledPixmap@QPaintEngineEx@@UEAAXAEBVQRectF@@AEBVQPixmap@@AEBVQPointF@@@Z
1%?replayClipOperations@QPaintEngineExPrivate@@QEAAXXZ
??1QDashStroker@@UEAA@XZ
"?qt_fontsmoothing_gamma@@3NA
??4QPixmap@@QEAAAEAV0@$$QEAV0@@Z
?hasAlpha@QPixmap@@QEBA_NXZ
"?qt_cleartype_enabled@@3_NA
?intersected@QRegion@@QEBA?AV1@AEBVQRect@@@Z
?intersects@QRegion@@QEBA_NAEBVQRect@@@Z
?controlPointRect@QVectorPath@@QEBA?AVQRectF@@XZ
??1QVectorPath@@QEAA@XZ
?isOpaque@QBrush@@QEBA_NXZ
?addCacheData@QVectorPath@@QEBAPEAUCacheEntry@1@PEAVQPaintEngineEx@@PEAXP6AX01@Z@Z
?lookupCacheData@QVectorPath@@QEBAPEAUCacheEntry@1@PEAVQPaintEngineEx@@@Z
?addRegion@QPainterPath@@QEAAXAEBVQRegion@@@Z
!?qtVectorPathForPath@@YAAEBVQVectorPath@@AEBVQPainterPath@@@Z
?hasClipOperations@QPaintEngineExPrivate@@QEBA_NXZ
$?rectCount@QRegion@@QEBAHXZ
??0QBrush@@QEAA@W4GlobalColor@Qt@@W4BrushStyle@2@@Z
'?setColor@QBrush@@QEAAXAEBVQColor@@@Z
?fromRgbF@QColor@@SA?AV1@NNNN@Z
1?subPixelPositionForX@QTextureGlyphCache@@QEBA?AUQFixed@@U2@@Z
-?setUserData@QStaticTextItem@@QEAAXPEAVQStaticTextUserData@@@Z
?fillInPendingGlyphs@QTextureGlyphCache@@QEAAXXZ
B!?populate@QTextureGlyphCache@@QEAA_NPEAVQFontEngine@@HPEBIPEBUQFixedPoint@@@Z
)?setGlyphCache@QFontEngine@@QEAAXPEAXPEAVQFontEngineGlyphCache@@@Z
?glyphCache@QFontEngine@@QEBAPEAVQFontEngineGlyphCache@@PEAXW4Type@2@AEBVQTransform@@@Z
??1QImageTextureGlyphCache@@UEAA@XZ
??0QImageTextureGlyphCache@@QEAA@AEBV0@@Z
?glyphMargin@QImageTextureGlyphCache@@UEBAHXZ
?drawStaticTextItem@QPaintEngineEx@@UEAAXPEAVQStaticTextItem@@@Z
??0QDashStroker@@QEAA@PEAVQStroker@@@Z
?lineTo@QStrokerOps@@QEAAXNN@Z
?moveTo@QStrokerOps@@QEAAXNN@Z
(?setDashPattern@QDashStroker@@QEAAXAEBV?$QVector@N@@@Z
3?toPolygon@QBezier@@QEBA?AVQPolygonF@@N@Z
?createTextureData@QImageTextureGlyphCache@@UEAAXHH@Z
?constBits@QImage@@QEBAPEBEXZ
%?resizeTextureData@QImageTextureGlyphCache@@UEAAXHH@Z
?fillTexture@QImageTextureGlyphCache@@UEAAXAEBUCoord@QTextureGlyphCache@@IUQFixed@@@Z
&3?textureMapForGlyph@QTextureGlyphCache@@QEBA?AVQImage@@IUQFixed@@@Z
??0QImageTextureGlyphCache@@QEAA@W4Type@QFontEngineGlyphCache@@AEBVQTransform@@@Z
?family@QFont@@QEBA?AVQString@@XZ
?handle@QFont@@QEBAPEAUHFONT__@@XZ
8?winId@QWidget@@QEBAPEAUHWND__@@XZ
"?qt_getRegisteredWndClass@@YA?BVQString@@XZ
?hPal@QColormap@@SAPEAUHPALETTE__@@XZ
?fromWinHBITMAP@QPixmap@@SA?AV1@PEAUHBITMAP__@@W4HBitmapFormat@1@@Z
.?show@QWidget@@QEAAXXZ
?move@QWidget@@QEAAXAEBVQPoint@@@Z
+?setParent@QWidget@@QEAAXPEAV1@V?$QFlags@W4WindowType@Qt@@@@@Z
8?windowFlags@QWidget@@QEBA?AV?$QFlags@W4WindowType@Qt@@@@XZ
S,?setRgb@QColor@@QEAAXHHHH@Z
 ?pixel@QColormap@@QEBAIAEBVQColor@@@Z
#?qt_metacast@QWidget@@UEAAPEAXPEBD@Z
"?qt_metacall@QWidget@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
0?staticMetaObject@QWidget@@2UQMetaObject@@B
#?qt_metacast@QGraphicsEffect@@UEAAPEAXPEBD@Z
P"?qt_metacall@QGraphicsEffect@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
K0?staticMetaObject@QGraphicsEffect@@2UQMetaObject@@B
QtGui4.dll
??1QString@@QEAA@XZ
?append@QString@@QEAAAEAV1@AEBV1@@Z
??0QString@@QEAA@AEBV0@@Z
?tr@QMetaObject@@QEBA?AVQString@@PEBD0@Z
?trUtf8@QMetaObject@@QEBA?AVQString@@PEBD0@Z
?tr@QMetaObject@@QEBA?AVQString@@PEBD0H@Z
?trUtf8@QMetaObject@@QEBA?AVQString@@PEBD0H@Z
??0QObject@@QEAA@PEAV0@@Z
?event@QObject@@UEAA_NPEAVQEvent@@@Z
?eventFilter@QObject@@UEAA_NPEAV1@PEAVQEvent@@@Z
?timerEvent@QObject@@MEAAXPEAVQTimerEvent@@@Z
?childEvent@QObject@@MEAAXPEAVQChildEvent@@@Z
?customEvent@QObject@@MEAAXPEAVQEvent@@@Z
?connectNotify@QObject@@MEAAXPEBD@Z
?disconnectNotify@QObject@@MEAAXPEBD@Z
??1QObject@@UEAA@XZ
?qstricmp@@YAHPEBD0@Z
?shared_null@QMapData@@2U1@A
?shared_null@QListData@@2UData@1@A
?shared_null@QHashData@@2U1@A
?shared_null@QVectorData@@2U1@A
??1QThreadStorageData@@QEAA@XZ
?nextNode@QHashData@@SAPEAUNode@1@PEAU21@@Z
?set@QThreadStorageData@@QEAAPEAPEAXPEAX@Z
$	?get@QThreadStorageData@@QEBAPEAPEAXXZ
?free@QString@@CAXPEAUData@1@@Z
?free@QVectorData@@SAXPEAU1@H@Z
??MQString@@QEBA_NAEBV0@@Z
?freeNode@QHashData@@QEAAXPEAX@Z
?allocate@QVectorData@@SAPEAU1@HH@Z
?unlock@QReadWriteLock@@QEAAXXZ
??0QReadLocker@@QEAA@PEAVQReadWriteLock@@@Z
?qWarning@@YAXPEBDZZ
?continueFreeData@QMapData@@QEAAXH@Z
?free_helper@QHashData@@QEAAXP6AXPEAUNode@1@@Z@Z
?registerType@QMetaType@@SAHPEBDP6AXPEAX@ZP6APEAXPEBX@Z@Z
?registerTypedef@QMetaType@@SAHPEBDH@Z
??1QByteArray@@QEAA@XZ
??1QDebug@@QEAA@XZ
?qFree@@YAXPEAX@Z
?number@QByteArray@@SA?AV1@HH@Z
??6QTextStream@@QEAAAEAV0@D@Z
??6QDebug@@QEAAAEAV0@PEBD@Z
?node_create@QMapData@@QEAAPEAUNode@1@QEAPEAU21@HH@Z
?allocateNode@QHashData@@QEAAPEAXH@Z
?qMemSet@@YAPEAXPEAXH_K@Z
?reallocate@QVectorData@@SAPEAU1@PEAU1@HHH@Z
?detach_helper2@QHashData@@QEAAPEAU1@P6AXPEAUNode@1@PEAX@ZP6AX0@ZHH@Z
?detach_grow@QListData@@QEAAPEAUData@1@PEAHH@Z
?detach@QListData@@QEAAPEAUData@1@H@Z
?connect@QObject@@SA_NPEBV1@PEBD01W4ConnectionType@Qt@@@Z
?maybeSpace@QDebug@@QEAAAEAV1@XZ
??6QTextStream@@QEAAAEAV0@H@Z
?currentThread@QThread@@SAPEAV1@XZ
??0QThreadStorageData@@QEAA@P6AXPEAX@Z@Z
?createData@QMapData@@SAPEAU1@H@Z
>	?grow@QVectorData@@SAHHHH_N@Z
?realloc@QListData@@QEAAXH@Z
?append@QListData@@QEAAPEAPEAXXZ
?moveToThread@QObject@@QEAAXPEAVQThread@@@Z
?thread@QObject@@QEBAPEAVQThread@@XZ
?self@QCoreApplication@@0PEAV1@EA
??0QMutex@@QEAA@W4RecursionMode@0@@Z
??1QMutex@@QEAA@XZ
d	?hasShrunk@QHashData@@QEAAXXZ
?rehash@QHashData@@QEAAXH@Z
??1QMutexLocker@@QEAA@XZ
?unlockInline@QMutex@@QEAAXXZ
??0QMutexLocker@@QEAA@PEAVQMutex@@@Z
	?indexOf@QByteArray@@QEBAHDH@Z
?append@QByteArray@@QEAAAEAV1@D@Z
?endsWith@QByteArray@@QEBA_ND@Z
??4QByteArray@@QEAAAEAV0@PEBD@Z
?remove@QListData@@QEAAXH@Z
?toAscii@QChar@@QEBA?BDXZ
??AQString@@QEBA?BVQChar@@H@Z
?endsWith@QString@@QEBA_NAEBVQLatin1String@@W4CaseSensitivity@Qt@@@Z
?split@QString@@QEBA?AVQStringList@@AEBVQChar@@W4SplitBehavior@1@W4CaseSensitivity@Qt@@@Z
??0QChar@@QEAA@UQLatin1Char@@@Z
?startsWith@QString@@QEBA_NAEBVQLatin1String@@W4CaseSensitivity@Qt@@@Z
?fromLatin1_helper@QString@@CAPEAUData@1@PEBDH@Z
?number@QString@@SA?AV1@HH@Z
?shared_null@QByteArray@@0UData@1@A
??1QWriteLocker@@QEAA@XZ
??0QWriteLocker@@QEAA@PEAVQReadWriteLock@@@Z
??1QReadLocker@@QEAA@XZ
?qgetenv@@YA?AVQByteArray@@PEBD@Z
??1QReadWriteLock@@QEAA@XZ
??0QReadWriteLock@@QEAA@XZ
?firstNode@QHashData@@QEAAPEAUNode@1@XZ
??1QFile@@UEAA@XZ
?close@QFile@@UEAAXXZ
?readAll@QIODevice@@QEAA?AVQByteArray@@XZ
?open@QFile@@UEAA_NV?$QFlags@W4OpenModeFlag@QIODevice@@@@@Z
??0QFile@@QEAA@AEBVQString@@@Z
?removeGuard@QMetaObject@@SAXPEAPEAVQObject@@@Z
?changeGuard@QMetaObject@@SAXPEAPEAVQObject@@PEAV2@@Z
??6QTextStream@@QEAAAEAV0@I@Z
?qDebug@@YA?AVQDebug@@XZ
?qDebug@@YAXPEBDZZ
??IQRect@@QEBA?AV0@AEBV0@@Z
?free@?$QVector@VQPointF@@@@AEAAXPEAU?$QVectorTypedData@VQPointF@@@@@Z
?toAlignedRect@QRectF@@QEBA?AVQRect@@XZ
??4?$QVector@VQPointF@@@@QEAAAEAV0@AEBV0@@Z
?qt_metacast@QObject@@UEAAPEAXPEBD@Z
?qt_metacall@QObject@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qMalloc@@YAPEAX_K@Z
?qRealloc@@YAPEAXPEAX_K@Z
?toPoint@QPointF@@QEBA?AVQPoint@@XZ
??0QRectF@@QEAA@AEBVQRect@@@Z
?detach_helper@?$QVector@VQPointF@@@@AEAAXXZ
??0QPointF@@QEAA@XZ
?willGrow@QHashData@@QEAA_NXZ
?translated@QRect@@QEBA?AV1@AEBVQPoint@@@Z
?qrand@@YAHXZ
?free@?$QVector@VQPoint@@@@AEAAXPEAU?$QVectorTypedData@VQPoint@@@@@Z
?toRect@QRectF@@QEBA?AVQRect@@XZ
?qWarning@@YA?AVQDebug@@XZ
??1?$QVector@VQPointF@@@@QEAA@XZ
?staticMetaObject@QObject@@2UQMetaObject@@B
?qMemCopy@@YAPEAXPEAXPEBX_K@Z
??1QObjectPrivate@@UEAA@XZ
?shared_null@QString@@0UData@1@A
??0QObjectPrivate@@QEAA@H@Z
?toLocal8Bit@QString@@QEBA?AVQByteArray@@XZ
?objectName@QObject@@QEBA?AVQString@@XZ
??4QString@@QEAAAEAV0@$$QEAV0@@Z
?fromLatin1@QString@@SA?AV1@PEBDH@Z
?contains@QByteArray@@QEBA?AVQBool@@PEBD@Z
??0QByteArray@@QEAA@PEBD@Z
??0QObject@@IEAA@AEAVQObjectPrivate@@PEAV0@@Z
?toLatin1@QString@@QEBA?AVQByteArray@@XZ
??6QDebug@@QEAAAEAV0@AEBVQString@@@Z
?cast@QMetaObject@@QEBAPEAVQObject@@PEAV2@@Z
?disconnect@QObject@@SA_NPEBV1@PEBD01@Z
?sender@QObject@@IEBAPEAV1@XZ
?append@QByteArray@@QEAAAEAV1@AEBV1@@Z
?append@QByteArray@@QEAAAEAV1@PEBD@Z
?killTimer@QObject@@QEAAXH@Z
?metaObject@QObject@@UEBAPEBUQMetaObject@@XZ
?startTimer@QObject@@QEAAHH@Z
??0QRect@@QEAA@AEBVQPoint@@0@Z
??4QByteArray@@QEAAAEAV0@AEBV0@@Z
?isWidgetType@QObject@@QEBA_NXZ
?qAddPostRoutine@@YAXP6AXXZ@Z
?isNull@QByteArray@@QEBA_NXZ
??6@YA?AVQDebug@@V0@PEBVQObject@@@Z
??6QDebug@@QEAAAEAV0@_N@Z
??6@YA?AVQDebug@@V0@AEBVQSize@@@Z
??4QByteArray@@QEAAAEAV0@$$QEAV0@@Z
?peek@QIODevice@@QEAA?AVQByteArray@@_J@Z
??1QBuffer@@UEAA@XZ
?open@QBuffer@@UEAA_NV?$QFlags@W4OpenModeFlag@QIODevice@@@@@Z
??0QBuffer@@QEAA@PEAVQByteArray@@PEAVQObject@@@Z
?fromRawData@QByteArray@@SA?AV1@PEBDH@Z
?unlock@QMutexLocker@@QEAAXXZ
?erase@QListData@@QEAAPEAPEAXPEAPEAX@Z
?resize@QString@@QEAAXH@Z
?realloc@QString@@AEAAXXZ
?realloc@QString@@AEAAXH@Z
	?insert@QListData@@QEAAPEAPEAXH@Z
?clear@QByteArray@@QEAAXXZ
?qCritical@@YA?AVQDebug@@XZ
?move@QListData@@QEAAXHH@Z
??4QString@@QEAAAEAV0@AEBVQLatin1String@@@Z
??6QTextStream@@QEAAAEAV0@AEBVQByteArray@@@Z
?qCritical@@YAXPEBDZZ
?qFatal@@YAXPEBDZZ
?qt_sine_table@@3QBNB
??0QRectF@@QEAA@NNNN@Z
??UQRect@@QEBA?AV0@AEBV0@@Z
?addGuard@QMetaObject@@SAXPEAPEAVQObject@@@Z
??1QBitArray@@QEAA@XZ
?at@QBitArray@@QEBA_NH@Z
?setBit@QBitArray@@QEAAXH@Z
??0QBitArray@@QEAA@H_N@Z
?at@?$QVector@VQPointF@@@@QEBAAEBVQPointF@@H@Z
?append@QString@@QEAAAEAV1@AEBVQLatin1String@@@Z
	?indexOf@QByteArray@@QEBAHPEBDH@Z
?detach@QByteArray@@QEAAXXZ
?utf16@QString@@QEBAPEBGXZ
?qWinAppInst@@YAPEAUHINSTANCE__@@XZ
?qErrnoWarning@@YAXPEBDZZ
?currentThreadId@QThread@@SAPEAXXZ
?parent@QObject@@QEBAPEAV1@XZ
?contains@QString@@QEBA?AVQBool@@AEBV1@W4CaseSensitivity@Qt@@@Z
?activate@QMetaObject@@SAXPEAVQObject@@PEBU1@HPEAPEAX@Z
QtCore4.dll
HeapAlloc
GetProcessHeap
HeapFree
HeapReAlloc
GetProcAddress
GetModuleHandleA
RtlLookupFunctionEntry
RtlUnwindEx
DecodePointer
EncodePointer
GetLastError
GetCurrentThreadId
FlsSetValue
GetCommandLineA
FlsGetValue
FlsFree
SetLastError
GetCurrentThread
FlsAlloc
RaiseException
RtlPcToFileHeader
TerminateProcess
GetCurrentProcess
UnhandledExceptionFilter
SetUnhandledExceptionFilter
IsDebuggerPresent
RtlVirtualUnwind
RtlCaptureContext
WriteFile
GetStdHandle
GetModuleFileNameW
GetLocaleInfoW
HeapSize
GetModuleHandleW
ExitProcess
HeapSetInformation
GetVersion
HeapCreate
HeapDestroy
SetHandleCount
InitializeCriticalSectionAndSpinCount
GetFileType
GetStartupInfoW
DeleteCriticalSection
GetModuleFileNameA
FreeEnvironmentStringsW
WideCharToMultiByte
GetEnvironmentStringsW
QueryPerformanceCounter
GetTickCount
GetCurrentProcessId
GetSystemTimeAsFileTime
GetCPInfo
GetOEMCP
IsValidCodePage
LeaveCriticalSection
FatalAppExitA
EnterCriticalSection
SetConsoleCtrlHandler
LoadLibraryW
FreeLibrary
LCMapStringW
MultiByteToWideChar
GetStringTypeW
GetUserDefaultLCID
GetLocaleInfoA
EnumSystemLocalesA
IsValidLocale
KERNEL32.dll
QtOpenGL4.dll
??0QGL2PaintEngineEx@@QEAA@XZ
??0QGLBuffer@@QEAA@AEBV0@@Z
??0QGLBuffer@@QEAA@W4Type@0@@Z
??0QGLBuffer@@QEAA@XZ
??0QGLColormap@@QEAA@AEBV0@@Z
??0QGLColormap@@QEAA@XZ
??0QGLContext@@QEAA@AEBVQGLFormat@@@Z
??0QGLContext@@QEAA@AEBVQGLFormat@@PEAVQPaintDevice@@@Z
??0QGLContextGroupResourceBase@@QEAA@AEBV0@@Z
??0QGLContextGroupResourceBase@@QEAA@XZ
??0QGLContextResourceBase@@QEAA@AEBV0@@Z
??0QGLContextResourceBase@@QEAA@XZ
??0QGLCustomShaderStage@@QEAA@AEBV0@@Z
??0QGLCustomShaderStage@@QEAA@XZ
??0QGLEngineShaderManager@@QEAA@PEAVQGLContext@@@Z
??0QGLEngineSharedShaders@@QEAA@AEBV0@@Z
??0QGLEngineSharedShaders@@QEAA@PEBVQGLContext@@@Z
??0QGLFormat@@QEAA@AEBV0@@Z
??0QGLFormat@@QEAA@V?$QFlags@W4FormatOption@QGL@@@@H@Z
??0QGLFormat@@QEAA@XZ
??0QGLFramebufferObject@@QEAA@AEBVQSize@@AEBVQGLFramebufferObjectFormat@@@Z
??0QGLFramebufferObject@@QEAA@AEBVQSize@@I@Z
??0QGLFramebufferObject@@QEAA@AEBVQSize@@W4Attachment@0@II@Z
??0QGLFramebufferObject@@QEAA@HHAEBVQGLFramebufferObjectFormat@@@Z
??0QGLFramebufferObject@@QEAA@HHI@Z
??0QGLFramebufferObject@@QEAA@HHW4Attachment@0@II@Z
??0QGLFramebufferObjectFormat@@QEAA@AEBV0@@Z
??0QGLFramebufferObjectFormat@@QEAA@XZ
??0QGLFunctions@@QEAA@PEBVQGLContext@@@Z
??0QGLFunctions@@QEAA@XZ
??0QGLGraphicsSystem@@QEAA@AEBV0@@Z
??0QGLGraphicsSystem@@QEAA@_N@Z
??0QGLPaintDevice@@QEAA@XZ
??0QGLPixelBuffer@@QEAA@AEBVQSize@@AEBVQGLFormat@@PEAVQGLWidget@@@Z
??0QGLPixelBuffer@@QEAA@HHAEBVQGLFormat@@PEAVQGLWidget@@@Z
??0QGLPixmapData@@QEAA@W4PixelType@QPixmapData@@@Z
??0QGLShader@@QEAA@V?$QFlags@W4ShaderTypeBit@QGLShader@@@@PEAVQObject@@@Z
??0QGLShader@@QEAA@V?$QFlags@W4ShaderTypeBit@QGLShader@@@@PEBVQGLContext@@PEAVQObject@@@Z
??0QGLShaderProgram@@QEAA@PEAVQObject@@@Z
??0QGLShaderProgram@@QEAA@PEBVQGLContext@@PEAVQObject@@@Z
??0QGLShareContextScope@@QEAA@PEBVQGLContext@@@Z
??0QGLSharedResourceGuard@@QEAA@PEBVQGLContext@@@Z
??0QGLSharedResourceGuard@@QEAA@PEBVQGLContext@@I@Z
??0QGLSignalProxy@@QEAA@XZ
??0QGLTextureGlyphCache@@QEAA@AEBV0@@Z
??0QGLTextureGlyphCache@@QEAA@PEBVQGLContext@@W4Type@QFontEngineGlyphCache@@AEBVQTransform@@@Z
??0QGLWidget@@QEAA@AEBVQGLFormat@@PEAVQWidget@@PEBV0@V?$QFlags@W4WindowType@Qt@@@@@Z
??0QGLWidget@@QEAA@PEAVQGLContext@@PEAVQWidget@@PEBV0@V?$QFlags@W4WindowType@Qt@@@@@Z
??0QGLWidget@@QEAA@PEAVQWidget@@PEBV0@V?$QFlags@W4WindowType@Qt@@@@@Z
??0QGLWindowSurface@@QEAA@PEAVQWidget@@@Z
??0QGraphicsShaderEffect@@QEAA@PEAVQObject@@@Z
??1QGL2PaintEngineEx@@UEAA@XZ
??1QGLBuffer@@QEAA@XZ
??1QGLColormap@@QEAA@XZ
??1QGLContext@@UEAA@XZ
??1QGLContextGroupResourceBase@@UEAA@XZ
??1QGLContextResourceBase@@UEAA@XZ
??1QGLCustomShaderStage@@UEAA@XZ
??1QGLEngineShaderManager@@UEAA@XZ
??1QGLEngineSharedShaders@@QEAA@XZ
??1QGLFormat@@QEAA@XZ
??1QGLFramebufferObject@@UEAA@XZ
??1QGLFramebufferObjectFormat@@QEAA@XZ
??1QGLFunctions@@QEAA@XZ
??1QGLGraphicsSystem@@UEAA@XZ
??1QGLPaintDevice@@UEAA@XZ
??1QGLPixelBuffer@@UEAA@XZ
??1QGLPixmapData@@UEAA@XZ
??1QGLShader@@UEAA@XZ
??1QGLShaderProgram@@UEAA@XZ
??1QGLShareContextScope@@QEAA@XZ
??1QGLSharedResourceGuard@@QEAA@XZ
??1QGLSignalProxy@@UEAA@XZ
??1QGLTextureGlyphCache@@UEAA@XZ
??1QGLWidget@@UEAA@XZ
??1QGLWindowSurface@@UEAA@XZ
??1QGraphicsShaderEffect@@UEAA@XZ
??4QGLBuffer@@QEAAAEAV0@AEBV0@@Z
??4QGLColormap@@QEAAAEAV0@AEBV0@@Z
??4QGLContextGroupResourceBase@@QEAAAEAV0@AEBV0@@Z
??4QGLContextResourceBase@@QEAAAEAV0@AEBV0@@Z
??4QGLCustomShaderStage@@QEAAAEAV0@AEBV0@@Z
??4QGLEngineSharedShaders@@QEAAAEAV0@AEBV0@@Z
??4QGLFormat@@QEAAAEAV0@AEBV0@@Z
??4QGLFramebufferObjectFormat@@QEAAAEAV0@AEBV0@@Z
??4QGLFunctions@@QEAAAEAV0@AEBV0@@Z
??4QGLGraphicsSystem@@QEAAAEAV0@AEBV0@@Z
??4QGLShareContextScope@@QEAAAEAV0@AEBV0@@Z
??4QGLSharedResourceGuard@@QEAAAEAV0@AEBV0@@Z
??6@YA?AVQDebug@@V0@AEBVQGLFormat@@@Z
??8@YA_NAEBVQGLFormat@@0@Z
??8QGLFramebufferObjectFormat@@QEBA_NAEBV0@@Z
??9@YA_NAEBVQGLFormat@@0@Z
??9QGLFramebufferObjectFormat@@QEBA_NAEBV0@@Z
??BQGLShareContextScope@@QEAAPEAVQGLContext@@XZ
??CQGLShareContextScope@@QEAAPEAVQGLContext@@XZ
??_7QGL2PaintEngineEx@@6B@
??_7QGLContext@@6B@
??_7QGLContextGroupResourceBase@@6B@
??_7QGLContextResourceBase@@6B@
??_7QGLCustomShaderStage@@6B@
??_7QGLEngineShaderManager@@6B@
??_7QGLFramebufferObject@@6B@
??_7QGLGraphicsSystem@@6B@
??_7QGLPaintDevice@@6B@
??_7QGLPixelBuffer@@6B@
??_7QGLPixmapData@@6B@
??_7QGLShader@@6B@
??_7QGLShaderProgram@@6B@
??_7QGLSignalProxy@@6B@
??_7QGLTextureGlyphCache@@6BQGLContextGroupResourceBase@@@
??_7QGLTextureGlyphCache@@6BQImageTextureGlyphCache@@@
??_7QGLWidget@@6BQObject@@@
??_7QGLWidget@@6BQPaintDevice@@@
??_7QGLWindowSurface@@6BQObject@@@
??_7QGLWindowSurface@@6BQWindowSurface@@@
??_7QGraphicsShaderEffect@@6B@
??_FQGLShaderProgram@@QEAAXXZ
??_FQGLWidget@@QEAAXXZ
??_FQGraphicsShaderEffect@@QEAAXXZ
?aboutToDestroyContext@QGLSignalProxy@@IEAAXPEBVQGLContext@@@Z
?accum@QGLFormat@@QEBA_NXZ
?accumBufferSize@QGLFormat@@QEBAHXZ
?addShader@QGLShaderProgram@@QEAA_NPEAVQGLShader@@@Z
?addShaderFromSourceCode@QGLShaderProgram@@QEAA_NV?$QFlags@W4ShaderTypeBit@QGLShader@@@@AEBVQByteArray@@@Z
?addShaderFromSourceCode@QGLShaderProgram@@QEAA_NV?$QFlags@W4ShaderTypeBit@QGLShader@@@@AEBVQString@@@Z
?addShaderFromSourceCode@QGLShaderProgram@@QEAA_NV?$QFlags@W4ShaderTypeBit@QGLShader@@@@PEBD@Z
?addShaderFromSourceFile@QGLShaderProgram@@QEAA_NV?$QFlags@W4ShaderTypeBit@QGLShader@@@@AEBVQString@@@Z
?allocate@QGLBuffer@@QEAAXH@Z
?allocate@QGLBuffer@@QEAAXPEBXH@Z
?alpha@QGLFormat@@QEBA_NXZ
?alphaBufferSize@QGLFormat@@QEBAHXZ
?alphaRequested@QGLPaintDevice@@UEBA_NXZ
?areSharing@QGLContext@@SA_NPEBV1@0@Z
?attachment@QGLFramebufferObject@@QEBA?AW4Attachment@1@XZ
?attachment@QGLFramebufferObjectFormat@@QEBA?AW4Attachment@QGLFramebufferObject@@XZ
?attributeLocation@QGLShaderProgram@@QEBAHAEBVQByteArray@@@Z
?attributeLocation@QGLShaderProgram@@QEBAHAEBVQString@@@Z
?attributeLocation@QGLShaderProgram@@QEBAHPEBD@Z
?autoBufferSwap@QGLWidget@@IEBA_NXZ
?begin@QGL2PaintEngineEx@@UEAA_NPEAVQPaintDevice@@@Z
?beginNativePainting@QGL2PaintEngineEx@@UEAAXXZ
?beginPaint@QGLPaintDevice@@UEAAXXZ
?beginPaint@QGLWindowSurface@@UEAAXAEBVQRegion@@@Z
?bind@QGLBuffer@@QEAA_NXZ
?bind@QGLFramebufferObject@@QEAA_NXZ
?bind@QGLPixmapData@@QEBAI_N@Z
?bind@QGLShaderProgram@@QEAA_NXZ
?bindAttributeLocation@QGLShaderProgram@@QEAAXAEBVQByteArray@@H@Z
?bindAttributeLocation@QGLShaderProgram@@QEAAXAEBVQString@@H@Z
?bindAttributeLocation@QGLShaderProgram@@QEAAXPEBDH@Z
?bindDefault@QGLFramebufferObject@@SA_NXZ
?bindTexture@QGLContext@@QEAAIAEBVQImage@@IH@Z
?bindTexture@QGLContext@@QEAAIAEBVQImage@@IHV?$QFlags@W4BindOption@QGLContext@@@@@Z
?bindTexture@QGLContext@@QEAAIAEBVQPixmap@@IH@Z
?bindTexture@QGLContext@@QEAAIAEBVQPixmap@@IHV?$QFlags@W4BindOption@QGLContext@@@@@Z
?bindTexture@QGLContext@@QEAAIAEBVQString@@@Z
?bindTexture@QGLPixelBuffer@@QEAAIAEBVQImage@@I@Z
?bindTexture@QGLPixelBuffer@@QEAAIAEBVQPixmap@@I@Z
?bindTexture@QGLPixelBuffer@@QEAAIAEBVQString@@@Z
?bindTexture@QGLWidget@@QEAAIAEBVQImage@@IH@Z
?bindTexture@QGLWidget@@QEAAIAEBVQImage@@IHV?$QFlags@W4BindOption@QGLContext@@@@@Z
?bindTexture@QGLWidget@@QEAAIAEBVQPixmap@@IH@Z
?bindTexture@QGLWidget@@QEAAIAEBVQPixmap@@IHV?$QFlags@W4BindOption@QGLContext@@@@@Z
?bindTexture@QGLWidget@@QEAAIAEBVQString@@@Z
?bindToDynamicTexture@QGLPixelBuffer@@QEAA_NI@Z
?blitFramebuffer@QGLFramebufferObject@@SAXPEAV1@AEBVQRect@@01II@Z
?blitProgram@QGLEngineShaderManager@@QEAAPEAVQGLShaderProgram@@XZ
?blitProgram@QGLEngineSharedShaders@@QEAAPEAVQGLShaderProgram@@XZ
?blueBufferSize@QGLFormat@@QEBAHXZ
?brushChanged@QGL2PaintEngineEx@@UEAAXXZ
?brushOriginChanged@QGL2PaintEngineEx@@UEAAXXZ
?buffer@QGLWindowSurface@@UEAAPEAVQImage@@PEBVQWidget@@@Z
?bufferId@QGLBuffer@@QEBAIXZ
?chooseContext@QGLContext@@MEAA_NPEBV1@@Z
?choosePixelFormat@QGLContext@@MEAAHPEAXPEAUHDC__@@@Z
?cleanup@QGLColormap@@CAXPEAUQGLColormapData@1@@Z
?cleanup@QGLContextGroupResourceBase@@QEAAXPEBVQGLContext@@@Z
?cleanup@QGLContextGroupResourceBase@@QEAAXPEBVQGLContext@@PEAX@Z
?cleanupCustomStage@QGLEngineSharedShaders@@QEAAXPEAVQGLCustomShaderStage@@@Z
?clear@QGLTextureGlyphCache@@QEAAXXZ
?clip@QGL2PaintEngineEx@@UEAAXAEBVQVectorPath@@W4ClipOperation@Qt@@@Z
?clipEnabledChanged@QGL2PaintEngineEx@@UEAAXXZ
?colorIndex@QGLContext@@IEBAIAEBVQColor@@@Z
?colormap@QGLWidget@@QEBAAEBVQGLColormap@@XZ
?compileSourceCode@QGLShader@@QEAA_NAEBVQByteArray@@@Z
?compileSourceCode@QGLShader@@QEAA_NAEBVQString@@@Z
?compileSourceCode@QGLShader@@QEAA_NPEBD@Z
?compileSourceFile@QGLShader@@QEAA_NAEBVQString@@@Z
?compositionModeChanged@QGL2PaintEngineEx@@UEAAXXZ
?context@QGLSharedResourceGuard@@QEBAPEBVQGLContext@@XZ
?context@QGLTextureGlyphCache@@QEBAPEBVQGLContext@@XZ
?context@QGLWidget@@QEBAPEBVQGLContext@@XZ
?context@QGLWindowSurface@@QEBAPEAVQGLContext@@XZ
?contextDeleted@QGLContextGroupResourceBase@@UEAAXPEBVQGLContext@@@Z
?contextDeleted@QGLTextureGlyphCache@@UEAAXPEBVQGLContext@@@Z
?convertToGLFormat@QGLWidget@@SA?AVQImage@@AEBV2@@Z
?copy@QGLPixmapData@@UEAAXPEBVQPixmapData@@AEBVQRect@@@Z
?copyBackFromRenderFbo@QGLPixmapData@@AEBAX_N@Z
?create@QGLBuffer@@QEAA_NXZ
?create@QGLContext@@UEAA_NPEBV1@@Z
?createCompatiblePixmapData@QGLPixmapData@@UEBAPEAVQPixmapData@@XZ
?createPixmapData@QGLGraphicsSystem@@UEBAPEAVQPixmapData@@W4PixelType@2@@Z
?createPixmapForImage@QGLPixmapData@@AEAAXAEAVQImage@@V?$QFlags@W4ImageConversionFlag@Qt@@@@_N@Z
?createState@QGL2PaintEngineEx@@UEBAPEAVQPainterState@@PEAV2@@Z
?createTextureData@QGLTextureGlyphCache@@UEAAXHH@Z
?createWindowSurface@QGLGraphicsSystem@@UEBAPEAVQWindowSurface@@PEAVQWidget@@@Z
?currentContext@QGLContext@@SAPEBV1@XZ
?currentCtx@QGLContext@@1PEAV1@EA
?currentProgram@QGLEngineShaderManager@@QEAAPEAVQGLShaderProgram@@XZ
?d_func@QGL2PaintEngineEx@@AEAAPEAVQGL2PaintEngineExPrivate@@XZ
?d_func@QGL2PaintEngineEx@@AEBAPEBVQGL2PaintEngineExPrivate@@XZ
?d_func@QGLBuffer@@AEAAPEAVQGLBufferPrivate@@XZ
?d_func@QGLBuffer@@AEBAPEBVQGLBufferPrivate@@XZ
?d_func@QGLContext@@AEAAPEAVQGLContextPrivate@@XZ
?d_func@QGLContext@@AEBAPEBVQGLContextPrivate@@XZ
?d_func@QGLCustomShaderStage@@AEAAPEAVQGLCustomShaderStagePrivate@@XZ
?d_func@QGLCustomShaderStage@@AEBAPEBVQGLCustomShaderStagePrivate@@XZ
?d_func@QGLFramebufferObject@@AEAAPEAVQGLFramebufferObjectPrivate@@XZ
?d_func@QGLFramebufferObject@@AEBAPEBVQGLFramebufferObjectPrivate@@XZ
?d_func@QGLPixelBuffer@@AEAAPEAVQGLPixelBufferPrivate@@XZ
?d_func@QGLPixelBuffer@@AEBAPEBVQGLPixelBufferPrivate@@XZ
?d_func@QGLShader@@AEAAPEAVQGLShaderPrivate@@XZ
?d_func@QGLShader@@AEBAPEBVQGLShaderPrivate@@XZ
?d_func@QGLShaderProgram@@AEAAPEAVQGLShaderProgramPrivate@@XZ
?d_func@QGLShaderProgram@@AEBAPEBVQGLShaderProgramPrivate@@XZ
?d_func@QGLWidget@@AEAAPEAVQGLWidgetPrivate@@XZ
?d_func@QGLWidget@@AEBAPEBVQGLWidgetPrivate@@XZ
?d_func@QGraphicsShaderEffect@@AEAAPEAVQGraphicsShaderEffectPrivate@@XZ
?d_func@QGraphicsShaderEffect@@AEBAPEBVQGraphicsShaderEffectPrivate@@XZ
?defaultFormat@QGLFormat@@SA?AV1@XZ
?defaultOverlayFormat@QGLFormat@@SA?AV1@XZ
?deleteTexture@QGLContext@@QEAAXI@Z
?deleteTexture@QGLPixelBuffer@@QEAAXI@Z
?deleteTexture@QGLWidget@@QEAAXI@Z
?deleted@QGLWindowSurface@@AEAAXPEAVQObject@@@Z
?depth@QGLFormat@@QEBA_NXZ
?depthBufferSize@QGLFormat@@QEBAHXZ
?destroy@QGLBuffer@@QEAAXXZ
?detach@QGLColormap@@QEAAXXZ
?detach@QGLFormat@@AEAAXXZ
?detach@QGLFramebufferObjectFormat@@AEAAXXZ
?detach_helper@QGLColormap@@AEAAXXZ
?devType@QGLFramebufferObject@@MEBAHXZ
?devType@QGLPaintDevice@@UEBAHXZ
?devType@QGLPixelBuffer@@MEBAHXZ
?device@QGLContext@@QEBAPEAVQPaintDevice@@XZ
?deviceIsPixmap@QGLContext@@IEBA_NXZ
?directRendering@QGLFormat@@QEBA_NXZ
?disableAttributeArray@QGLShaderProgram@@QEAAXH@Z
?disableAttributeArray@QGLShaderProgram@@QEAAXPEBD@Z
?doneCurrent@QGLContext@@UEAAXXZ
?doneCurrent@QGLPixelBuffer@@QEAA_NXZ
?doneCurrent@QGLWidget@@QEAAXXZ
?doubleBuffer@QGLFormat@@QEBA_NXZ
?doubleBuffer@QGLWidget@@QEBA_NXZ
?draw@QGraphicsShaderEffect@@MEAAXPEAVQPainter@@@Z
?drawImage@QGL2PaintEngineEx@@UEAAXAEBVQRectF@@AEBVQImage@@0V?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
?drawPixmap@QGL2PaintEngineEx@@UEAAXAEBVQRectF@@AEBVQPixmap@@0@Z
?drawPixmapFragments@QGL2PaintEngineEx@@UEAAXPEBVPixmapFragment@QPainter@@HAEBVQPixmap@@V?$QFlags@W4PixmapFragmentHint@QPainter@@@@@Z
?drawPixmapFragments@QGL2PaintEngineEx@@UEAAXPEBVQRectF@@0HAEBVQPixmap@@V?$QFlags@W4PixmapFragmentHint@QPainter@@@@@Z
?drawStaticTextItem@QGL2PaintEngineEx@@UEAAXPEAVQStaticTextItem@@@Z
?drawTextItem@QGL2PaintEngineEx@@UEAAXAEBVQPointF@@AEBVQTextItem@@@Z
?drawTexture@QGL2PaintEngineEx@@QEAA_NAEBVQRectF@@IAEBVQSize@@0@Z
?drawTexture@QGLContext@@QEAAXAEBVQPointF@@II@Z
?drawTexture@QGLContext@@QEAAXAEBVQRectF@@II@Z
?drawTexture@QGLFramebufferObject@@QEAAXAEBVQPointF@@II@Z
?drawTexture@QGLFramebufferObject@@QEAAXAEBVQRectF@@II@Z
?drawTexture@QGLPixelBuffer@@QEAAXAEBVQPointF@@II@Z
?drawTexture@QGLPixelBuffer@@QEAAXAEBVQRectF@@II@Z
?drawTexture@QGLWidget@@QEAAXAEBVQPointF@@II@Z
?drawTexture@QGLWidget@@QEAAXAEBVQRectF@@II@Z
?emitAboutToDestroyContext@QGLSignalProxy@@QEAAXPEBVQGLContext@@@Z
?enableAttributeArray@QGLShaderProgram@@QEAAXH@Z
?enableAttributeArray@QGLShaderProgram@@QEAAXPEBD@Z
?end@QGL2PaintEngineEx@@UEAA_NXZ
?endNativePainting@QGL2PaintEngineEx@@UEAAXXZ
?endPaint@QGLPaintDevice@@UEAAXXZ
?endPaint@QGLWindowSurface@@UEAAXAEBVQRegion@@@Z
?ensureActive@QGL2PaintEngineEx@@QEAAXXZ
?ensureActiveTarget@QGLPaintDevice@@UEAAXXZ
?ensureCreated@QGLPixmapData@@AEBAXXZ
?entryColor@QGLColormap@@QEBA?AVQColor@@H@Z
?entryRgb@QGLColormap@@QEBAIH@Z
?event@QGLWidget@@MEAA_NPEAVQEvent@@@Z
?features@QGLWindowSurface@@UEBA?AV?$QFlags@W4WindowSurfaceFeature@QWindowSurface@@@@XZ
?fill@QGL2PaintEngineEx@@UEAAXAEBVQVectorPath@@AEBVQBrush@@@Z
?fill@QGLPixmapData@@UEAAXAEBVQColor@@@Z
?fillColor@QGLPixmapData@@AEBA?AVQColor@@XZ
?fillImage@QGLPixmapData@@AEBA?AVQImage@@AEBVQColor@@@Z
?fillTexture@QGLTextureGlyphCache@@UEAAXAEBUCoord@QTextureGlyphCache@@IUQFixed@@@Z
?filterMode@QGLTextureGlyphCache@@QEBA?AW4FilterMode@1@XZ
?find@QGLColormap@@QEBAHI@Z
?findNearest@QGLColormap@@QEBAHI@Z
?findProgramInCache@QGLEngineSharedShaders@@QEAAPEAVQGLEngineShaderProg@@AEBV2@@Z
?flush@QGLWindowSurface@@UEAAXPEAVQWidget@@AEBVQRegion@@AEBVQPoint@@@Z
?fontDisplayListBase@QGLWidget@@IEAAHAEBVQFont@@H@Z
?format@QGLContext@@QEBA?AVQGLFormat@@XZ
?format@QGLFramebufferObject@@QEBA?AVQGLFramebufferObjectFormat@@XZ
?format@QGLPaintDevice@@UEBA?AVQGLFormat@@XZ
?format@QGLPixelBuffer@@QEBA?AVQGLFormat@@XZ
?format@QGLWidget@@QEBA?AVQGLFormat@@XZ
?freeResource@QGLTextureGlyphCache@@UEAAXPEAX@Z
?fromData@QGLPixmapData@@UEAA_NPEBEIPEBDV?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
?fromFile@QGLPixmapData@@UEAA_NAEBVQString@@PEBDV?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
?fromImage@QGLPixmapData@@UEAAXAEBVQImage@@V?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
?fromImageReader@QGLPixmapData@@UEAAXPEAVQImageReader@@V?$QFlags@W4ImageConversionFlag@Qt@@@@@Z
?generateDynamicTexture@QGLPixelBuffer@@QEBAIXZ
?generateFontDisplayLists@QGLContext@@IEAAXAEBVQFont@@H@Z
?geometryInputType@QGLShaderProgram@@QEBAIXZ
?geometryOutputType@QGLShaderProgram@@QEBAIXZ
?geometryOutputVertexCount@QGLShaderProgram@@QEBAHXZ
?getDevice@QGLPaintDevice@@SAPEAV1@PEAVQPaintDevice@@@Z
?getProcAddress@QGLContext@@QEBAPEAXAEBVQString@@@Z
?getUniformLocation@QGLEngineShaderManager@@QEAAIW4Uniform@1@@Z
?glActiveTexture@QGLFunctions@@QEAAXI@Z
?glAttachShader@QGLFunctions@@QEAAXII@Z
?glBindAttribLocation@QGLFunctions@@QEAAXIIPEBD@Z
?glBindBuffer@QGLFunctions@@QEAAXII@Z
?glBindFramebuffer@QGLFunctions@@QEAAXII@Z
?glBindRenderbuffer@QGLFunctions@@QEAAXII@Z
?glBlendColor@QGLFunctions@@QEAAXMMMM@Z
?glBlendEquation@QGLFunctions@@QEAAXI@Z
?glBlendEquationSeparate@QGLFunctions@@QEAAXII@Z
?glBlendFuncSeparate@QGLFunctions@@QEAAXIIII@Z
?glBufferData@QGLFunctions@@QEAAXI_JPEBXI@Z
?glBufferSubData@QGLFunctions@@QEAAXI_J0PEBX@Z
?glCheckFramebufferStatus@QGLFunctions@@QEAAII@Z
?glClearDepthf@QGLFunctions@@QEAAXM@Z
?glCompileShader@QGLFunctions@@QEAAXI@Z
?glCompressedTexImage2D@QGLFunctions@@QEAAXIHIHHHHPEBX@Z
?glCompressedTexSubImage2D@QGLFunctions@@QEAAXIHHHHHIHPEBX@Z
?glCreateProgram@QGLFunctions@@QEAAIXZ
?glCreateShader@QGLFunctions@@QEAAII@Z
?glDeleteBuffers@QGLFunctions@@QEAAXHPEBI@Z
?glDeleteFramebuffers@QGLFunctions@@QEAAXHPEBI@Z
?glDeleteProgram@QGLFunctions@@QEAAXI@Z
?glDeleteRenderbuffers@QGLFunctions@@QEAAXHPEBI@Z
?glDeleteShader@QGLFunctions@@QEAAXI@Z
?glDepthRangef@QGLFunctions@@QEAAXMM@Z
?glDetachShader@QGLFunctions@@QEAAXII@Z
?glDevice@QGLPixmapData@@QEBAPEAVQGLPaintDevice@@XZ
?glDisableVertexAttribArray@QGLFunctions@@QEAAXI@Z
?glDraw@QGLWidget@@MEAAXXZ
?glEnableVertexAttribArray@QGLFunctions@@QEAAXI@Z
?glFramebufferRenderbuffer@QGLFunctions@@QEAAXIIII@Z
?glFramebufferTexture2D@QGLFunctions@@QEAAXIIIIH@Z
?glGenBuffers@QGLFunctions@@QEAAXHPEAI@Z
?glGenFramebuffers@QGLFunctions@@QEAAXHPEAI@Z
?glGenRenderbuffers@QGLFunctions@@QEAAXHPEAI@Z
?glGenerateMipmap@QGLFunctions@@QEAAXI@Z
?glGetActiveAttrib@QGLFunctions@@QEAAXIIHPEAH0PEAIPEAD@Z
?glGetActiveUniform@QGLFunctions@@QEAAXIIHPEAH0PEAIPEAD@Z
?glGetAttachedShaders@QGLFunctions@@QEAAXIHPEAHPEAI@Z
?glGetAttribLocation@QGLFunctions@@QEAAHIPEBD@Z
?glGetBufferParameteriv@QGLFunctions@@QEAAXIIPEAH@Z
?glGetFramebufferAttachmentParameteriv@QGLFunctions@@QEAAXIIIPEAH@Z
?glGetProgramInfoLog@QGLFunctions@@QEAAXIHPEAHPEAD@Z
?glGetProgramiv@QGLFunctions@@QEAAXIIPEAH@Z
?glGetRenderbufferParameteriv@QGLFunctions@@QEAAXIIPEAH@Z
?glGetShaderInfoLog@QGLFunctions@@QEAAXIHPEAHPEAD@Z
?glGetShaderPrecisionFormat@QGLFunctions@@QEAAXIIPEAH0@Z
?glGetShaderSource@QGLFunctions@@QEAAXIHPEAHPEAD@Z
?glGetShaderiv@QGLFunctions@@QEAAXIIPEAH@Z
?glGetUniformLocation@QGLFunctions@@QEAAHIPEBD@Z
?glGetUniformfv@QGLFunctions@@QEAAXIHPEAM@Z
?glGetUniformiv@QGLFunctions@@QEAAXIHPEAH@Z
?glGetVertexAttribPointerv@QGLFunctions@@QEAAXIIPEAPEAX@Z
?glGetVertexAttribfv@QGLFunctions@@QEAAXIIPEAM@Z
?glGetVertexAttribiv@QGLFunctions@@QEAAXIIPEAH@Z
?glInit@QGLWidget@@MEAAXXZ
?glIsBuffer@QGLFunctions@@QEAAEI@Z
?glIsFramebuffer@QGLFunctions@@QEAAEI@Z
?glIsProgram@QGLFunctions@@QEAAEI@Z
?glIsRenderbuffer@QGLFunctions@@QEAAEI@Z
?glIsShader@QGLFunctions@@QEAAEI@Z
?glLinkProgram@QGLFunctions@@QEAAXI@Z
?glReleaseShaderCompiler@QGLFunctions@@QEAAXXZ
?glRenderbufferStorage@QGLFunctions@@QEAAXIIHH@Z
?glSampleCoverage@QGLFunctions@@QEAAXME@Z
?glShaderBinary@QGLFunctions@@QEAAXHPEBIIPEBXH@Z
?glShaderSource@QGLFunctions@@QEAAXIHPEAPEBDPEBH@Z
?glStencilFuncSeparate@QGLFunctions@@QEAAXIIHI@Z
?glStencilMaskSeparate@QGLFunctions@@QEAAXII@Z
?glStencilOpSeparate@QGLFunctions@@QEAAXIIII@Z
?glUniform1f@QGLFunctions@@QEAAXHM@Z
?glUniform1fv@QGLFunctions@@QEAAXHHPEBM@Z
?glUniform1i@QGLFunctions@@QEAAXHH@Z
?glUniform1iv@QGLFunctions@@QEAAXHHPEBH@Z
?glUniform2f@QGLFunctions@@QEAAXHMM@Z
?glUniform2fv@QGLFunctions@@QEAAXHHPEBM@Z
?glUniform2i@QGLFunctions@@QEAAXHHH@Z
?glUniform2iv@QGLFunctions@@QEAAXHHPEBH@Z
?glUniform3f@QGLFunctions@@QEAAXHMMM@Z
?glUniform3fv@QGLFunctions@@QEAAXHHPEBM@Z
?glUniform3i@QGLFunctions@@QEAAXHHHH@Z
?glUniform3iv@QGLFunctions@@QEAAXHHPEBH@Z
?glUniform4f@QGLFunctions@@QEAAXHMMMM@Z
?glUniform4fv@QGLFunctions@@QEAAXHHPEBM@Z
?glUniform4i@QGLFunctions@@QEAAXHHHHH@Z
?glUniform4iv@QGLFunctions@@QEAAXHHPEBH@Z
?glUniformMatrix2fv@QGLFunctions@@QEAAXHHEPEBM@Z
?glUniformMatrix3fv@QGLFunctions@@QEAAXHHEPEBM@Z
?glUniformMatrix4fv@QGLFunctions@@QEAAXHHEPEBM@Z
?glUseProgram@QGLFunctions@@QEAAXI@Z
?glValidateProgram@QGLFunctions@@QEAAXI@Z
?glVertexAttrib1f@QGLFunctions@@QEAAXIM@Z
?glVertexAttrib1fv@QGLFunctions@@QEAAXIPEBM@Z
?glVertexAttrib2f@QGLFunctions@@QEAAXIMM@Z
?glVertexAttrib2fv@QGLFunctions@@QEAAXIPEBM@Z
?glVertexAttrib3f@QGLFunctions@@QEAAXIMMM@Z
?glVertexAttrib3fv@QGLFunctions@@QEAAXIPEBM@Z
?glVertexAttrib4f@QGLFunctions@@QEAAXIMMMM@Z
?glVertexAttrib4fv@QGLFunctions@@QEAAXIPEBM@Z
?glVertexAttribPointer@QGLFunctions@@QEAAXIHIEHPEBX@Z
?glyphPadding@QGLTextureGlyphCache@@UEBAHXZ
?grabFrameBuffer@QGLWidget@@QEAA?AVQImage@@_N@Z
?greenBufferSize@QGLFormat@@QEBAHXZ
?handle@QGLColormap@@IEAAPEAXXZ
?handle@QGLFramebufferObject@@QEBAIXZ
?handle@QGLPixelBuffer@@QEBAPEAXXZ
?hasAlphaChannel@QGLPixmapData@@UEBA_NXZ
?hasComplexGeometry@QGLEngineShaderManager@@QEBA_NXZ
?hasOpenGL@QGLFormat@@SA_NXZ
?hasOpenGLFeature@QGLFunctions@@QEBA_NW4OpenGLFeature@1@@Z
?hasOpenGLFramebufferBlit@QGLFramebufferObject@@SA_NXZ
?hasOpenGLFramebufferObjects@QGLFramebufferObject@@SA_NXZ
?hasOpenGLOverlays@QGLFormat@@SA_NXZ
?hasOpenGLPbuffers@QGLPixelBuffer@@SA_NXZ
?hasOpenGLShaderPrograms@QGLShaderProgram@@SA_NPEBVQGLContext@@@Z
?hasOpenGLShaders@QGLShader@@SA_NV?$QFlags@W4ShaderTypeBit@QGLShader@@@@PEBVQGLContext@@@Z
?hasOverlay@QGLFormat@@QEBA_NXZ
?height@QGLTextureGlyphCache@@QEBAHXZ
?hijackWindow@QGLWindowSurface@@AEAAXPEAVQWidget@@@Z
?id@QGLSharedResourceGuard@@QEBAIXZ
?init@QGLShaderProgram@@AEAA_NXZ
?initializeGL@QGLWidget@@MEAAXXZ
?initializeGLFunctions@QGLFunctions@@QEAAXPEBVQGLContext@@@Z
?initializeOffscreenTexture@QGLWindowSurface@@AEAA_NAEBVQSize@@@Z
?initializeOverlayGL@QGLWidget@@MEAAXXZ
?initialized@QGLContext@@IEBA_NXZ
?insert@QGLContextGroupResourceBase@@QEAAXPEBVQGLContext@@PEAX@Z
?insert@QGLContextResourceBase@@QEAAXPEBVQGLContext@@PEAX@Z
?instance@QGLSignalProxy@@SAPEAV1@XZ
?internalTextureFormat@QGLFramebufferObjectFormat@@QEBAIXZ
?invalidateState@QGL2PaintEngineEx@@QEAAXXZ
?isBound@QGLFramebufferObject@@QEBA_NXZ
?isCompiled@QGLShader@@QEBA_NXZ
?isCreated@QGLBuffer@@QEBA_NXZ
?isEmpty@QGLColormap@@QEBA_NXZ
?isFlipped@QGLPaintDevice@@UEBA_NXZ
?isInitialized@QGLFunctions@@CA_NPEBUQGLFunctionsPrivate@@@Z
?isLinked@QGLShaderProgram@@QEBA_NXZ
?isNativePaintingActive@QGL2PaintEngineEx@@QEBA_NXZ
?isSharing@QGLContext@@QEBA_NXZ
?isSharing@QGLWidget@@QEBA_NXZ
?isUninitialized@QGLPixmapData@@AEBA_NXZ
?isValid@QGLContext@@QEBA_NXZ
?isValid@QGLFramebufferObject@@QEBA_NXZ
?isValid@QGLPixelBuffer@@QEBA_NXZ
?isValid@QGLPixmapData@@AEBA_NXZ
?isValid@QGLWidget@@QEBA_NXZ
?isValidContext@QGLPixmapData@@QEBA_NPEBVQGLContext@@@Z
?link@QGLShaderProgram@@UEAA_NXZ
?log@QGLShader@@QEBA?AVQString@@XZ
?log@QGLShaderProgram@@QEBA?AVQString@@XZ
?majorVersion@QGLFormat@@QEBAHXZ
?makeCurrent@QGLContext@@UEAAXXZ
?makeCurrent@QGLPixelBuffer@@QEAA_NXZ
?makeCurrent@QGLWidget@@QEAAXXZ
?makeOverlayCurrent@QGLWidget@@QEAAXXZ
?map@QGLBuffer@@QEAAPEAXW4Access@1@@Z
?maxGeometryOutputVertices@QGLShaderProgram@@QEBAHXZ
?maxTextureHeight@QGLTextureGlyphCache@@UEBAHXZ
?maxTextureWidth@QGLTextureGlyphCache@@UEBAHXZ
?metaObject@QGLEngineShaderManager@@UEBAPEBUQMetaObject@@XZ
?metaObject@QGLShader@@UEBAPEBUQMetaObject@@XZ
?metaObject@QGLShaderProgram@@UEBAPEBUQMetaObject@@XZ
?metaObject@QGLSignalProxy@@UEBAPEBUQMetaObject@@XZ
?metaObject@QGLWidget@@UEBAPEBUQMetaObject@@XZ
?metaObject@QGLWindowSurface@@UEBAPEBUQMetaObject@@XZ
?metaObject@QGraphicsShaderEffect@@UEBAPEBUQMetaObject@@XZ
?metric@QGLFramebufferObject@@MEBAHW4PaintDeviceMetric@QPaintDevice@@@Z
?metric@QGLPaintDevice@@MEBAHW4PaintDeviceMetric@QPaintDevice@@@Z
?metric@QGLPixelBuffer@@MEBAHW4PaintDeviceMetric@QPaintDevice@@@Z
?metric@QGLPixmapData@@UEBAHW4PaintDeviceMetric@QPaintDevice@@@Z
?minorVersion@QGLFormat@@QEBAHXZ
?mipmap@QGLFramebufferObjectFormat@@QEBA_NXZ
?needsFill@QGLPixmapData@@AEBA_NXZ
?opacityChanged@QGL2PaintEngineEx@@UEAAXXZ
?openGLFeatures@QGLFunctions@@QEBA?AV?$QFlags@W4OpenGLFeature@QGLFunctions@@@@XZ
?openGLVersionFlags@QGLFormat@@SA?AV?$QFlags@W4OpenGLVersionFlag@QGLFormat@@@@XZ
?optimiseForBrushTransform@QGLEngineShaderManager@@QEAAXW4TransformationType@QTransform@@@Z
?overlayContext@QGLWidget@@QEBAPEBVQGLContext@@XZ
?overlayTransparentColor@QGLContext@@QEBA?AVQColor@@XZ
?paintDevice@QGLWindowSurface@@UEAAPEAVQPaintDevice@@XZ
?paintEngine@QGLFramebufferObject@@UEBAPEAVQPaintEngine@@XZ
?paintEngine@QGLPixelBuffer@@UEBAPEAVQPaintEngine@@XZ
?paintEngine@QGLPixmapData@@UEBAPEAVQPaintEngine@@XZ
?paintEngine@QGLWidget@@UEBAPEAVQPaintEngine@@XZ
?paintEvent@QGLWidget@@MEAAXPEAVQPaintEvent@@@Z
?paintGL@QGLWidget@@MEAAXXZ
?paintOverlayGL@QGLWidget@@MEAAXXZ
?penChanged@QGL2PaintEngineEx@@UEAAXXZ
?pixelShaderFragment@QGraphicsShaderEffect@@QEBA?AVQByteArray@@XZ
?pixmapFilter@QGL2PaintEngineEx@@UEAAPEAVQPixmapFilter@@HPEBV2@@Z
?plane@QGLFormat@@QEBAHXZ
?profile@QGLFormat@@QEBA?AW4OpenGLContextProfile@1@XZ
?programId@QGLShaderProgram@@QEBAIXZ
?qShaderSnippets@QGLEngineSharedShaders@@0PAPEBDA
?qglClearColor@QGLWidget@@QEBAXAEBVQColor@@@Z
?qglColor@QGLWidget@@QEBAXAEBVQColor@@@Z
?qt_destroy_gl_share_widget@@YAXXZ
?qt_gl_share_widget@@YAPEAVQGLWidget@@XZ
?qt_gl_transfer_context@@YAPEBVQGLContext@@PEBV1@@Z
?qt_metacall@QGLEngineShaderManager@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacall@QGLShader@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacall@QGLShaderProgram@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacall@QGLSignalProxy@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacall@QGLWidget@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacall@QGLWindowSurface@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacall@QGraphicsShaderEffect@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
?qt_metacast@QGLEngineShaderManager@@UEAAPEAXPEBD@Z
?qt_metacast@QGLShader@@UEAAPEAXPEBD@Z
?qt_metacast@QGLShaderProgram@@UEAAPEAXPEBD@Z
?qt_metacast@QGLSignalProxy@@UEAAPEAXPEBD@Z
?qt_metacast@QGLWidget@@UEAAPEAXPEBD@Z
?qt_metacast@QGLWindowSurface@@UEAAPEAXPEBD@Z
?qt_metacast@QGraphicsShaderEffect@@UEAAPEAXPEBD@Z
?qt_qgl_paint_engine@@YAPEAVQPaintEngine@@XZ
?qt_resolve_buffer_extensions@@YA_NPEAVQGLContext@@@Z
?qt_resolve_version_2_0_functions@@YA_NPEAVQGLContext@@@Z
?qt_static_metacall@QGLEngineShaderManager@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?qt_static_metacall@QGLShader@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?qt_static_metacall@QGLShaderProgram@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?qt_static_metacall@QGLSignalProxy@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?qt_static_metacall@QGLWidget@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?qt_static_metacall@QGLWindowSurface@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?qt_static_metacall@QGraphicsShaderEffect@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
?read@QGLBuffer@@QEAA_NHPEAXH@Z
?redBufferSize@QGLFormat@@QEBAHXZ
?release@QGLBuffer@@QEAAXXZ
?release@QGLBuffer@@SAXW4Type@1@@Z
?release@QGLFramebufferObject@@QEAA_NXZ
?release@QGLShaderProgram@@QEAAXXZ
?releaseFromDynamicTexture@QGLPixelBuffer@@QEAAXXZ
?removeAllShaders@QGLShaderProgram@@QEAAXXZ
?removeCustomStage@QGLEngineShaderManager@@QEAAXXZ
?removeFromPainter@QGLCustomShaderStage@@QEAAXPEAVQPainter@@@Z
?removeShader@QGLShaderProgram@@QEAAXPEAVQGLShader@@@Z
?renderHintsChanged@QGL2PaintEngineEx@@UEAAXXZ
?renderPixmap@QGLWidget@@QEAA?AVQPixmap@@HH_N@Z
?renderText@QGLWidget@@QEAAXHHAEBVQString@@AEBVQFont@@H@Z
?renderText@QGLWidget@@QEAAXNNNAEBVQString@@AEBVQFont@@H@Z
?requestedFormat@QGLContext@@QEBA?AVQGLFormat@@XZ
?reset@QGLContext@@QEAAXXZ
?resize@QGLPixmapData@@UEAAXHH@Z
?resizeEvent@QGLWidget@@MEAAXPEAVQResizeEvent@@@Z
?resizeGL@QGLWidget@@MEAAXHH@Z
?resizeOverlayGL@QGLWidget@@MEAAXHH@Z
?resizeTextureData@QGLTextureGlyphCache@@UEAAXHH@Z
?rgba@QGLFormat@@QEBA_NXZ
?sampleBuffers@QGLFormat@@QEBA_NXZ
?samples@QGLFormat@@QEBAHXZ
?samples@QGLFramebufferObjectFormat@@QEBAHXZ
?scroll@QGLPixmapData@@UEAA_NHHAEBVQRect@@@Z
?scroll@QGLWindowSurface@@UEAA_NAEBVQRegion@@HH@Z
?serialNumber@QGLTextureGlyphCache@@QEBAHXZ
?setAccum@QGLFormat@@QEAAX_N@Z
?setAccumBufferSize@QGLFormat@@QEAAXH@Z
?setAlpha@QGLFormat@@QEAAX_N@Z
?setAlphaBufferSize@QGLFormat@@QEAAXH@Z
?setAttachment@QGLFramebufferObjectFormat@@QEAAXW4Attachment@QGLFramebufferObject@@@Z
?setAttributeArray@QGLShaderProgram@@QEAAXHIPEBXHH@Z
?setAttributeArray@QGLShaderProgram@@QEAAXHPEBMHH@Z
?setAttributeArray@QGLShaderProgram@@QEAAXHPEBVQVector2D@@H@Z
?setAttributeArray@QGLShaderProgram@@QEAAXHPEBVQVector3D@@H@Z
?setAttributeArray@QGLShaderProgram@@QEAAXHPEBVQVector4D@@H@Z
?setAttributeArray@QGLShaderProgram@@QEAAXPEBDIPEBXHH@Z
?setAttributeArray@QGLShaderProgram@@QEAAXPEBDPEBMHH@Z
?setAttributeArray@QGLShaderProgram@@QEAAXPEBDPEBVQVector2D@@H@Z
?setAttributeArray@QGLShaderProgram@@QEAAXPEBDPEBVQVector3D@@H@Z
?setAttributeArray@QGLShaderProgram@@QEAAXPEBDPEBVQVector4D@@H@Z
?setAttributeBuffer@QGLShaderProgram@@QEAAXHIHHH@Z
?setAttributeBuffer@QGLShaderProgram@@QEAAXPEBDIHHH@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHAEBVQColor@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHAEBVQVector2D@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHAEBVQVector3D@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHAEBVQVector4D@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHMM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHMMM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHMMMM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXHPEBMHH@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDAEBVQColor@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDAEBVQVector2D@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDAEBVQVector3D@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDAEBVQVector4D@@@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDMM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDMMM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDMMMM@Z
?setAttributeValue@QGLShaderProgram@@QEAAXPEBDPEBMHH@Z
?setAutoBufferSwap@QGLWidget@@IEAAX_N@Z
?setBlueBufferSize@QGLFormat@@QEAAXH@Z
?setColormap@QGLWidget@@QEAAXAEBVQGLColormap@@@Z
?setCompositionMode@QGLEngineShaderManager@@QEAAXW4CompositionMode@QPainter@@@Z
?setContext@QGLSharedResourceGuard@@QEAAXPEBVQGLContext@@@Z
?setContext@QGLTextureGlyphCache@@QEAAXPEBVQGLContext@@@Z
?setContext@QGLWidget@@QEAAXPEAVQGLContext@@PEBV2@_N@Z
?setCustomStage@QGLEngineShaderManager@@QEAAXPEAVQGLCustomShaderStage@@@Z
?setDefaultFormat@QGLFormat@@SAXAEBV1@@Z
?setDefaultOverlayFormat@QGLFormat@@SAXAEBV1@@Z
?setDepth@QGLFormat@@QEAAX_N@Z
?setDepthBufferSize@QGLFormat@@QEAAXH@Z
?setDevice@QGLContext@@IEAAXPEAVQPaintDevice@@@Z
?setDirectRendering@QGLFormat@@QEAAX_N@Z
?setDirty@QGLEngineShaderManager@@QEAAXXZ
?setDoubleBuffer@QGLFormat@@QEAAX_N@Z
?setEntries@QGLColormap@@QEAAXHPEBIH@Z
?setEntry@QGLColormap@@QEAAXHAEBVQColor@@@Z
?setEntry@QGLColormap@@QEAAXHI@Z
?setFilterMode@QGLTextureGlyphCache@@QEAAXW4FilterMode@1@@Z
?setFormat@QGLContext@@QEAAXAEBVQGLFormat@@@Z
?setFormat@QGLWidget@@QEAAXAEBVQGLFormat@@@Z
?setGeometry@QGLWindowSurface@@UEAAXAEBVQRect@@@Z
?setGeometryInputType@QGLShaderProgram@@QEAAXI@Z
?setGeometryOutputType@QGLShaderProgram@@QEAAXI@Z
?setGeometryOutputVertexCount@QGLShaderProgram@@QEAAXH@Z
?setGreenBufferSize@QGLFormat@@QEAAXH@Z
?setHandle@QGLColormap@@IEAAXPEAX@Z
?setHasComplexGeometry@QGLEngineShaderManager@@QEAAX_N@Z
?setId@QGLSharedResourceGuard@@QEAAXI@Z
?setInactive@QGLCustomShaderStage@@QEAAXXZ
?setInitialized@QGLContext@@IEAAX_N@Z
?setInternalTextureFormat@QGLFramebufferObjectFormat@@QEAAXI@Z
?setMaskType@QGLEngineShaderManager@@QEAAXW4MaskType@1@@Z
?setMipmap@QGLFramebufferObjectFormat@@QEAAX_N@Z
?setMouseTracking@QGLWidget@@QEAAX_N@Z
?setOnPainter@QGLCustomShaderStage@@QEAA_NPEAVQPainter@@@Z
?setOpacityMode@QGLEngineShaderManager@@QEAAXW4OpacityMode@1@@Z
?setOption@QGLFormat@@QEAAXV?$QFlags@W4FormatOption@QGL@@@@@Z
?setOverlay@QGLFormat@@QEAAX_N@Z
?setPaintEnginePrivate@QGLTextureGlyphCache@@QEAAXPEAVQGL2PaintEngineExPrivate@@@Z
?setPixelShaderFragment@QGraphicsShaderEffect@@QEAAXAEBVQByteArray@@@Z
?setPlane@QGLFormat@@QEAAXH@Z
?setPreferredPaintEngine@QGL@@YAXW4Type@QPaintEngine@@@Z
?setProfile@QGLFormat@@QEAAXW4OpenGLContextProfile@1@@Z
?setRedBufferSize@QGLFormat@@QEAAXH@Z
?setRgba@QGLFormat@@QEAAX_N@Z
?setSampleBuffers@QGLFormat@@QEAAX_N@Z
?setSamples@QGLFormat@@QEAAXH@Z
?setSamples@QGLFramebufferObjectFormat@@QEAAXH@Z
?setSource@QGLCustomShaderStage@@IEAAXAEBVQByteArray@@@Z
?setSrcPixelType@QGLEngineShaderManager@@QEAAXW4BrushStyle@Qt@@@Z
?setSrcPixelType@QGLEngineShaderManager@@QEAAXW4PixelSrcType@1@@Z
?setState@QGL2PaintEngineEx@@UEAAXPEAVQPainterState@@@Z
?setStencil@QGLFormat@@QEAAX_N@Z
?setStencilBufferSize@QGLFormat@@QEAAXH@Z
?setStereo@QGLFormat@@QEAAX_N@Z
?setSwapInterval@QGLFormat@@QEAAXH@Z
?setTextureCacheLimit@QGLContext@@SAXH@Z
?setTextureTarget@QGLFramebufferObjectFormat@@QEAAXI@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$01$01N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$01$02N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$01$03N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$02$01N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$02$02N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$02$03N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$03$01N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBV?$QGenericMatrix@$03$02N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQColor@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQMatrix4x4@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQPoint@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQPointF@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQSize@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQSizeF@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQTransform@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQVector2D@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQVector3D@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHAEBVQVector4D@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXHH@Z
?setUniformValue@QGLShaderProgram@@QEAAXHI@Z
?setUniformValue@QGLShaderProgram@@QEAAXHM@Z
?setUniformValue@QGLShaderProgram@@QEAAXHMM@Z
?setUniformValue@QGLShaderProgram@@QEAAXHMMM@Z
?setUniformValue@QGLShaderProgram@@QEAAXHMMMM@Z
?setUniformValue@QGLShaderProgram@@QEAAXHQEAY01$$CBM@Z
?setUniformValue@QGLShaderProgram@@QEAAXHQEAY02$$CBM@Z
?setUniformValue@QGLShaderProgram@@QEAAXHQEAY03$$CBM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$01$01N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$01$02N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$01$03N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$02$01N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$02$02N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$02$03N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$03$01N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBV?$QGenericMatrix@$03$02N@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQColor@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQMatrix4x4@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQPoint@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQPointF@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQSize@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQSizeF@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQTransform@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQVector2D@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQVector3D@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDAEBVQVector4D@@@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDH@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDI@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDMM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDMMM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDMMMM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDQEAY01$$CBM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDQEAY02$$CBM@Z
?setUniformValue@QGLShaderProgram@@QEAAXPEBDQEAY03$$CBM@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBHH@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBIH@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBMHH@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$01$01N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$01$02N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$01$03N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$02$01N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$02$02N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$02$03N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$03$01N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBV?$QGenericMatrix@$03$02N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBVQMatrix4x4@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBVQVector2D@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBVQVector3D@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXHPEBVQVector4D@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBHH@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBIH@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBMHH@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$01$01N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$01$02N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$01$03N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$02$01N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$02$02N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$02$03N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$03$01N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBV?$QGenericMatrix@$03$02N@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBVQMatrix4x4@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBVQVector2D@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBVQVector3D@@H@Z
?setUniformValueArray@QGLShaderProgram@@QEAAXPEBDPEBVQVector4D@@H@Z
?setUniforms@QGLCustomShaderStage@@UEAAXPEAVQGLShaderProgram@@@Z
?setUniforms@QGraphicsShaderEffect@@MEAAXPEAVQGLShaderProgram@@@Z
?setUniformsDirty@QGLCustomShaderStage@@QEAAXXZ
?setUniformsDirty@QGraphicsShaderEffect@@IEAAXXZ
?setUsagePattern@QGLBuffer@@QEAAXW4UsagePattern@1@@Z
?setValid@QGLContext@@IEAAX_N@Z
?setVersion@QGLFormat@@QEAAXHH@Z
?setWindowCreated@QGLContext@@IEAAX_N@Z
?shaderDestroyed@QGLShaderProgram@@AEAAXXZ
?shaderId@QGLShader@@QEBAIXZ
?shaderType@QGLShader@@QEBA?AV?$QFlags@W4ShaderTypeBit@QGLShader@@@@XZ
?shaders@QGLShaderProgram@@QEBA?AV?$QList@PEAVQGLShader@@@@XZ
?shadersForContext@QGLEngineSharedShaders@@SAPEAV1@PEBVQGLContext@@@Z
?shared_null@QGLColormap@@0UQGLColormapData@1@A
?simpleProgram@QGLEngineShaderManager@@QEAAPEAVQGLShaderProgram@@XZ
?simpleProgram@QGLEngineSharedShaders@@QEAAPEAVQGLShaderProgram@@XZ
?size@QGLBuffer@@QEBAHXZ
?size@QGLColormap@@QEBAHXZ
?size@QGLFramebufferObject@@QEBA?AVQSize@@XZ
?size@QGLPixelBuffer@@QEBA?AVQSize@@XZ
?size@QGLPixmapData@@AEBA?AVQSize@@XZ
?source@QGLCustomShaderStage@@QEBA?AVQByteArray@@XZ
?sourceCode@QGLShader@@QEBA?AVQByteArray@@XZ
?state@QGL2PaintEngineEx@@QEAAPEAVQOpenGL2PaintEngineState@@XZ
?state@QGL2PaintEngineEx@@QEBAPEBVQOpenGL2PaintEngineState@@XZ
?staticMetaObject@QGLEngineShaderManager@@2UQMetaObject@@B
?staticMetaObject@QGLEngineSharedShaders@@2UQMetaObject@@B
?staticMetaObject@QGLShader@@2UQMetaObject@@B
?staticMetaObject@QGLShaderProgram@@2UQMetaObject@@B
?staticMetaObject@QGLSignalProxy@@2UQMetaObject@@B
?staticMetaObject@QGLWidget@@2UQMetaObject@@B
?staticMetaObject@QGLWindowSurface@@2UQMetaObject@@B
?staticMetaObject@QGraphicsShaderEffect@@2UQMetaObject@@B
?staticMetaObjectExtraData@QGLEngineShaderManager@@0UQMetaObjectExtraData@@B
?staticMetaObjectExtraData@QGLShader@@0UQMetaObjectExtraData@@B
?staticMetaObjectExtraData@QGLShaderProgram@@0UQMetaObjectExtraData@@B
?staticMetaObjectExtraData@QGLSignalProxy@@0UQMetaObjectExtraData@@B
?staticMetaObjectExtraData@QGLWidget@@0UQMetaObjectExtraData@@B
?staticMetaObjectExtraData@QGLWindowSurface@@0UQMetaObjectExtraData@@B
?staticMetaObjectExtraData@QGraphicsShaderEffect@@0UQMetaObjectExtraData@@B
?stencil@QGLFormat@@QEBA_NXZ
?stencilBufferSize@QGLFormat@@QEBAHXZ
?stereo@QGLFormat@@QEBA_NXZ
?stroke@QGL2PaintEngineEx@@UEAAXAEBVQVectorPath@@AEBVQPen@@@Z
?supportsTransformations@QGL2PaintEngineEx@@UEBA_NNAEBVQTransform@@@Z
?surfaceFormat@QGLWindowSurface@@2VQGLFormat@@A
?swapBehavior@QGLWindowSurface@@2W4SwapMode@1@A
?swapBuffers@QGLContext@@UEBAXXZ
?swapBuffers@QGLWidget@@QEAAXXZ
?swapInterval@QGLFormat@@QEBAHXZ
?testOption@QGLFormat@@QEBA_NV?$QFlags@W4FormatOption@QGL@@@@@Z
?texture@QGLFramebufferObject@@QEBAIXZ
?texture@QGLPixmapData@@QEBAPEAVQGLTexture@@XZ
?texture@QGLTextureGlyphCache@@QEBAIXZ
?textureCacheLimit@QGLContext@@SAHXZ
?textureTarget@QGLFramebufferObjectFormat@@QEBAIXZ
?toImage@QGLFramebufferObject@@QEBA?AVQImage@@XZ
?toImage@QGLPixelBuffer@@QEBA?AVQImage@@XZ
?toImage@QGLPixmapData@@UEBA?AVQImage@@XZ
?tr@QGLEngineShaderManager@@SA?AVQString@@PEBD0@Z
?tr@QGLEngineShaderManager@@SA?AVQString@@PEBD0H@Z
?tr@QGLShader@@SA?AVQString@@PEBD0@Z
?tr@QGLShader@@SA?AVQString@@PEBD0H@Z
?tr@QGLShaderProgram@@SA?AVQString@@PEBD0@Z
?tr@QGLShaderProgram@@SA?AVQString@@PEBD0H@Z
?tr@QGLSignalProxy@@SA?AVQString@@PEBD0@Z
?tr@QGLSignalProxy@@SA?AVQString@@PEBD0H@Z
?tr@QGLWidget@@SA?AVQString@@PEBD0@Z
?tr@QGLWidget@@SA?AVQString@@PEBD0H@Z
?tr@QGLWindowSurface@@SA?AVQString@@PEBD0@Z
?tr@QGLWindowSurface@@SA?AVQString@@PEBD0H@Z
?tr@QGraphicsShaderEffect@@SA?AVQString@@PEBD0@Z
?tr@QGraphicsShaderEffect@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGLEngineShaderManager@@SA?AVQString@@PEBD0@Z
?trUtf8@QGLEngineShaderManager@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGLShader@@SA?AVQString@@PEBD0@Z
?trUtf8@QGLShader@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGLShaderProgram@@SA?AVQString@@PEBD0@Z
?trUtf8@QGLShaderProgram@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGLSignalProxy@@SA?AVQString@@PEBD0@Z
?trUtf8@QGLSignalProxy@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGLWidget@@SA?AVQString@@PEBD0@Z
?trUtf8@QGLWidget@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGLWindowSurface@@SA?AVQString@@PEBD0@Z
?trUtf8@QGLWindowSurface@@SA?AVQString@@PEBD0H@Z
?trUtf8@QGraphicsShaderEffect@@SA?AVQString@@PEBD0@Z
?trUtf8@QGraphicsShaderEffect@@SA?AVQString@@PEBD0H@Z
?transformChanged@QGL2PaintEngineEx@@UEAAXXZ
?type@QGL2PaintEngineEx@@UEBA?AW4Type@QPaintEngine@@XZ
?type@QGLBuffer@@QEBA?AW4Type@1@XZ
?uniformLocation@QGLShaderProgram@@QEBAHAEBVQByteArray@@@Z
?uniformLocation@QGLShaderProgram@@QEBAHAEBVQString@@@Z
?uniformLocation@QGLShaderProgram@@QEBAHPEBD@Z
?unmap@QGLBuffer@@QEAA_NXZ
?updateDynamicTexture@QGLPixelBuffer@@QEBAXI@Z
?updateGL@QGLWidget@@UEAAXXZ
?updateGeometry@QGLWindowSurface@@QEAAXXZ
?updateOverlayGL@QGLWidget@@UEAAXXZ
?usagePattern@QGLBuffer@@QEBA?AW4UsagePattern@1@XZ
?useBlitProgram@QGLEngineShaderManager@@QEAAXXZ
?useCorrectShaderProg@QGLEngineShaderManager@@QEAA_NXZ
?useFramebufferObjects@QGLPixmapData@@AEBA_NXZ
?useSimpleProgram@QGLEngineShaderManager@@QEAAXXZ
?value@QGLContextGroupResourceBase@@QEAAPEAXPEBVQGLContext@@@Z
?value@QGLContextResourceBase@@QEAAPEAXPEBVQGLContext@@@Z
?width@QGLTextureGlyphCache@@QEBAHXZ
?windowCreated@QGLContext@@IEBA_NXZ
?write@QGLBuffer@@QEAAXHPEBXH@Z
.?AVQGLSignalProxy@@
.?AVQObject@@
.?AVQGLCustomShaderStage@@
.?AVQGLTextureDestroyer@@
.?AVQGLWidget@@
.?AVQWidget@@
.?AVQPaintDevice@@
.?AVQGLWidgetPrivate@@
.?AVQWidgetPrivate@@
.?AVQObjectPrivate@@
.?AVQObjectData@@
.?AVQGLContextResourceBase@@
.?AVQGLContextGroupResourceBase@@
.?AVQGLContext@@
.?AV?$QGLContextGroupResource@UQGLFunctionsPrivateEx@@@@
.?AVQGLPBufferGLPaintDevice@@
.?AVQGLPaintDevice@@
.?AVQGLPixelBuffer@@
.?AVQGLFBOGLPaintDevice@@
.?AVQGLFramebufferObject@@
.?AVQGLWidgetGLPaintDevice@@
.?AVQGLOffscreen@@
.?AVQGLPrivateCleanup@@
.?AVQOpenGLPaintEngine@@
.?AVQPaintEngineEx@@
.?AVQPaintEngine@@
.?AVQOpenGLTessellator@@
.?AVQTessellator@@
.?AVQOpenGLTrapezoidToArrayTessellator@@
.?AVQGLMaskGenerator@@
.?AVQGLTrapezoidMaskGenerator@@
.?AVQGLPathMaskGenerator@@
.?AVQGLRectMaskGenerator@@
.?AVQGLLineMaskGenerator@@
.?AVQGLEllipseMaskGenerator@@
.?AVQOpenGLPaintEngineState@@
.?AVQPainterState@@
.?AVQPaintEngineState@@
.?AVQOpenGLPaintEnginePrivate@@
.?AVQPaintEngineExPrivate@@
.?AVQPaintEnginePrivate@@
.?AVQOpenGLImmediateModeTessellator@@
.?AVQGLGlyphCache@@
.?AVQGLProgramCache@@
.?AVQGLGradientCache@@
.?AVQGLShader@@
.?AVQGLShaderProgram@@
.?AVQGLShaderPrivate@@
.?AVQGLShaderProgramPrivate@@
.?AVQGLPixmapFilterBase@@
.?AVQGLGraphicsSystem@@
.?AVQGraphicsSystem@@
.?AV?$QGLPixmapFilter@VQPixmapConvolutionFilter@@@@
.?AVQPixmapConvolutionFilter@@
.?AVQPixmapFilter@@
.?AVQGLPixmapConvolutionFilter@@
.?AV?$QGLPixmapFilter@VQPixmapBlurFilter@@@@
.?AVQPixmapBlurFilter@@
.?AV?$QGLContextGroupResource@VQGLBlurTextureCache@@@@
.?AV?$QGLPixmapFilter@VQPixmapDropShadowFilter@@@@
.?AVQPixmapDropShadowFilter@@
.?AVQImage@@
.?AV?$QGLPixmapFilter@VQPixmapColorizeFilter@@@@
.?AVQPixmapColorizeFilter@@
.?AVQGLPixmapBlurFilter@@
.?AVQGLPixmapDropShadowFilter@@
.?AVQGLPixmapColorizeFilter@@
.?AVQGLBlurTextureCache@@
.?AVQGLCustomShaderEffectStage@@
.?AVQGraphicsShaderEffectPrivate@@
.?AVQGraphicsEffectPrivate@@
.?AVQGraphicsShaderEffect@@
.?AVQGraphicsEffect@@
.?AVQRasterWindowSurface@@
.?AVQWindowSurface@@
.?AVQGLWindowSurfaceGLPaintDevice@@
.?AVQGLWindowSurface@@
.?AVQGLPixmapGLPaintDevice@@
.?AVQGLPixmapData@@
.?AVQPixmapData@@
.?AV?$QGLContextGroupResource@VQGL2GradientCache@@@@
.?AV?$QGLContextGroupResource@VQGLEngineSharedShaders@@@@
.?AVQGLEngineShaderManager@@
.?AVQStaticTextUserData@@
.?AVQGL2PaintEngineEx@@
.?AVQOpenGL2PaintEngineState@@
.?AVQOpenGLStaticTextUserData@?A0x71abc12a@@
.?AV?$QGLContextGroupResource@UQGLGlyphTexture@@@@
.?AVQGL2PaintEngineExPrivate@@
.?AVQGLTextureGlyphCache@@
.?AVQImageTextureGlyphCache@@
.?AVQTextureGlyphCache@@
.?AVQFontEngineGlyphCache@@
.?AVQSharedData@@
.?AVtype_info@@
.?AVbad_exception@std@@
.?AVexception@std@@
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
.?AVbad_cast@std@@
.?AVbad_typeid@std@@
.?AV__non_rtti_object@std@@
fffffff
Q5rHg,>
.>PJ;I:qE>
/2GG>!B
zY;>u:m	
0><[cZUg^>
"e?<<<<<<l?
Il?333333c?
d?000000`?
L?UUUUUUU?
&?PPPPPPP?
qS>g?h3
c?FA@s}
[*ncd>0
S>$hkDh$h>[2
UA>N0Wl
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    <security>
      <requestedPrivileges>
        <requestedExecutionLevel level="asInvoker" uiAccess="false"></requestedExecutionLevel>
      </requestedPrivileges>
    </security>
  </trustInfo>
</assembly>PAPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPAD
